/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import it.ethica.esf.model.VW_Azzurri;
import it.ethica.esf.model.VW_AzzurriModel;
import it.ethica.esf.service.persistence.VW_AzzurriPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VW_Azzurri service. Represents a row in the &quot;vw_azzurri&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.VW_AzzurriModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VW_AzzurriImpl}.
 * </p>
 *
 * @author Ethica
 * @see VW_AzzurriImpl
 * @see it.ethica.esf.model.VW_Azzurri
 * @see it.ethica.esf.model.VW_AzzurriModel
 * @generated
 */
public class VW_AzzurriModelImpl extends BaseModelImpl<VW_Azzurri>
	implements VW_AzzurriModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v w_ azzurri model instance should use the {@link it.ethica.esf.model.VW_Azzurri} interface instead.
	 */
	public static final String TABLE_NAME = "vw_azzurri";
	public static final Object[][] TABLE_COLUMNS = {
			{ "esfNationalId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "esfUserId", Types.BIGINT },
			{ "esfSportTypeId", Types.BIGINT },
			{ "startDate", Types.TIMESTAMP },
			{ "endDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "invitato", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table vw_azzurri (esfNationalId LONG not null,userId LONG not null,userName VARCHAR(75) null,esfUserId LONG not null,esfSportTypeId LONG,startDate DATE null,endDate DATE null,name VARCHAR(75) null,description VARCHAR(75) null,invitato INTEGER,primary key (esfNationalId, userId, esfUserId))";
	public static final String TABLE_SQL_DROP = "drop table vw_azzurri";
	public static final String ORDER_BY_JPQL = " ORDER BY vw_Azzurri.id.esfNationalId ASC, vw_Azzurri.id.userId ASC, vw_Azzurri.id.esfUserId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vw_azzurri.esfNationalId ASC, vw_azzurri.userId ASC, vw_azzurri.esfUserId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.VW_Azzurri"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.VW_Azzurri"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.VW_Azzurri"));

	public VW_AzzurriModelImpl() {
	}

	@Override
	public VW_AzzurriPK getPrimaryKey() {
		return new VW_AzzurriPK(_esfNationalId, _userId, _esfUserId);
	}

	@Override
	public void setPrimaryKey(VW_AzzurriPK primaryKey) {
		setEsfNationalId(primaryKey.esfNationalId);
		setUserId(primaryKey.userId);
		setEsfUserId(primaryKey.esfUserId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new VW_AzzurriPK(_esfNationalId, _userId, _esfUserId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((VW_AzzurriPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VW_Azzurri.class;
	}

	@Override
	public String getModelClassName() {
		return VW_Azzurri.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("esfNationalId", getEsfNationalId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("esfUserId", getEsfUserId());
		attributes.put("esfSportTypeId", getEsfSportTypeId());
		attributes.put("startDate", getStartDate());
		attributes.put("endDate", getEndDate());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("invitato", getInvitato());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long esfNationalId = (Long)attributes.get("esfNationalId");

		if (esfNationalId != null) {
			setEsfNationalId(esfNationalId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Long esfUserId = (Long)attributes.get("esfUserId");

		if (esfUserId != null) {
			setEsfUserId(esfUserId);
		}

		Long esfSportTypeId = (Long)attributes.get("esfSportTypeId");

		if (esfSportTypeId != null) {
			setEsfSportTypeId(esfSportTypeId);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Integer invitato = (Integer)attributes.get("invitato");

		if (invitato != null) {
			setInvitato(invitato);
		}
	}

	@Override
	public long getEsfNationalId() {
		return _esfNationalId;
	}

	@Override
	public void setEsfNationalId(long esfNationalId) {
		_esfNationalId = esfNationalId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public long getEsfUserId() {
		return _esfUserId;
	}

	@Override
	public void setEsfUserId(long esfUserId) {
		_esfUserId = esfUserId;
	}

	@Override
	public String getEsfUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getEsfUserId(), "uuid", _esfUserUuid);
	}

	@Override
	public void setEsfUserUuid(String esfUserUuid) {
		_esfUserUuid = esfUserUuid;
	}

	@Override
	public long getEsfSportTypeId() {
		return _esfSportTypeId;
	}

	@Override
	public void setEsfSportTypeId(long esfSportTypeId) {
		_esfSportTypeId = esfSportTypeId;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public int getInvitato() {
		return _invitato;
	}

	@Override
	public void setInvitato(int invitato) {
		_invitato = invitato;
	}

	@Override
	public VW_Azzurri toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VW_Azzurri)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VW_AzzurriImpl vw_AzzurriImpl = new VW_AzzurriImpl();

		vw_AzzurriImpl.setEsfNationalId(getEsfNationalId());
		vw_AzzurriImpl.setUserId(getUserId());
		vw_AzzurriImpl.setUserName(getUserName());
		vw_AzzurriImpl.setEsfUserId(getEsfUserId());
		vw_AzzurriImpl.setEsfSportTypeId(getEsfSportTypeId());
		vw_AzzurriImpl.setStartDate(getStartDate());
		vw_AzzurriImpl.setEndDate(getEndDate());
		vw_AzzurriImpl.setName(getName());
		vw_AzzurriImpl.setDescription(getDescription());
		vw_AzzurriImpl.setInvitato(getInvitato());

		vw_AzzurriImpl.resetOriginalValues();

		return vw_AzzurriImpl;
	}

	@Override
	public int compareTo(VW_Azzurri vw_Azzurri) {
		VW_AzzurriPK primaryKey = vw_Azzurri.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VW_Azzurri)) {
			return false;
		}

		VW_Azzurri vw_Azzurri = (VW_Azzurri)obj;

		VW_AzzurriPK primaryKey = vw_Azzurri.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<VW_Azzurri> toCacheModel() {
		VW_AzzurriCacheModel vw_AzzurriCacheModel = new VW_AzzurriCacheModel();

		vw_AzzurriCacheModel.esfNationalId = getEsfNationalId();

		vw_AzzurriCacheModel.userId = getUserId();

		vw_AzzurriCacheModel.userName = getUserName();

		String userName = vw_AzzurriCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			vw_AzzurriCacheModel.userName = null;
		}

		vw_AzzurriCacheModel.esfUserId = getEsfUserId();

		vw_AzzurriCacheModel.esfSportTypeId = getEsfSportTypeId();

		Date startDate = getStartDate();

		if (startDate != null) {
			vw_AzzurriCacheModel.startDate = startDate.getTime();
		}
		else {
			vw_AzzurriCacheModel.startDate = Long.MIN_VALUE;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			vw_AzzurriCacheModel.endDate = endDate.getTime();
		}
		else {
			vw_AzzurriCacheModel.endDate = Long.MIN_VALUE;
		}

		vw_AzzurriCacheModel.name = getName();

		String name = vw_AzzurriCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			vw_AzzurriCacheModel.name = null;
		}

		vw_AzzurriCacheModel.description = getDescription();

		String description = vw_AzzurriCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			vw_AzzurriCacheModel.description = null;
		}

		vw_AzzurriCacheModel.invitato = getInvitato();

		return vw_AzzurriCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{esfNationalId=");
		sb.append(getEsfNationalId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", esfUserId=");
		sb.append(getEsfUserId());
		sb.append(", esfSportTypeId=");
		sb.append(getEsfSportTypeId());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", invitato=");
		sb.append(getInvitato());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.VW_Azzurri");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>esfNationalId</column-name><column-value><![CDATA[");
		sb.append(getEsfNationalId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfUserId</column-name><column-value><![CDATA[");
		sb.append(getEsfUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfSportTypeId</column-name><column-value><![CDATA[");
		sb.append(getEsfSportTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invitato</column-name><column-value><![CDATA[");
		sb.append(getInvitato());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VW_Azzurri.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VW_Azzurri.class
		};
	private long _esfNationalId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private long _esfUserId;
	private String _esfUserUuid;
	private long _esfSportTypeId;
	private Date _startDate;
	private Date _endDate;
	private String _name;
	private String _description;
	private int _invitato;
	private VW_Azzurri _escapedModel;
}