/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFPartecipant;
import it.ethica.esf.model.ESFPartecipantModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFPartecipant service. Represents a row in the &quot;ESFPartecipant&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFPartecipantModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFPartecipantImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFPartecipantImpl
 * @see it.ethica.esf.model.ESFPartecipant
 * @see it.ethica.esf.model.ESFPartecipantModel
 * @generated
 */
public class ESFPartecipantModelImpl extends BaseModelImpl<ESFPartecipant>
	implements ESFPartecipantModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f partecipant model instance should use the {@link it.ethica.esf.model.ESFPartecipant} interface instead.
	 */
	public static final String TABLE_NAME = "ESFPartecipant";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "esfPartecipantId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "esfUserId", Types.BIGINT },
			{ "esfMatchId", Types.BIGINT },
			{ "esfTeamId", Types.BIGINT },
			{ "ct", Types.BIGINT },
			{ "esfPartecipantTypeId", Types.BIGINT },
			{ "result", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFPartecipant (uuid_ VARCHAR(75) null,esfPartecipantId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,esfUserId LONG,esfMatchId LONG,esfTeamId LONG,ct LONG,esfPartecipantTypeId LONG,result LONG)";
	public static final String TABLE_SQL_DROP = "drop table ESFPartecipant";
	public static final String ORDER_BY_JPQL = " ORDER BY esfPartecipant.esfPartecipantId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFPartecipant.esfPartecipantId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFPartecipant"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFPartecipant"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFPartecipant"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long ESFMATCHID_COLUMN_BITMASK = 2L;
	public static long ESFPARTECIPANTTYPEID_COLUMN_BITMASK = 4L;
	public static long ESFUSERID_COLUMN_BITMASK = 8L;
	public static long GROUPID_COLUMN_BITMASK = 16L;
	public static long USERID_COLUMN_BITMASK = 32L;
	public static long UUID_COLUMN_BITMASK = 64L;
	public static long ESFPARTECIPANTID_COLUMN_BITMASK = 128L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFPartecipant"));

	public ESFPartecipantModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfPartecipantId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfPartecipantId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfPartecipantId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFPartecipant.class;
	}

	@Override
	public String getModelClassName() {
		return ESFPartecipant.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("esfPartecipantId", getEsfPartecipantId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("esfUserId", getEsfUserId());
		attributes.put("esfMatchId", getEsfMatchId());
		attributes.put("esfTeamId", getEsfTeamId());
		attributes.put("ct", getCt());
		attributes.put("esfPartecipantTypeId", getEsfPartecipantTypeId());
		attributes.put("result", getResult());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long esfPartecipantId = (Long)attributes.get("esfPartecipantId");

		if (esfPartecipantId != null) {
			setEsfPartecipantId(esfPartecipantId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long esfUserId = (Long)attributes.get("esfUserId");

		if (esfUserId != null) {
			setEsfUserId(esfUserId);
		}

		Long esfMatchId = (Long)attributes.get("esfMatchId");

		if (esfMatchId != null) {
			setEsfMatchId(esfMatchId);
		}

		Long esfTeamId = (Long)attributes.get("esfTeamId");

		if (esfTeamId != null) {
			setEsfTeamId(esfTeamId);
		}

		Long ct = (Long)attributes.get("ct");

		if (ct != null) {
			setCt(ct);
		}

		Long esfPartecipantTypeId = (Long)attributes.get("esfPartecipantTypeId");

		if (esfPartecipantTypeId != null) {
			setEsfPartecipantTypeId(esfPartecipantTypeId);
		}

		Long result = (Long)attributes.get("result");

		if (result != null) {
			setResult(result);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getEsfPartecipantId() {
		return _esfPartecipantId;
	}

	@Override
	public void setEsfPartecipantId(long esfPartecipantId) {
		_esfPartecipantId = esfPartecipantId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getEsfUserId() {
		return _esfUserId;
	}

	@Override
	public void setEsfUserId(long esfUserId) {
		_columnBitmask |= ESFUSERID_COLUMN_BITMASK;

		if (!_setOriginalEsfUserId) {
			_setOriginalEsfUserId = true;

			_originalEsfUserId = _esfUserId;
		}

		_esfUserId = esfUserId;
	}

	@Override
	public String getEsfUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getEsfUserId(), "uuid", _esfUserUuid);
	}

	@Override
	public void setEsfUserUuid(String esfUserUuid) {
		_esfUserUuid = esfUserUuid;
	}

	public long getOriginalEsfUserId() {
		return _originalEsfUserId;
	}

	@Override
	public long getEsfMatchId() {
		return _esfMatchId;
	}

	@Override
	public void setEsfMatchId(long esfMatchId) {
		_columnBitmask |= ESFMATCHID_COLUMN_BITMASK;

		if (!_setOriginalEsfMatchId) {
			_setOriginalEsfMatchId = true;

			_originalEsfMatchId = _esfMatchId;
		}

		_esfMatchId = esfMatchId;
	}

	public long getOriginalEsfMatchId() {
		return _originalEsfMatchId;
	}

	@Override
	public long getEsfTeamId() {
		return _esfTeamId;
	}

	@Override
	public void setEsfTeamId(long esfTeamId) {
		_esfTeamId = esfTeamId;
	}

	@Override
	public long getCt() {
		return _ct;
	}

	@Override
	public void setCt(long ct) {
		_ct = ct;
	}

	@Override
	public long getEsfPartecipantTypeId() {
		return _esfPartecipantTypeId;
	}

	@Override
	public void setEsfPartecipantTypeId(long esfPartecipantTypeId) {
		_columnBitmask |= ESFPARTECIPANTTYPEID_COLUMN_BITMASK;

		if (!_setOriginalEsfPartecipantTypeId) {
			_setOriginalEsfPartecipantTypeId = true;

			_originalEsfPartecipantTypeId = _esfPartecipantTypeId;
		}

		_esfPartecipantTypeId = esfPartecipantTypeId;
	}

	public long getOriginalEsfPartecipantTypeId() {
		return _originalEsfPartecipantTypeId;
	}

	@Override
	public long getResult() {
		return _result;
	}

	@Override
	public void setResult(long result) {
		_result = result;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				ESFPartecipant.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ESFPartecipant.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFPartecipant toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFPartecipant)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFPartecipantImpl esfPartecipantImpl = new ESFPartecipantImpl();

		esfPartecipantImpl.setUuid(getUuid());
		esfPartecipantImpl.setEsfPartecipantId(getEsfPartecipantId());
		esfPartecipantImpl.setGroupId(getGroupId());
		esfPartecipantImpl.setCompanyId(getCompanyId());
		esfPartecipantImpl.setUserId(getUserId());
		esfPartecipantImpl.setUserName(getUserName());
		esfPartecipantImpl.setCreateDate(getCreateDate());
		esfPartecipantImpl.setModifiedDate(getModifiedDate());
		esfPartecipantImpl.setEsfUserId(getEsfUserId());
		esfPartecipantImpl.setEsfMatchId(getEsfMatchId());
		esfPartecipantImpl.setEsfTeamId(getEsfTeamId());
		esfPartecipantImpl.setCt(getCt());
		esfPartecipantImpl.setEsfPartecipantTypeId(getEsfPartecipantTypeId());
		esfPartecipantImpl.setResult(getResult());

		esfPartecipantImpl.resetOriginalValues();

		return esfPartecipantImpl;
	}

	@Override
	public int compareTo(ESFPartecipant esfPartecipant) {
		long primaryKey = esfPartecipant.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFPartecipant)) {
			return false;
		}

		ESFPartecipant esfPartecipant = (ESFPartecipant)obj;

		long primaryKey = esfPartecipant.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFPartecipantModelImpl esfPartecipantModelImpl = this;

		esfPartecipantModelImpl._originalUuid = esfPartecipantModelImpl._uuid;

		esfPartecipantModelImpl._originalGroupId = esfPartecipantModelImpl._groupId;

		esfPartecipantModelImpl._setOriginalGroupId = false;

		esfPartecipantModelImpl._originalCompanyId = esfPartecipantModelImpl._companyId;

		esfPartecipantModelImpl._setOriginalCompanyId = false;

		esfPartecipantModelImpl._originalUserId = esfPartecipantModelImpl._userId;

		esfPartecipantModelImpl._setOriginalUserId = false;

		esfPartecipantModelImpl._originalEsfUserId = esfPartecipantModelImpl._esfUserId;

		esfPartecipantModelImpl._setOriginalEsfUserId = false;

		esfPartecipantModelImpl._originalEsfMatchId = esfPartecipantModelImpl._esfMatchId;

		esfPartecipantModelImpl._setOriginalEsfMatchId = false;

		esfPartecipantModelImpl._originalEsfPartecipantTypeId = esfPartecipantModelImpl._esfPartecipantTypeId;

		esfPartecipantModelImpl._setOriginalEsfPartecipantTypeId = false;

		esfPartecipantModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFPartecipant> toCacheModel() {
		ESFPartecipantCacheModel esfPartecipantCacheModel = new ESFPartecipantCacheModel();

		esfPartecipantCacheModel.uuid = getUuid();

		String uuid = esfPartecipantCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			esfPartecipantCacheModel.uuid = null;
		}

		esfPartecipantCacheModel.esfPartecipantId = getEsfPartecipantId();

		esfPartecipantCacheModel.groupId = getGroupId();

		esfPartecipantCacheModel.companyId = getCompanyId();

		esfPartecipantCacheModel.userId = getUserId();

		esfPartecipantCacheModel.userName = getUserName();

		String userName = esfPartecipantCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			esfPartecipantCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			esfPartecipantCacheModel.createDate = createDate.getTime();
		}
		else {
			esfPartecipantCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			esfPartecipantCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			esfPartecipantCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		esfPartecipantCacheModel.esfUserId = getEsfUserId();

		esfPartecipantCacheModel.esfMatchId = getEsfMatchId();

		esfPartecipantCacheModel.esfTeamId = getEsfTeamId();

		esfPartecipantCacheModel.ct = getCt();

		esfPartecipantCacheModel.esfPartecipantTypeId = getEsfPartecipantTypeId();

		esfPartecipantCacheModel.result = getResult();

		return esfPartecipantCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", esfPartecipantId=");
		sb.append(getEsfPartecipantId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", esfUserId=");
		sb.append(getEsfUserId());
		sb.append(", esfMatchId=");
		sb.append(getEsfMatchId());
		sb.append(", esfTeamId=");
		sb.append(getEsfTeamId());
		sb.append(", ct=");
		sb.append(getCt());
		sb.append(", esfPartecipantTypeId=");
		sb.append(getEsfPartecipantTypeId());
		sb.append(", result=");
		sb.append(getResult());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFPartecipant");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfPartecipantId</column-name><column-value><![CDATA[");
		sb.append(getEsfPartecipantId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfUserId</column-name><column-value><![CDATA[");
		sb.append(getEsfUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfMatchId</column-name><column-value><![CDATA[");
		sb.append(getEsfMatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfTeamId</column-name><column-value><![CDATA[");
		sb.append(getEsfTeamId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ct</column-name><column-value><![CDATA[");
		sb.append(getCt());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfPartecipantTypeId</column-name><column-value><![CDATA[");
		sb.append(getEsfPartecipantTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>result</column-name><column-value><![CDATA[");
		sb.append(getResult());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFPartecipant.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFPartecipant.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _esfPartecipantId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _esfUserId;
	private String _esfUserUuid;
	private long _originalEsfUserId;
	private boolean _setOriginalEsfUserId;
	private long _esfMatchId;
	private long _originalEsfMatchId;
	private boolean _setOriginalEsfMatchId;
	private long _esfTeamId;
	private long _ct;
	private long _esfPartecipantTypeId;
	private long _originalEsfPartecipantTypeId;
	private boolean _setOriginalEsfPartecipantTypeId;
	private long _result;
	private long _columnBitmask;
	private ESFPartecipant _escapedModel;
}