/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFRaduno;
import it.ethica.esf.model.ESFRadunoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFRaduno service. Represents a row in the &quot;ESFRaduno&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFRadunoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFRadunoImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFRadunoImpl
 * @see it.ethica.esf.model.ESFRaduno
 * @see it.ethica.esf.model.ESFRadunoModel
 * @generated
 */
public class ESFRadunoModelImpl extends BaseModelImpl<ESFRaduno>
	implements ESFRadunoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f raduno model instance should use the {@link it.ethica.esf.model.ESFRaduno} interface instead.
	 */
	public static final String TABLE_NAME = "ESFRaduno";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_esf_raduno", Types.BIGINT },
			{ "codice", Types.VARCHAR },
			{ "data_inizio", Types.TIMESTAMP },
			{ "data_fine", Types.TIMESTAMP },
			{ "tipo_raduno", Types.BIGINT },
			{ "id_sottotipo_raduno", Types.BIGINT },
			{ "note", Types.VARCHAR },
			{ "id_associazione_ospitante", Types.BIGINT },
			{ "altra_sede_ospitante", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFRaduno (id_esf_raduno LONG not null primary key IDENTITY,codice VARCHAR(75) null,data_inizio DATE null,data_fine DATE null,tipo_raduno LONG,id_sottotipo_raduno LONG,note VARCHAR(75) null,id_associazione_ospitante LONG,altra_sede_ospitante VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ESFRaduno";
	public static final String ORDER_BY_JPQL = " ORDER BY esfRaduno.id_esf_raduno ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFRaduno.id_esf_raduno ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFRaduno"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFRaduno"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFRaduno"));

	public ESFRadunoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id_esf_raduno;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId_esf_raduno(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id_esf_raduno;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFRaduno.class;
	}

	@Override
	public String getModelClassName() {
		return ESFRaduno.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_esf_raduno", getId_esf_raduno());
		attributes.put("codice", getCodice());
		attributes.put("data_inizio", getData_inizio());
		attributes.put("data_fine", getData_fine());
		attributes.put("tipo_raduno", getTipo_raduno());
		attributes.put("id_sottotipo_raduno", getId_sottotipo_raduno());
		attributes.put("note", getNote());
		attributes.put("id_associazione_ospitante",
			getId_associazione_ospitante());
		attributes.put("altra_sede_ospitante", getAltra_sede_ospitante());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id_esf_raduno = (Long)attributes.get("id_esf_raduno");

		if (id_esf_raduno != null) {
			setId_esf_raduno(id_esf_raduno);
		}

		String codice = (String)attributes.get("codice");

		if (codice != null) {
			setCodice(codice);
		}

		Date data_inizio = (Date)attributes.get("data_inizio");

		if (data_inizio != null) {
			setData_inizio(data_inizio);
		}

		Date data_fine = (Date)attributes.get("data_fine");

		if (data_fine != null) {
			setData_fine(data_fine);
		}

		Long tipo_raduno = (Long)attributes.get("tipo_raduno");

		if (tipo_raduno != null) {
			setTipo_raduno(tipo_raduno);
		}

		Long id_sottotipo_raduno = (Long)attributes.get("id_sottotipo_raduno");

		if (id_sottotipo_raduno != null) {
			setId_sottotipo_raduno(id_sottotipo_raduno);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		Long id_associazione_ospitante = (Long)attributes.get(
				"id_associazione_ospitante");

		if (id_associazione_ospitante != null) {
			setId_associazione_ospitante(id_associazione_ospitante);
		}

		String altra_sede_ospitante = (String)attributes.get(
				"altra_sede_ospitante");

		if (altra_sede_ospitante != null) {
			setAltra_sede_ospitante(altra_sede_ospitante);
		}
	}

	@Override
	public long getId_esf_raduno() {
		return _id_esf_raduno;
	}

	@Override
	public void setId_esf_raduno(long id_esf_raduno) {
		_id_esf_raduno = id_esf_raduno;
	}

	@Override
	public String getCodice() {
		if (_codice == null) {
			return StringPool.BLANK;
		}
		else {
			return _codice;
		}
	}

	@Override
	public void setCodice(String codice) {
		_codice = codice;
	}

	@Override
	public Date getData_inizio() {
		return _data_inizio;
	}

	@Override
	public void setData_inizio(Date data_inizio) {
		_data_inizio = data_inizio;
	}

	@Override
	public Date getData_fine() {
		return _data_fine;
	}

	@Override
	public void setData_fine(Date data_fine) {
		_data_fine = data_fine;
	}

	@Override
	public long getTipo_raduno() {
		return _tipo_raduno;
	}

	@Override
	public void setTipo_raduno(long tipo_raduno) {
		_tipo_raduno = tipo_raduno;
	}

	@Override
	public long getId_sottotipo_raduno() {
		return _id_sottotipo_raduno;
	}

	@Override
	public void setId_sottotipo_raduno(long id_sottotipo_raduno) {
		_id_sottotipo_raduno = id_sottotipo_raduno;
	}

	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@Override
	public long getId_associazione_ospitante() {
		return _id_associazione_ospitante;
	}

	@Override
	public void setId_associazione_ospitante(long id_associazione_ospitante) {
		_id_associazione_ospitante = id_associazione_ospitante;
	}

	@Override
	public String getAltra_sede_ospitante() {
		if (_altra_sede_ospitante == null) {
			return StringPool.BLANK;
		}
		else {
			return _altra_sede_ospitante;
		}
	}

	@Override
	public void setAltra_sede_ospitante(String altra_sede_ospitante) {
		_altra_sede_ospitante = altra_sede_ospitante;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ESFRaduno.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFRaduno toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFRaduno)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFRadunoImpl esfRadunoImpl = new ESFRadunoImpl();

		esfRadunoImpl.setId_esf_raduno(getId_esf_raduno());
		esfRadunoImpl.setCodice(getCodice());
		esfRadunoImpl.setData_inizio(getData_inizio());
		esfRadunoImpl.setData_fine(getData_fine());
		esfRadunoImpl.setTipo_raduno(getTipo_raduno());
		esfRadunoImpl.setId_sottotipo_raduno(getId_sottotipo_raduno());
		esfRadunoImpl.setNote(getNote());
		esfRadunoImpl.setId_associazione_ospitante(getId_associazione_ospitante());
		esfRadunoImpl.setAltra_sede_ospitante(getAltra_sede_ospitante());

		esfRadunoImpl.resetOriginalValues();

		return esfRadunoImpl;
	}

	@Override
	public int compareTo(ESFRaduno esfRaduno) {
		long primaryKey = esfRaduno.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFRaduno)) {
			return false;
		}

		ESFRaduno esfRaduno = (ESFRaduno)obj;

		long primaryKey = esfRaduno.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ESFRaduno> toCacheModel() {
		ESFRadunoCacheModel esfRadunoCacheModel = new ESFRadunoCacheModel();

		esfRadunoCacheModel.id_esf_raduno = getId_esf_raduno();

		esfRadunoCacheModel.codice = getCodice();

		String codice = esfRadunoCacheModel.codice;

		if ((codice != null) && (codice.length() == 0)) {
			esfRadunoCacheModel.codice = null;
		}

		Date data_inizio = getData_inizio();

		if (data_inizio != null) {
			esfRadunoCacheModel.data_inizio = data_inizio.getTime();
		}
		else {
			esfRadunoCacheModel.data_inizio = Long.MIN_VALUE;
		}

		Date data_fine = getData_fine();

		if (data_fine != null) {
			esfRadunoCacheModel.data_fine = data_fine.getTime();
		}
		else {
			esfRadunoCacheModel.data_fine = Long.MIN_VALUE;
		}

		esfRadunoCacheModel.tipo_raduno = getTipo_raduno();

		esfRadunoCacheModel.id_sottotipo_raduno = getId_sottotipo_raduno();

		esfRadunoCacheModel.note = getNote();

		String note = esfRadunoCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			esfRadunoCacheModel.note = null;
		}

		esfRadunoCacheModel.id_associazione_ospitante = getId_associazione_ospitante();

		esfRadunoCacheModel.altra_sede_ospitante = getAltra_sede_ospitante();

		String altra_sede_ospitante = esfRadunoCacheModel.altra_sede_ospitante;

		if ((altra_sede_ospitante != null) &&
				(altra_sede_ospitante.length() == 0)) {
			esfRadunoCacheModel.altra_sede_ospitante = null;
		}

		return esfRadunoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{id_esf_raduno=");
		sb.append(getId_esf_raduno());
		sb.append(", codice=");
		sb.append(getCodice());
		sb.append(", data_inizio=");
		sb.append(getData_inizio());
		sb.append(", data_fine=");
		sb.append(getData_fine());
		sb.append(", tipo_raduno=");
		sb.append(getTipo_raduno());
		sb.append(", id_sottotipo_raduno=");
		sb.append(getId_sottotipo_raduno());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", id_associazione_ospitante=");
		sb.append(getId_associazione_ospitante());
		sb.append(", altra_sede_ospitante=");
		sb.append(getAltra_sede_ospitante());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFRaduno");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_esf_raduno</column-name><column-value><![CDATA[");
		sb.append(getId_esf_raduno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>codice</column-name><column-value><![CDATA[");
		sb.append(getCodice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_inizio</column-name><column-value><![CDATA[");
		sb.append(getData_inizio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data_fine</column-name><column-value><![CDATA[");
		sb.append(getData_fine());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipo_raduno</column-name><column-value><![CDATA[");
		sb.append(getTipo_raduno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_sottotipo_raduno</column-name><column-value><![CDATA[");
		sb.append(getId_sottotipo_raduno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_associazione_ospitante</column-name><column-value><![CDATA[");
		sb.append(getId_associazione_ospitante());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>altra_sede_ospitante</column-name><column-value><![CDATA[");
		sb.append(getAltra_sede_ospitante());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFRaduno.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFRaduno.class
		};
	private long _id_esf_raduno;
	private String _codice;
	private Date _data_inizio;
	private Date _data_fine;
	private long _tipo_raduno;
	private long _id_sottotipo_raduno;
	private String _note;
	private long _id_associazione_ospitante;
	private String _altra_sede_ospitante;
	private ESFRaduno _escapedModel;
}