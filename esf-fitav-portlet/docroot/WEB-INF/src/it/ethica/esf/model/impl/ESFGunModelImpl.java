/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFGun;
import it.ethica.esf.model.ESFGunModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFGun service. Represents a row in the &quot;ESFGun&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFGunModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFGunImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFGunImpl
 * @see it.ethica.esf.model.ESFGun
 * @see it.ethica.esf.model.ESFGunModel
 * @generated
 */
@JSON(strict = true)
public class ESFGunModelImpl extends BaseModelImpl<ESFGun>
	implements ESFGunModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f gun model instance should use the {@link it.ethica.esf.model.ESFGun} interface instead.
	 */
	public static final String TABLE_NAME = "ESFGun";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "esfGunId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "esfUserId", Types.BIGINT },
			{ "code_", Types.VARCHAR },
			{ "esfGunKindId", Types.BIGINT },
			{ "esfOrganizationId", Types.BIGINT },
			{ "registrationNumber", Types.VARCHAR },
			{ "catridgeCaliber", Types.BIGINT },
			{ "isFavoriteGun", Types.BOOLEAN },
			{ "typeId", Types.INTEGER },
			{ "measures", Types.VARCHAR },
			{ "note", Types.VARCHAR },
			{ "name", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFGun (uuid_ VARCHAR(75) null,esfGunId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,esfUserId LONG,code_ VARCHAR(75) null,esfGunKindId LONG,esfOrganizationId LONG,registrationNumber VARCHAR(75) null,catridgeCaliber LONG,isFavoriteGun BOOLEAN,typeId INTEGER,measures VARCHAR(75) null,note VARCHAR(75) null,name VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ESFGun";
	public static final String ORDER_BY_JPQL = " ORDER BY esfGun.name ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFGun.name ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFGun"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFGun"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFGun"),
			true);
	public static long CODE_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long ESFGUNKINDID_COLUMN_BITMASK = 4L;
	public static long ESFORGANIZATIONID_COLUMN_BITMASK = 8L;
	public static long ESFUSERID_COLUMN_BITMASK = 16L;
	public static long GROUPID_COLUMN_BITMASK = 32L;
	public static long UUID_COLUMN_BITMASK = 64L;
	public static long NAME_COLUMN_BITMASK = 128L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFGun"));

	public ESFGunModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfGunId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfGunId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfGunId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFGun.class;
	}

	@Override
	public String getModelClassName() {
		return ESFGun.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("esfGunId", getEsfGunId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("esfUserId", getEsfUserId());
		attributes.put("code", getCode());
		attributes.put("esfGunKindId", getEsfGunKindId());
		attributes.put("esfOrganizationId", getEsfOrganizationId());
		attributes.put("registrationNumber", getRegistrationNumber());
		attributes.put("catridgeCaliber", getCatridgeCaliber());
		attributes.put("isFavoriteGun", getIsFavoriteGun());
		attributes.put("typeId", getTypeId());
		attributes.put("measures", getMeasures());
		attributes.put("note", getNote());
		attributes.put("name", getName());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long esfGunId = (Long)attributes.get("esfGunId");

		if (esfGunId != null) {
			setEsfGunId(esfGunId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long esfUserId = (Long)attributes.get("esfUserId");

		if (esfUserId != null) {
			setEsfUserId(esfUserId);
		}

		String code = (String)attributes.get("code");

		if (code != null) {
			setCode(code);
		}

		Long esfGunKindId = (Long)attributes.get("esfGunKindId");

		if (esfGunKindId != null) {
			setEsfGunKindId(esfGunKindId);
		}

		Long esfOrganizationId = (Long)attributes.get("esfOrganizationId");

		if (esfOrganizationId != null) {
			setEsfOrganizationId(esfOrganizationId);
		}

		String registrationNumber = (String)attributes.get("registrationNumber");

		if (registrationNumber != null) {
			setRegistrationNumber(registrationNumber);
		}

		Long catridgeCaliber = (Long)attributes.get("catridgeCaliber");

		if (catridgeCaliber != null) {
			setCatridgeCaliber(catridgeCaliber);
		}

		Boolean isFavoriteGun = (Boolean)attributes.get("isFavoriteGun");

		if (isFavoriteGun != null) {
			setIsFavoriteGun(isFavoriteGun);
		}

		Integer typeId = (Integer)attributes.get("typeId");

		if (typeId != null) {
			setTypeId(typeId);
		}

		String measures = (String)attributes.get("measures");

		if (measures != null) {
			setMeasures(measures);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getEsfGunId() {
		return _esfGunId;
	}

	@Override
	public void setEsfGunId(long esfGunId) {
		_esfGunId = esfGunId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getEsfUserId() {
		return _esfUserId;
	}

	@Override
	public void setEsfUserId(long esfUserId) {
		_columnBitmask |= ESFUSERID_COLUMN_BITMASK;

		if (!_setOriginalEsfUserId) {
			_setOriginalEsfUserId = true;

			_originalEsfUserId = _esfUserId;
		}

		_esfUserId = esfUserId;
	}

	@Override
	public String getEsfUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getEsfUserId(), "uuid", _esfUserUuid);
	}

	@Override
	public void setEsfUserUuid(String esfUserUuid) {
		_esfUserUuid = esfUserUuid;
	}

	public long getOriginalEsfUserId() {
		return _originalEsfUserId;
	}

	@JSON
	@Override
	public String getCode() {
		if (_code == null) {
			return StringPool.BLANK;
		}
		else {
			return _code;
		}
	}

	@Override
	public void setCode(String code) {
		_columnBitmask |= CODE_COLUMN_BITMASK;

		if (_originalCode == null) {
			_originalCode = _code;
		}

		_code = code;
	}

	public String getOriginalCode() {
		return GetterUtil.getString(_originalCode);
	}

	@JSON
	@Override
	public long getEsfGunKindId() {
		return _esfGunKindId;
	}

	@Override
	public void setEsfGunKindId(long esfGunKindId) {
		_columnBitmask |= ESFGUNKINDID_COLUMN_BITMASK;

		if (!_setOriginalEsfGunKindId) {
			_setOriginalEsfGunKindId = true;

			_originalEsfGunKindId = _esfGunKindId;
		}

		_esfGunKindId = esfGunKindId;
	}

	public long getOriginalEsfGunKindId() {
		return _originalEsfGunKindId;
	}

	@JSON
	@Override
	public long getEsfOrganizationId() {
		return _esfOrganizationId;
	}

	@Override
	public void setEsfOrganizationId(long esfOrganizationId) {
		_columnBitmask |= ESFORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalEsfOrganizationId) {
			_setOriginalEsfOrganizationId = true;

			_originalEsfOrganizationId = _esfOrganizationId;
		}

		_esfOrganizationId = esfOrganizationId;
	}

	public long getOriginalEsfOrganizationId() {
		return _originalEsfOrganizationId;
	}

	@JSON
	@Override
	public String getRegistrationNumber() {
		if (_registrationNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _registrationNumber;
		}
	}

	@Override
	public void setRegistrationNumber(String registrationNumber) {
		_registrationNumber = registrationNumber;
	}

	@JSON
	@Override
	public long getCatridgeCaliber() {
		return _catridgeCaliber;
	}

	@Override
	public void setCatridgeCaliber(long catridgeCaliber) {
		_catridgeCaliber = catridgeCaliber;
	}

	@JSON
	@Override
	public boolean getIsFavoriteGun() {
		return _isFavoriteGun;
	}

	@Override
	public boolean isIsFavoriteGun() {
		return _isFavoriteGun;
	}

	@Override
	public void setIsFavoriteGun(boolean isFavoriteGun) {
		_isFavoriteGun = isFavoriteGun;
	}

	@JSON
	@Override
	public int getTypeId() {
		return _typeId;
	}

	@Override
	public void setTypeId(int typeId) {
		_typeId = typeId;
	}

	@JSON
	@Override
	public String getMeasures() {
		if (_measures == null) {
			return StringPool.BLANK;
		}
		else {
			return _measures;
		}
	}

	@Override
	public void setMeasures(String measures) {
		_measures = measures;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		_name = name;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				ESFGun.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ESFGun.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFGun toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFGun)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFGunImpl esfGunImpl = new ESFGunImpl();

		esfGunImpl.setUuid(getUuid());
		esfGunImpl.setEsfGunId(getEsfGunId());
		esfGunImpl.setGroupId(getGroupId());
		esfGunImpl.setCompanyId(getCompanyId());
		esfGunImpl.setUserId(getUserId());
		esfGunImpl.setUserName(getUserName());
		esfGunImpl.setCreateDate(getCreateDate());
		esfGunImpl.setModifiedDate(getModifiedDate());
		esfGunImpl.setEsfUserId(getEsfUserId());
		esfGunImpl.setCode(getCode());
		esfGunImpl.setEsfGunKindId(getEsfGunKindId());
		esfGunImpl.setEsfOrganizationId(getEsfOrganizationId());
		esfGunImpl.setRegistrationNumber(getRegistrationNumber());
		esfGunImpl.setCatridgeCaliber(getCatridgeCaliber());
		esfGunImpl.setIsFavoriteGun(getIsFavoriteGun());
		esfGunImpl.setTypeId(getTypeId());
		esfGunImpl.setMeasures(getMeasures());
		esfGunImpl.setNote(getNote());
		esfGunImpl.setName(getName());

		esfGunImpl.resetOriginalValues();

		return esfGunImpl;
	}

	@Override
	public int compareTo(ESFGun esfGun) {
		int value = 0;

		value = getName().compareTo(esfGun.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFGun)) {
			return false;
		}

		ESFGun esfGun = (ESFGun)obj;

		long primaryKey = esfGun.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFGunModelImpl esfGunModelImpl = this;

		esfGunModelImpl._originalUuid = esfGunModelImpl._uuid;

		esfGunModelImpl._originalGroupId = esfGunModelImpl._groupId;

		esfGunModelImpl._setOriginalGroupId = false;

		esfGunModelImpl._originalCompanyId = esfGunModelImpl._companyId;

		esfGunModelImpl._setOriginalCompanyId = false;

		esfGunModelImpl._originalEsfUserId = esfGunModelImpl._esfUserId;

		esfGunModelImpl._setOriginalEsfUserId = false;

		esfGunModelImpl._originalCode = esfGunModelImpl._code;

		esfGunModelImpl._originalEsfGunKindId = esfGunModelImpl._esfGunKindId;

		esfGunModelImpl._setOriginalEsfGunKindId = false;

		esfGunModelImpl._originalEsfOrganizationId = esfGunModelImpl._esfOrganizationId;

		esfGunModelImpl._setOriginalEsfOrganizationId = false;

		esfGunModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFGun> toCacheModel() {
		ESFGunCacheModel esfGunCacheModel = new ESFGunCacheModel();

		esfGunCacheModel.uuid = getUuid();

		String uuid = esfGunCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			esfGunCacheModel.uuid = null;
		}

		esfGunCacheModel.esfGunId = getEsfGunId();

		esfGunCacheModel.groupId = getGroupId();

		esfGunCacheModel.companyId = getCompanyId();

		esfGunCacheModel.userId = getUserId();

		esfGunCacheModel.userName = getUserName();

		String userName = esfGunCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			esfGunCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			esfGunCacheModel.createDate = createDate.getTime();
		}
		else {
			esfGunCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			esfGunCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			esfGunCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		esfGunCacheModel.esfUserId = getEsfUserId();

		esfGunCacheModel.code = getCode();

		String code = esfGunCacheModel.code;

		if ((code != null) && (code.length() == 0)) {
			esfGunCacheModel.code = null;
		}

		esfGunCacheModel.esfGunKindId = getEsfGunKindId();

		esfGunCacheModel.esfOrganizationId = getEsfOrganizationId();

		esfGunCacheModel.registrationNumber = getRegistrationNumber();

		String registrationNumber = esfGunCacheModel.registrationNumber;

		if ((registrationNumber != null) && (registrationNumber.length() == 0)) {
			esfGunCacheModel.registrationNumber = null;
		}

		esfGunCacheModel.catridgeCaliber = getCatridgeCaliber();

		esfGunCacheModel.isFavoriteGun = getIsFavoriteGun();

		esfGunCacheModel.typeId = getTypeId();

		esfGunCacheModel.measures = getMeasures();

		String measures = esfGunCacheModel.measures;

		if ((measures != null) && (measures.length() == 0)) {
			esfGunCacheModel.measures = null;
		}

		esfGunCacheModel.note = getNote();

		String note = esfGunCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			esfGunCacheModel.note = null;
		}

		esfGunCacheModel.name = getName();

		String name = esfGunCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			esfGunCacheModel.name = null;
		}

		return esfGunCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", esfGunId=");
		sb.append(getEsfGunId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", esfUserId=");
		sb.append(getEsfUserId());
		sb.append(", code=");
		sb.append(getCode());
		sb.append(", esfGunKindId=");
		sb.append(getEsfGunKindId());
		sb.append(", esfOrganizationId=");
		sb.append(getEsfOrganizationId());
		sb.append(", registrationNumber=");
		sb.append(getRegistrationNumber());
		sb.append(", catridgeCaliber=");
		sb.append(getCatridgeCaliber());
		sb.append(", isFavoriteGun=");
		sb.append(getIsFavoriteGun());
		sb.append(", typeId=");
		sb.append(getTypeId());
		sb.append(", measures=");
		sb.append(getMeasures());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", name=");
		sb.append(getName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFGun");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfGunId</column-name><column-value><![CDATA[");
		sb.append(getEsfGunId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfUserId</column-name><column-value><![CDATA[");
		sb.append(getEsfUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>code</column-name><column-value><![CDATA[");
		sb.append(getCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfGunKindId</column-name><column-value><![CDATA[");
		sb.append(getEsfGunKindId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfOrganizationId</column-name><column-value><![CDATA[");
		sb.append(getEsfOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registrationNumber</column-name><column-value><![CDATA[");
		sb.append(getRegistrationNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>catridgeCaliber</column-name><column-value><![CDATA[");
		sb.append(getCatridgeCaliber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isFavoriteGun</column-name><column-value><![CDATA[");
		sb.append(getIsFavoriteGun());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeId</column-name><column-value><![CDATA[");
		sb.append(getTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>measures</column-name><column-value><![CDATA[");
		sb.append(getMeasures());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFGun.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { ESFGun.class };
	private String _uuid;
	private String _originalUuid;
	private long _esfGunId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _esfUserId;
	private String _esfUserUuid;
	private long _originalEsfUserId;
	private boolean _setOriginalEsfUserId;
	private String _code;
	private String _originalCode;
	private long _esfGunKindId;
	private long _originalEsfGunKindId;
	private boolean _setOriginalEsfGunKindId;
	private long _esfOrganizationId;
	private long _originalEsfOrganizationId;
	private boolean _setOriginalEsfOrganizationId;
	private String _registrationNumber;
	private long _catridgeCaliber;
	private boolean _isFavoriteGun;
	private int _typeId;
	private String _measures;
	private String _note;
	private String _name;
	private long _columnBitmask;
	private ESFGun _escapedModel;
}