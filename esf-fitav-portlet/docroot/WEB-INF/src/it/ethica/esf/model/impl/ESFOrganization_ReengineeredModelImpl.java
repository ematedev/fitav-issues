/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFOrganization_Reengineered;
import it.ethica.esf.model.ESFOrganization_ReengineeredModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFOrganization_Reengineered service. Represents a row in the &quot;esforganization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFOrganization_ReengineeredModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFOrganization_ReengineeredImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFOrganization_ReengineeredImpl
 * @see it.ethica.esf.model.ESFOrganization_Reengineered
 * @see it.ethica.esf.model.ESFOrganization_ReengineeredModel
 * @generated
 */
public class ESFOrganization_ReengineeredModelImpl extends BaseModelImpl<ESFOrganization_Reengineered>
	implements ESFOrganization_ReengineeredModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f organization_ reengineered model instance should use the {@link it.ethica.esf.model.ESFOrganization_Reengineered} interface instead.
	 */
	public static final String TABLE_NAME = "esforganization";
	public static final Object[][] TABLE_COLUMNS = {
			{ "esfOrganizationId", Types.BIGINT },
			{ "code_", Types.VARCHAR },
			{ "vat", Types.VARCHAR },
			{ "fiscalCode", Types.VARCHAR },
			{ "ibanCode", Types.VARCHAR },
			{ "isMultiSport", Types.BOOLEAN },
			{ "legalForm", Types.VARCHAR },
			{ "category", Types.VARCHAR },
			{ "establishmentDate", Types.TIMESTAMP },
			{ "closureDate", Types.TIMESTAMP },
			{ "type_", Types.INTEGER },
			{ "insertDate", Types.TIMESTAMP },
			{ "coniDate", Types.TIMESTAMP },
			{ "coniCode", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "isYouthActive", Types.BOOLEAN },
			{ "firstAffiliationDate", Types.TIMESTAMP },
			{ "variations", Types.BIGINT },
			{ "regionCode", Types.BIGINT },
			{ "idFatherAssociation", Types.BIGINT },
			{ "constitutiveAct", Types.BOOLEAN },
			{ "registeredStatus", Types.BOOLEAN },
			{ "planimetrySportsStand", Types.BOOLEAN },
			{ "certificateFITAV", Types.BOOLEAN },
			{ "note", Types.VARCHAR },
			{ "isSimplyOrganizzation", Types.BOOLEAN },
			{ "webSite", Types.VARCHAR },
			{ "includeConiReport", Types.BOOLEAN },
			{ "organizzationCategory", Types.VARCHAR },
			{ "type_", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table esforganization (esfOrganizationId LONG not null primary key,code_ VARCHAR(75) null,vat VARCHAR(75) null,fiscalCode VARCHAR(75) null,ibanCode VARCHAR(75) null,isMultiSport BOOLEAN,legalForm VARCHAR(75) null,category VARCHAR(75) null,establishmentDate DATE null,closureDate DATE null,type_ INTEGER,insertDate DATE null,coniDate DATE null,coniCode VARCHAR(75) null,description VARCHAR(75) null,isYouthActive BOOLEAN,firstAffiliationDate DATE null,variations LONG,regionCode LONG,idFatherAssociation LONG,constitutiveAct BOOLEAN,registeredStatus BOOLEAN,planimetrySportsStand BOOLEAN,certificateFITAV BOOLEAN,note VARCHAR(75) null,isSimplyOrganizzation BOOLEAN,webSite VARCHAR(75) null,includeConiReport BOOLEAN,organizzationCategory VARCHAR(75) null,type_ INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table esforganization";
	public static final String ORDER_BY_JPQL = " ORDER BY esfOrganization_Reengineered.esfOrganizationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY esforganization.esfOrganizationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFOrganization_Reengineered"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFOrganization_Reengineered"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFOrganization_Reengineered"),
			true);
	public static long TYPE__COLUMN_BITMASK = 1L;
	public static long ESFORGANIZATIONID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFOrganization_Reengineered"));

	public ESFOrganization_ReengineeredModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfOrganizationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfOrganizationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfOrganizationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFOrganization_Reengineered.class;
	}

	@Override
	public String getModelClassName() {
		return ESFOrganization_Reengineered.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("esfOrganizationId", getEsfOrganizationId());
		attributes.put("code", getCode());
		attributes.put("vat", getVat());
		attributes.put("fiscalCode", getFiscalCode());
		attributes.put("ibanCode", getIbanCode());
		attributes.put("isMultiSport", getIsMultiSport());
		attributes.put("legalForm", getLegalForm());
		attributes.put("category", getCategory());
		attributes.put("establishmentDate", getEstablishmentDate());
		attributes.put("closureDate", getClosureDate());
		attributes.put("type", getType());
		attributes.put("insertDate", getInsertDate());
		attributes.put("coniDate", getConiDate());
		attributes.put("coniCode", getConiCode());
		attributes.put("description", getDescription());
		attributes.put("isYouthActive", getIsYouthActive());
		attributes.put("firstAffiliationDate", getFirstAffiliationDate());
		attributes.put("variations", getVariations());
		attributes.put("regionCode", getRegionCode());
		attributes.put("idFatherAssociation", getIdFatherAssociation());
		attributes.put("constitutiveAct", getConstitutiveAct());
		attributes.put("registeredStatus", getRegisteredStatus());
		attributes.put("planimetrySportsStand", getPlanimetrySportsStand());
		attributes.put("certificateFITAV", getCertificateFITAV());
		attributes.put("note", getNote());
		attributes.put("isSimplyOrganizzation", getIsSimplyOrganizzation());
		attributes.put("webSite", getWebSite());
		attributes.put("includeConiReport", getIncludeConiReport());
		attributes.put("organizzationCategory", getOrganizzationCategory());
		attributes.put("type_", getType_());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long esfOrganizationId = (Long)attributes.get("esfOrganizationId");

		if (esfOrganizationId != null) {
			setEsfOrganizationId(esfOrganizationId);
		}

		String code = (String)attributes.get("code");

		if (code != null) {
			setCode(code);
		}

		String vat = (String)attributes.get("vat");

		if (vat != null) {
			setVat(vat);
		}

		String fiscalCode = (String)attributes.get("fiscalCode");

		if (fiscalCode != null) {
			setFiscalCode(fiscalCode);
		}

		String ibanCode = (String)attributes.get("ibanCode");

		if (ibanCode != null) {
			setIbanCode(ibanCode);
		}

		Boolean isMultiSport = (Boolean)attributes.get("isMultiSport");

		if (isMultiSport != null) {
			setIsMultiSport(isMultiSport);
		}

		String legalForm = (String)attributes.get("legalForm");

		if (legalForm != null) {
			setLegalForm(legalForm);
		}

		String category = (String)attributes.get("category");

		if (category != null) {
			setCategory(category);
		}

		Date establishmentDate = (Date)attributes.get("establishmentDate");

		if (establishmentDate != null) {
			setEstablishmentDate(establishmentDate);
		}

		Date closureDate = (Date)attributes.get("closureDate");

		if (closureDate != null) {
			setClosureDate(closureDate);
		}

		Integer type = (Integer)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		Date insertDate = (Date)attributes.get("insertDate");

		if (insertDate != null) {
			setInsertDate(insertDate);
		}

		Date coniDate = (Date)attributes.get("coniDate");

		if (coniDate != null) {
			setConiDate(coniDate);
		}

		String coniCode = (String)attributes.get("coniCode");

		if (coniCode != null) {
			setConiCode(coniCode);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Boolean isYouthActive = (Boolean)attributes.get("isYouthActive");

		if (isYouthActive != null) {
			setIsYouthActive(isYouthActive);
		}

		Date firstAffiliationDate = (Date)attributes.get("firstAffiliationDate");

		if (firstAffiliationDate != null) {
			setFirstAffiliationDate(firstAffiliationDate);
		}

		Long variations = (Long)attributes.get("variations");

		if (variations != null) {
			setVariations(variations);
		}

		Long regionCode = (Long)attributes.get("regionCode");

		if (regionCode != null) {
			setRegionCode(regionCode);
		}

		Long idFatherAssociation = (Long)attributes.get("idFatherAssociation");

		if (idFatherAssociation != null) {
			setIdFatherAssociation(idFatherAssociation);
		}

		Boolean constitutiveAct = (Boolean)attributes.get("constitutiveAct");

		if (constitutiveAct != null) {
			setConstitutiveAct(constitutiveAct);
		}

		Boolean registeredStatus = (Boolean)attributes.get("registeredStatus");

		if (registeredStatus != null) {
			setRegisteredStatus(registeredStatus);
		}

		Boolean planimetrySportsStand = (Boolean)attributes.get(
				"planimetrySportsStand");

		if (planimetrySportsStand != null) {
			setPlanimetrySportsStand(planimetrySportsStand);
		}

		Boolean certificateFITAV = (Boolean)attributes.get("certificateFITAV");

		if (certificateFITAV != null) {
			setCertificateFITAV(certificateFITAV);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		Boolean isSimplyOrganizzation = (Boolean)attributes.get(
				"isSimplyOrganizzation");

		if (isSimplyOrganizzation != null) {
			setIsSimplyOrganizzation(isSimplyOrganizzation);
		}

		String webSite = (String)attributes.get("webSite");

		if (webSite != null) {
			setWebSite(webSite);
		}

		Boolean includeConiReport = (Boolean)attributes.get("includeConiReport");

		if (includeConiReport != null) {
			setIncludeConiReport(includeConiReport);
		}

		String organizzationCategory = (String)attributes.get(
				"organizzationCategory");

		if (organizzationCategory != null) {
			setOrganizzationCategory(organizzationCategory);
		}

		Integer type_ = (Integer)attributes.get("type_");

		if (type_ != null) {
			setType_(type_);
		}
	}

	@Override
	public long getEsfOrganizationId() {
		return _esfOrganizationId;
	}

	@Override
	public void setEsfOrganizationId(long esfOrganizationId) {
		_esfOrganizationId = esfOrganizationId;
	}

	@Override
	public String getCode() {
		if (_code == null) {
			return StringPool.BLANK;
		}
		else {
			return _code;
		}
	}

	@Override
	public void setCode(String code) {
		_code = code;
	}

	@Override
	public String getVat() {
		if (_vat == null) {
			return StringPool.BLANK;
		}
		else {
			return _vat;
		}
	}

	@Override
	public void setVat(String vat) {
		_vat = vat;
	}

	@Override
	public String getFiscalCode() {
		if (_fiscalCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _fiscalCode;
		}
	}

	@Override
	public void setFiscalCode(String fiscalCode) {
		_fiscalCode = fiscalCode;
	}

	@Override
	public String getIbanCode() {
		if (_ibanCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _ibanCode;
		}
	}

	@Override
	public void setIbanCode(String ibanCode) {
		_ibanCode = ibanCode;
	}

	@Override
	public boolean getIsMultiSport() {
		return _isMultiSport;
	}

	@Override
	public boolean isIsMultiSport() {
		return _isMultiSport;
	}

	@Override
	public void setIsMultiSport(boolean isMultiSport) {
		_isMultiSport = isMultiSport;
	}

	@Override
	public String getLegalForm() {
		if (_legalForm == null) {
			return StringPool.BLANK;
		}
		else {
			return _legalForm;
		}
	}

	@Override
	public void setLegalForm(String legalForm) {
		_legalForm = legalForm;
	}

	@Override
	public String getCategory() {
		if (_category == null) {
			return StringPool.BLANK;
		}
		else {
			return _category;
		}
	}

	@Override
	public void setCategory(String category) {
		_category = category;
	}

	@Override
	public Date getEstablishmentDate() {
		return _establishmentDate;
	}

	@Override
	public void setEstablishmentDate(Date establishmentDate) {
		_establishmentDate = establishmentDate;
	}

	@Override
	public Date getClosureDate() {
		return _closureDate;
	}

	@Override
	public void setClosureDate(Date closureDate) {
		_closureDate = closureDate;
	}

	@Override
	public int getType() {
		return _type;
	}

	@Override
	public void setType(int type) {
		_type = type;
	}

	@Override
	public Date getInsertDate() {
		return _insertDate;
	}

	@Override
	public void setInsertDate(Date insertDate) {
		_insertDate = insertDate;
	}

	@Override
	public Date getConiDate() {
		return _coniDate;
	}

	@Override
	public void setConiDate(Date coniDate) {
		_coniDate = coniDate;
	}

	@Override
	public String getConiCode() {
		if (_coniCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _coniCode;
		}
	}

	@Override
	public void setConiCode(String coniCode) {
		_coniCode = coniCode;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public boolean getIsYouthActive() {
		return _isYouthActive;
	}

	@Override
	public boolean isIsYouthActive() {
		return _isYouthActive;
	}

	@Override
	public void setIsYouthActive(boolean isYouthActive) {
		_isYouthActive = isYouthActive;
	}

	@Override
	public Date getFirstAffiliationDate() {
		return _firstAffiliationDate;
	}

	@Override
	public void setFirstAffiliationDate(Date firstAffiliationDate) {
		_firstAffiliationDate = firstAffiliationDate;
	}

	@Override
	public long getVariations() {
		return _variations;
	}

	@Override
	public void setVariations(long variations) {
		_variations = variations;
	}

	@Override
	public long getRegionCode() {
		return _regionCode;
	}

	@Override
	public void setRegionCode(long regionCode) {
		_regionCode = regionCode;
	}

	@Override
	public long getIdFatherAssociation() {
		return _idFatherAssociation;
	}

	@Override
	public void setIdFatherAssociation(long idFatherAssociation) {
		_idFatherAssociation = idFatherAssociation;
	}

	@Override
	public boolean getConstitutiveAct() {
		return _constitutiveAct;
	}

	@Override
	public boolean isConstitutiveAct() {
		return _constitutiveAct;
	}

	@Override
	public void setConstitutiveAct(boolean constitutiveAct) {
		_constitutiveAct = constitutiveAct;
	}

	@Override
	public boolean getRegisteredStatus() {
		return _registeredStatus;
	}

	@Override
	public boolean isRegisteredStatus() {
		return _registeredStatus;
	}

	@Override
	public void setRegisteredStatus(boolean registeredStatus) {
		_registeredStatus = registeredStatus;
	}

	@Override
	public boolean getPlanimetrySportsStand() {
		return _planimetrySportsStand;
	}

	@Override
	public boolean isPlanimetrySportsStand() {
		return _planimetrySportsStand;
	}

	@Override
	public void setPlanimetrySportsStand(boolean planimetrySportsStand) {
		_planimetrySportsStand = planimetrySportsStand;
	}

	@Override
	public boolean getCertificateFITAV() {
		return _certificateFITAV;
	}

	@Override
	public boolean isCertificateFITAV() {
		return _certificateFITAV;
	}

	@Override
	public void setCertificateFITAV(boolean certificateFITAV) {
		_certificateFITAV = certificateFITAV;
	}

	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@Override
	public boolean getIsSimplyOrganizzation() {
		return _isSimplyOrganizzation;
	}

	@Override
	public boolean isIsSimplyOrganizzation() {
		return _isSimplyOrganizzation;
	}

	@Override
	public void setIsSimplyOrganizzation(boolean isSimplyOrganizzation) {
		_isSimplyOrganizzation = isSimplyOrganizzation;
	}

	@Override
	public String getWebSite() {
		if (_webSite == null) {
			return StringPool.BLANK;
		}
		else {
			return _webSite;
		}
	}

	@Override
	public void setWebSite(String webSite) {
		_webSite = webSite;
	}

	@Override
	public boolean getIncludeConiReport() {
		return _includeConiReport;
	}

	@Override
	public boolean isIncludeConiReport() {
		return _includeConiReport;
	}

	@Override
	public void setIncludeConiReport(boolean includeConiReport) {
		_includeConiReport = includeConiReport;
	}

	@Override
	public String getOrganizzationCategory() {
		if (_organizzationCategory == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizzationCategory;
		}
	}

	@Override
	public void setOrganizzationCategory(String organizzationCategory) {
		_organizzationCategory = organizzationCategory;
	}

	@Override
	public int getType_() {
		return _type_;
	}

	@Override
	public void setType_(int type_) {
		_columnBitmask |= TYPE__COLUMN_BITMASK;

		if (!_setOriginalType_) {
			_setOriginalType_ = true;

			_originalType_ = _type_;
		}

		_type_ = type_;
	}

	public int getOriginalType_() {
		return _originalType_;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ESFOrganization_Reengineered.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFOrganization_Reengineered toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFOrganization_Reengineered)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFOrganization_ReengineeredImpl esfOrganization_ReengineeredImpl = new ESFOrganization_ReengineeredImpl();

		esfOrganization_ReengineeredImpl.setEsfOrganizationId(getEsfOrganizationId());
		esfOrganization_ReengineeredImpl.setCode(getCode());
		esfOrganization_ReengineeredImpl.setVat(getVat());
		esfOrganization_ReengineeredImpl.setFiscalCode(getFiscalCode());
		esfOrganization_ReengineeredImpl.setIbanCode(getIbanCode());
		esfOrganization_ReengineeredImpl.setIsMultiSport(getIsMultiSport());
		esfOrganization_ReengineeredImpl.setLegalForm(getLegalForm());
		esfOrganization_ReengineeredImpl.setCategory(getCategory());
		esfOrganization_ReengineeredImpl.setEstablishmentDate(getEstablishmentDate());
		esfOrganization_ReengineeredImpl.setClosureDate(getClosureDate());
		esfOrganization_ReengineeredImpl.setType(getType());
		esfOrganization_ReengineeredImpl.setInsertDate(getInsertDate());
		esfOrganization_ReengineeredImpl.setConiDate(getConiDate());
		esfOrganization_ReengineeredImpl.setConiCode(getConiCode());
		esfOrganization_ReengineeredImpl.setDescription(getDescription());
		esfOrganization_ReengineeredImpl.setIsYouthActive(getIsYouthActive());
		esfOrganization_ReengineeredImpl.setFirstAffiliationDate(getFirstAffiliationDate());
		esfOrganization_ReengineeredImpl.setVariations(getVariations());
		esfOrganization_ReengineeredImpl.setRegionCode(getRegionCode());
		esfOrganization_ReengineeredImpl.setIdFatherAssociation(getIdFatherAssociation());
		esfOrganization_ReengineeredImpl.setConstitutiveAct(getConstitutiveAct());
		esfOrganization_ReengineeredImpl.setRegisteredStatus(getRegisteredStatus());
		esfOrganization_ReengineeredImpl.setPlanimetrySportsStand(getPlanimetrySportsStand());
		esfOrganization_ReengineeredImpl.setCertificateFITAV(getCertificateFITAV());
		esfOrganization_ReengineeredImpl.setNote(getNote());
		esfOrganization_ReengineeredImpl.setIsSimplyOrganizzation(getIsSimplyOrganizzation());
		esfOrganization_ReengineeredImpl.setWebSite(getWebSite());
		esfOrganization_ReengineeredImpl.setIncludeConiReport(getIncludeConiReport());
		esfOrganization_ReengineeredImpl.setOrganizzationCategory(getOrganizzationCategory());
		esfOrganization_ReengineeredImpl.setType_(getType_());

		esfOrganization_ReengineeredImpl.resetOriginalValues();

		return esfOrganization_ReengineeredImpl;
	}

	@Override
	public int compareTo(
		ESFOrganization_Reengineered esfOrganization_Reengineered) {
		long primaryKey = esfOrganization_Reengineered.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFOrganization_Reengineered)) {
			return false;
		}

		ESFOrganization_Reengineered esfOrganization_Reengineered = (ESFOrganization_Reengineered)obj;

		long primaryKey = esfOrganization_Reengineered.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFOrganization_ReengineeredModelImpl esfOrganization_ReengineeredModelImpl =
			this;

		esfOrganization_ReengineeredModelImpl._originalType_ = esfOrganization_ReengineeredModelImpl._type_;

		esfOrganization_ReengineeredModelImpl._setOriginalType_ = false;

		esfOrganization_ReengineeredModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFOrganization_Reengineered> toCacheModel() {
		ESFOrganization_ReengineeredCacheModel esfOrganization_ReengineeredCacheModel =
			new ESFOrganization_ReengineeredCacheModel();

		esfOrganization_ReengineeredCacheModel.esfOrganizationId = getEsfOrganizationId();

		esfOrganization_ReengineeredCacheModel.code = getCode();

		String code = esfOrganization_ReengineeredCacheModel.code;

		if ((code != null) && (code.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.code = null;
		}

		esfOrganization_ReengineeredCacheModel.vat = getVat();

		String vat = esfOrganization_ReengineeredCacheModel.vat;

		if ((vat != null) && (vat.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.vat = null;
		}

		esfOrganization_ReengineeredCacheModel.fiscalCode = getFiscalCode();

		String fiscalCode = esfOrganization_ReengineeredCacheModel.fiscalCode;

		if ((fiscalCode != null) && (fiscalCode.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.fiscalCode = null;
		}

		esfOrganization_ReengineeredCacheModel.ibanCode = getIbanCode();

		String ibanCode = esfOrganization_ReengineeredCacheModel.ibanCode;

		if ((ibanCode != null) && (ibanCode.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.ibanCode = null;
		}

		esfOrganization_ReengineeredCacheModel.isMultiSport = getIsMultiSport();

		esfOrganization_ReengineeredCacheModel.legalForm = getLegalForm();

		String legalForm = esfOrganization_ReengineeredCacheModel.legalForm;

		if ((legalForm != null) && (legalForm.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.legalForm = null;
		}

		esfOrganization_ReengineeredCacheModel.category = getCategory();

		String category = esfOrganization_ReengineeredCacheModel.category;

		if ((category != null) && (category.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.category = null;
		}

		Date establishmentDate = getEstablishmentDate();

		if (establishmentDate != null) {
			esfOrganization_ReengineeredCacheModel.establishmentDate = establishmentDate.getTime();
		}
		else {
			esfOrganization_ReengineeredCacheModel.establishmentDate = Long.MIN_VALUE;
		}

		Date closureDate = getClosureDate();

		if (closureDate != null) {
			esfOrganization_ReengineeredCacheModel.closureDate = closureDate.getTime();
		}
		else {
			esfOrganization_ReengineeredCacheModel.closureDate = Long.MIN_VALUE;
		}

		esfOrganization_ReengineeredCacheModel.type = getType();

		Date insertDate = getInsertDate();

		if (insertDate != null) {
			esfOrganization_ReengineeredCacheModel.insertDate = insertDate.getTime();
		}
		else {
			esfOrganization_ReengineeredCacheModel.insertDate = Long.MIN_VALUE;
		}

		Date coniDate = getConiDate();

		if (coniDate != null) {
			esfOrganization_ReengineeredCacheModel.coniDate = coniDate.getTime();
		}
		else {
			esfOrganization_ReengineeredCacheModel.coniDate = Long.MIN_VALUE;
		}

		esfOrganization_ReengineeredCacheModel.coniCode = getConiCode();

		String coniCode = esfOrganization_ReengineeredCacheModel.coniCode;

		if ((coniCode != null) && (coniCode.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.coniCode = null;
		}

		esfOrganization_ReengineeredCacheModel.description = getDescription();

		String description = esfOrganization_ReengineeredCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.description = null;
		}

		esfOrganization_ReengineeredCacheModel.isYouthActive = getIsYouthActive();

		Date firstAffiliationDate = getFirstAffiliationDate();

		if (firstAffiliationDate != null) {
			esfOrganization_ReengineeredCacheModel.firstAffiliationDate = firstAffiliationDate.getTime();
		}
		else {
			esfOrganization_ReengineeredCacheModel.firstAffiliationDate = Long.MIN_VALUE;
		}

		esfOrganization_ReengineeredCacheModel.variations = getVariations();

		esfOrganization_ReengineeredCacheModel.regionCode = getRegionCode();

		esfOrganization_ReengineeredCacheModel.idFatherAssociation = getIdFatherAssociation();

		esfOrganization_ReengineeredCacheModel.constitutiveAct = getConstitutiveAct();

		esfOrganization_ReengineeredCacheModel.registeredStatus = getRegisteredStatus();

		esfOrganization_ReengineeredCacheModel.planimetrySportsStand = getPlanimetrySportsStand();

		esfOrganization_ReengineeredCacheModel.certificateFITAV = getCertificateFITAV();

		esfOrganization_ReengineeredCacheModel.note = getNote();

		String note = esfOrganization_ReengineeredCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.note = null;
		}

		esfOrganization_ReengineeredCacheModel.isSimplyOrganizzation = getIsSimplyOrganizzation();

		esfOrganization_ReengineeredCacheModel.webSite = getWebSite();

		String webSite = esfOrganization_ReengineeredCacheModel.webSite;

		if ((webSite != null) && (webSite.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.webSite = null;
		}

		esfOrganization_ReengineeredCacheModel.includeConiReport = getIncludeConiReport();

		esfOrganization_ReengineeredCacheModel.organizzationCategory = getOrganizzationCategory();

		String organizzationCategory = esfOrganization_ReengineeredCacheModel.organizzationCategory;

		if ((organizzationCategory != null) &&
				(organizzationCategory.length() == 0)) {
			esfOrganization_ReengineeredCacheModel.organizzationCategory = null;
		}

		esfOrganization_ReengineeredCacheModel.type_ = getType_();

		return esfOrganization_ReengineeredCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(61);

		sb.append("{esfOrganizationId=");
		sb.append(getEsfOrganizationId());
		sb.append(", code=");
		sb.append(getCode());
		sb.append(", vat=");
		sb.append(getVat());
		sb.append(", fiscalCode=");
		sb.append(getFiscalCode());
		sb.append(", ibanCode=");
		sb.append(getIbanCode());
		sb.append(", isMultiSport=");
		sb.append(getIsMultiSport());
		sb.append(", legalForm=");
		sb.append(getLegalForm());
		sb.append(", category=");
		sb.append(getCategory());
		sb.append(", establishmentDate=");
		sb.append(getEstablishmentDate());
		sb.append(", closureDate=");
		sb.append(getClosureDate());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", insertDate=");
		sb.append(getInsertDate());
		sb.append(", coniDate=");
		sb.append(getConiDate());
		sb.append(", coniCode=");
		sb.append(getConiCode());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", isYouthActive=");
		sb.append(getIsYouthActive());
		sb.append(", firstAffiliationDate=");
		sb.append(getFirstAffiliationDate());
		sb.append(", variations=");
		sb.append(getVariations());
		sb.append(", regionCode=");
		sb.append(getRegionCode());
		sb.append(", idFatherAssociation=");
		sb.append(getIdFatherAssociation());
		sb.append(", constitutiveAct=");
		sb.append(getConstitutiveAct());
		sb.append(", registeredStatus=");
		sb.append(getRegisteredStatus());
		sb.append(", planimetrySportsStand=");
		sb.append(getPlanimetrySportsStand());
		sb.append(", certificateFITAV=");
		sb.append(getCertificateFITAV());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", isSimplyOrganizzation=");
		sb.append(getIsSimplyOrganizzation());
		sb.append(", webSite=");
		sb.append(getWebSite());
		sb.append(", includeConiReport=");
		sb.append(getIncludeConiReport());
		sb.append(", organizzationCategory=");
		sb.append(getOrganizzationCategory());
		sb.append(", type_=");
		sb.append(getType_());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(94);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFOrganization_Reengineered");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>esfOrganizationId</column-name><column-value><![CDATA[");
		sb.append(getEsfOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>code</column-name><column-value><![CDATA[");
		sb.append(getCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vat</column-name><column-value><![CDATA[");
		sb.append(getVat());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fiscalCode</column-name><column-value><![CDATA[");
		sb.append(getFiscalCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ibanCode</column-name><column-value><![CDATA[");
		sb.append(getIbanCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isMultiSport</column-name><column-value><![CDATA[");
		sb.append(getIsMultiSport());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>legalForm</column-name><column-value><![CDATA[");
		sb.append(getLegalForm());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>category</column-name><column-value><![CDATA[");
		sb.append(getCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>establishmentDate</column-name><column-value><![CDATA[");
		sb.append(getEstablishmentDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>closureDate</column-name><column-value><![CDATA[");
		sb.append(getClosureDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>insertDate</column-name><column-value><![CDATA[");
		sb.append(getInsertDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>coniDate</column-name><column-value><![CDATA[");
		sb.append(getConiDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>coniCode</column-name><column-value><![CDATA[");
		sb.append(getConiCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isYouthActive</column-name><column-value><![CDATA[");
		sb.append(getIsYouthActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstAffiliationDate</column-name><column-value><![CDATA[");
		sb.append(getFirstAffiliationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>variations</column-name><column-value><![CDATA[");
		sb.append(getVariations());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>regionCode</column-name><column-value><![CDATA[");
		sb.append(getRegionCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idFatherAssociation</column-name><column-value><![CDATA[");
		sb.append(getIdFatherAssociation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>constitutiveAct</column-name><column-value><![CDATA[");
		sb.append(getConstitutiveAct());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registeredStatus</column-name><column-value><![CDATA[");
		sb.append(getRegisteredStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>planimetrySportsStand</column-name><column-value><![CDATA[");
		sb.append(getPlanimetrySportsStand());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certificateFITAV</column-name><column-value><![CDATA[");
		sb.append(getCertificateFITAV());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isSimplyOrganizzation</column-name><column-value><![CDATA[");
		sb.append(getIsSimplyOrganizzation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>webSite</column-name><column-value><![CDATA[");
		sb.append(getWebSite());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>includeConiReport</column-name><column-value><![CDATA[");
		sb.append(getIncludeConiReport());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizzationCategory</column-name><column-value><![CDATA[");
		sb.append(getOrganizzationCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type_</column-name><column-value><![CDATA[");
		sb.append(getType_());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFOrganization_Reengineered.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFOrganization_Reengineered.class
		};
	private long _esfOrganizationId;
	private String _code;
	private String _vat;
	private String _fiscalCode;
	private String _ibanCode;
	private boolean _isMultiSport;
	private String _legalForm;
	private String _category;
	private Date _establishmentDate;
	private Date _closureDate;
	private int _type;
	private Date _insertDate;
	private Date _coniDate;
	private String _coniCode;
	private String _description;
	private boolean _isYouthActive;
	private Date _firstAffiliationDate;
	private long _variations;
	private long _regionCode;
	private long _idFatherAssociation;
	private boolean _constitutiveAct;
	private boolean _registeredStatus;
	private boolean _planimetrySportsStand;
	private boolean _certificateFITAV;
	private String _note;
	private boolean _isSimplyOrganizzation;
	private String _webSite;
	private boolean _includeConiReport;
	private String _organizzationCategory;
	private int _type_;
	private int _originalType_;
	private boolean _setOriginalType_;
	private long _columnBitmask;
	private ESFOrganization_Reengineered _escapedModel;
}