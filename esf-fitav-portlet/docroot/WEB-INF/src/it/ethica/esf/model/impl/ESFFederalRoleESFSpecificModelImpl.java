/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import it.ethica.esf.model.ESFFederalRoleESFSpecific;
import it.ethica.esf.model.ESFFederalRoleESFSpecificModel;
import it.ethica.esf.model.ESFFederalRoleESFSpecificSoap;
import it.ethica.esf.service.persistence.ESFFederalRoleESFSpecificPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ESFFederalRoleESFSpecific service. Represents a row in the &quot;ESFFederalRoleESFSpecific&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFFederalRoleESFSpecificModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFFederalRoleESFSpecificImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFFederalRoleESFSpecificImpl
 * @see it.ethica.esf.model.ESFFederalRoleESFSpecific
 * @see it.ethica.esf.model.ESFFederalRoleESFSpecificModel
 * @generated
 */
@JSON(strict = true)
public class ESFFederalRoleESFSpecificModelImpl extends BaseModelImpl<ESFFederalRoleESFSpecific>
	implements ESFFederalRoleESFSpecificModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f federal role e s f specific model instance should use the {@link it.ethica.esf.model.ESFFederalRoleESFSpecific} interface instead.
	 */
	public static final String TABLE_NAME = "ESFFederalRoleESFSpecific";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "esfSpecificId", Types.BIGINT },
			{ "esfFederalRoleId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFFederalRoleESFSpecific (uuid_ VARCHAR(75) null,esfSpecificId LONG not null,esfFederalRoleId LONG not null,primary key (esfSpecificId, esfFederalRoleId))";
	public static final String TABLE_SQL_DROP = "drop table ESFFederalRoleESFSpecific";
	public static final String ORDER_BY_JPQL = " ORDER BY esfFederalRoleESFSpecific.id.esfSpecificId ASC, esfFederalRoleESFSpecific.id.esfFederalRoleId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFFederalRoleESFSpecific.esfSpecificId ASC, ESFFederalRoleESFSpecific.esfFederalRoleId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFFederalRoleESFSpecific"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFFederalRoleESFSpecific"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFFederalRoleESFSpecific"),
			true);
	public static long ESFFEDERALROLEID_COLUMN_BITMASK = 1L;
	public static long ESFSPECIFICID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ESFFederalRoleESFSpecific toModel(
		ESFFederalRoleESFSpecificSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ESFFederalRoleESFSpecific model = new ESFFederalRoleESFSpecificImpl();

		model.setUuid(soapModel.getUuid());
		model.setEsfSpecificId(soapModel.getEsfSpecificId());
		model.setEsfFederalRoleId(soapModel.getEsfFederalRoleId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ESFFederalRoleESFSpecific> toModels(
		ESFFederalRoleESFSpecificSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ESFFederalRoleESFSpecific> models = new ArrayList<ESFFederalRoleESFSpecific>(soapModels.length);

		for (ESFFederalRoleESFSpecificSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFFederalRoleESFSpecific"));

	public ESFFederalRoleESFSpecificModelImpl() {
	}

	@Override
	public ESFFederalRoleESFSpecificPK getPrimaryKey() {
		return new ESFFederalRoleESFSpecificPK(_esfSpecificId, _esfFederalRoleId);
	}

	@Override
	public void setPrimaryKey(ESFFederalRoleESFSpecificPK primaryKey) {
		setEsfSpecificId(primaryKey.esfSpecificId);
		setEsfFederalRoleId(primaryKey.esfFederalRoleId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ESFFederalRoleESFSpecificPK(_esfSpecificId, _esfFederalRoleId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ESFFederalRoleESFSpecificPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ESFFederalRoleESFSpecific.class;
	}

	@Override
	public String getModelClassName() {
		return ESFFederalRoleESFSpecific.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("esfSpecificId", getEsfSpecificId());
		attributes.put("esfFederalRoleId", getEsfFederalRoleId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long esfSpecificId = (Long)attributes.get("esfSpecificId");

		if (esfSpecificId != null) {
			setEsfSpecificId(esfSpecificId);
		}

		Long esfFederalRoleId = (Long)attributes.get("esfFederalRoleId");

		if (esfFederalRoleId != null) {
			setEsfFederalRoleId(esfFederalRoleId);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getEsfSpecificId() {
		return _esfSpecificId;
	}

	@Override
	public void setEsfSpecificId(long esfSpecificId) {
		_columnBitmask |= ESFSPECIFICID_COLUMN_BITMASK;

		if (!_setOriginalEsfSpecificId) {
			_setOriginalEsfSpecificId = true;

			_originalEsfSpecificId = _esfSpecificId;
		}

		_esfSpecificId = esfSpecificId;
	}

	public long getOriginalEsfSpecificId() {
		return _originalEsfSpecificId;
	}

	@JSON
	@Override
	public long getEsfFederalRoleId() {
		return _esfFederalRoleId;
	}

	@Override
	public void setEsfFederalRoleId(long esfFederalRoleId) {
		_columnBitmask |= ESFFEDERALROLEID_COLUMN_BITMASK;

		if (!_setOriginalEsfFederalRoleId) {
			_setOriginalEsfFederalRoleId = true;

			_originalEsfFederalRoleId = _esfFederalRoleId;
		}

		_esfFederalRoleId = esfFederalRoleId;
	}

	public long getOriginalEsfFederalRoleId() {
		return _originalEsfFederalRoleId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ESFFederalRoleESFSpecific toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFFederalRoleESFSpecific)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFFederalRoleESFSpecificImpl esfFederalRoleESFSpecificImpl = new ESFFederalRoleESFSpecificImpl();

		esfFederalRoleESFSpecificImpl.setUuid(getUuid());
		esfFederalRoleESFSpecificImpl.setEsfSpecificId(getEsfSpecificId());
		esfFederalRoleESFSpecificImpl.setEsfFederalRoleId(getEsfFederalRoleId());

		esfFederalRoleESFSpecificImpl.resetOriginalValues();

		return esfFederalRoleESFSpecificImpl;
	}

	@Override
	public int compareTo(ESFFederalRoleESFSpecific esfFederalRoleESFSpecific) {
		ESFFederalRoleESFSpecificPK primaryKey = esfFederalRoleESFSpecific.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFFederalRoleESFSpecific)) {
			return false;
		}

		ESFFederalRoleESFSpecific esfFederalRoleESFSpecific = (ESFFederalRoleESFSpecific)obj;

		ESFFederalRoleESFSpecificPK primaryKey = esfFederalRoleESFSpecific.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		ESFFederalRoleESFSpecificModelImpl esfFederalRoleESFSpecificModelImpl = this;

		esfFederalRoleESFSpecificModelImpl._originalUuid = esfFederalRoleESFSpecificModelImpl._uuid;

		esfFederalRoleESFSpecificModelImpl._originalEsfSpecificId = esfFederalRoleESFSpecificModelImpl._esfSpecificId;

		esfFederalRoleESFSpecificModelImpl._setOriginalEsfSpecificId = false;

		esfFederalRoleESFSpecificModelImpl._originalEsfFederalRoleId = esfFederalRoleESFSpecificModelImpl._esfFederalRoleId;

		esfFederalRoleESFSpecificModelImpl._setOriginalEsfFederalRoleId = false;

		esfFederalRoleESFSpecificModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFFederalRoleESFSpecific> toCacheModel() {
		ESFFederalRoleESFSpecificCacheModel esfFederalRoleESFSpecificCacheModel = new ESFFederalRoleESFSpecificCacheModel();

		esfFederalRoleESFSpecificCacheModel.uuid = getUuid();

		String uuid = esfFederalRoleESFSpecificCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			esfFederalRoleESFSpecificCacheModel.uuid = null;
		}

		esfFederalRoleESFSpecificCacheModel.esfSpecificId = getEsfSpecificId();

		esfFederalRoleESFSpecificCacheModel.esfFederalRoleId = getEsfFederalRoleId();

		return esfFederalRoleESFSpecificCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", esfSpecificId=");
		sb.append(getEsfSpecificId());
		sb.append(", esfFederalRoleId=");
		sb.append(getEsfFederalRoleId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFFederalRoleESFSpecific");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfSpecificId</column-name><column-value><![CDATA[");
		sb.append(getEsfSpecificId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfFederalRoleId</column-name><column-value><![CDATA[");
		sb.append(getEsfFederalRoleId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFFederalRoleESFSpecific.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFFederalRoleESFSpecific.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _esfSpecificId;
	private long _originalEsfSpecificId;
	private boolean _setOriginalEsfSpecificId;
	private long _esfFederalRoleId;
	private long _originalEsfFederalRoleId;
	private boolean _setOriginalEsfFederalRoleId;
	private long _columnBitmask;
	private ESFFederalRoleESFSpecific _escapedModel;
}