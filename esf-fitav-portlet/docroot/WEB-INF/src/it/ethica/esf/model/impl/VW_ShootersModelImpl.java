/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import it.ethica.esf.model.VW_Shooters;
import it.ethica.esf.model.VW_ShootersModel;
import it.ethica.esf.service.persistence.VW_ShootersPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VW_Shooters service. Represents a row in the &quot;VW_Shooters&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.VW_ShootersModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VW_ShootersImpl}.
 * </p>
 *
 * @author Ethica
 * @see VW_ShootersImpl
 * @see it.ethica.esf.model.VW_Shooters
 * @see it.ethica.esf.model.VW_ShootersModel
 * @generated
 */
public class VW_ShootersModelImpl extends BaseModelImpl<VW_Shooters>
	implements VW_ShootersModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v w_ shooters model instance should use the {@link it.ethica.esf.model.VW_Shooters} interface instead.
	 */
	public static final String TABLE_NAME = "VW_Shooters";
	public static final Object[][] TABLE_COLUMNS = {
			{ "userId", Types.BIGINT },
			{ "CodiceTessera", Types.VARCHAR },
			{ "CodiceOrganizzazione", Types.VARCHAR },
			{ "Nome", Types.VARCHAR },
			{ "Cognome", Types.VARCHAR },
			{ "Email", Types.VARCHAR },
			{ "CF", Types.VARCHAR },
			{ "organizationId", Types.BIGINT },
			{ "invitato", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table VW_Shooters (userId LONG not null,CodiceTessera VARCHAR(75) null,CodiceOrganizzazione VARCHAR(75) null,Nome VARCHAR(75) null,Cognome VARCHAR(75) null,Email VARCHAR(75) null,CF VARCHAR(75) null,organizationId LONG not null,invitato INTEGER,primary key (userId, organizationId))";
	public static final String TABLE_SQL_DROP = "drop table VW_Shooters";
	public static final String ORDER_BY_JPQL = " ORDER BY vw_Shooters.id.userId ASC, vw_Shooters.id.organizationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY VW_Shooters.userId ASC, VW_Shooters.organizationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.VW_Shooters"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.VW_Shooters"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.VW_Shooters"),
			true);
	public static long USERID_COLUMN_BITMASK = 1L;
	public static long ORGANIZATIONID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.VW_Shooters"));

	public VW_ShootersModelImpl() {
	}

	@Override
	public VW_ShootersPK getPrimaryKey() {
		return new VW_ShootersPK(_userId, _organizationId);
	}

	@Override
	public void setPrimaryKey(VW_ShootersPK primaryKey) {
		setUserId(primaryKey.userId);
		setOrganizationId(primaryKey.organizationId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new VW_ShootersPK(_userId, _organizationId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((VW_ShootersPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VW_Shooters.class;
	}

	@Override
	public String getModelClassName() {
		return VW_Shooters.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("userId", getUserId());
		attributes.put("CodiceTessera", getCodiceTessera());
		attributes.put("CodiceOrganizzazione", getCodiceOrganizzazione());
		attributes.put("Nome", getNome());
		attributes.put("Cognome", getCognome());
		attributes.put("Email", getEmail());
		attributes.put("CF", getCF());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("invitato", getInvitato());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String CodiceTessera = (String)attributes.get("CodiceTessera");

		if (CodiceTessera != null) {
			setCodiceTessera(CodiceTessera);
		}

		String CodiceOrganizzazione = (String)attributes.get(
				"CodiceOrganizzazione");

		if (CodiceOrganizzazione != null) {
			setCodiceOrganizzazione(CodiceOrganizzazione);
		}

		String Nome = (String)attributes.get("Nome");

		if (Nome != null) {
			setNome(Nome);
		}

		String Cognome = (String)attributes.get("Cognome");

		if (Cognome != null) {
			setCognome(Cognome);
		}

		String Email = (String)attributes.get("Email");

		if (Email != null) {
			setEmail(Email);
		}

		String CF = (String)attributes.get("CF");

		if (CF != null) {
			setCF(CF);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		Integer invitato = (Integer)attributes.get("invitato");

		if (invitato != null) {
			setInvitato(invitato);
		}
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getCodiceTessera() {
		if (_CodiceTessera == null) {
			return StringPool.BLANK;
		}
		else {
			return _CodiceTessera;
		}
	}

	@Override
	public void setCodiceTessera(String CodiceTessera) {
		_CodiceTessera = CodiceTessera;
	}

	@Override
	public String getCodiceOrganizzazione() {
		if (_CodiceOrganizzazione == null) {
			return StringPool.BLANK;
		}
		else {
			return _CodiceOrganizzazione;
		}
	}

	@Override
	public void setCodiceOrganizzazione(String CodiceOrganizzazione) {
		_CodiceOrganizzazione = CodiceOrganizzazione;
	}

	@Override
	public String getNome() {
		if (_Nome == null) {
			return StringPool.BLANK;
		}
		else {
			return _Nome;
		}
	}

	@Override
	public void setNome(String Nome) {
		_Nome = Nome;
	}

	@Override
	public String getCognome() {
		if (_Cognome == null) {
			return StringPool.BLANK;
		}
		else {
			return _Cognome;
		}
	}

	@Override
	public void setCognome(String Cognome) {
		_Cognome = Cognome;
	}

	@Override
	public String getEmail() {
		if (_Email == null) {
			return StringPool.BLANK;
		}
		else {
			return _Email;
		}
	}

	@Override
	public void setEmail(String Email) {
		_Email = Email;
	}

	@Override
	public String getCF() {
		if (_CF == null) {
			return StringPool.BLANK;
		}
		else {
			return _CF;
		}
	}

	@Override
	public void setCF(String CF) {
		_CF = CF;
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_organizationId = organizationId;
	}

	@Override
	public int getInvitato() {
		return _invitato;
	}

	@Override
	public void setInvitato(int invitato) {
		_invitato = invitato;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public VW_Shooters toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VW_Shooters)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VW_ShootersImpl vw_ShootersImpl = new VW_ShootersImpl();

		vw_ShootersImpl.setUserId(getUserId());
		vw_ShootersImpl.setCodiceTessera(getCodiceTessera());
		vw_ShootersImpl.setCodiceOrganizzazione(getCodiceOrganizzazione());
		vw_ShootersImpl.setNome(getNome());
		vw_ShootersImpl.setCognome(getCognome());
		vw_ShootersImpl.setEmail(getEmail());
		vw_ShootersImpl.setCF(getCF());
		vw_ShootersImpl.setOrganizationId(getOrganizationId());
		vw_ShootersImpl.setInvitato(getInvitato());

		vw_ShootersImpl.resetOriginalValues();

		return vw_ShootersImpl;
	}

	@Override
	public int compareTo(VW_Shooters vw_Shooters) {
		VW_ShootersPK primaryKey = vw_Shooters.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VW_Shooters)) {
			return false;
		}

		VW_Shooters vw_Shooters = (VW_Shooters)obj;

		VW_ShootersPK primaryKey = vw_Shooters.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		VW_ShootersModelImpl vw_ShootersModelImpl = this;

		vw_ShootersModelImpl._originalUserId = vw_ShootersModelImpl._userId;

		vw_ShootersModelImpl._setOriginalUserId = false;

		vw_ShootersModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VW_Shooters> toCacheModel() {
		VW_ShootersCacheModel vw_ShootersCacheModel = new VW_ShootersCacheModel();

		vw_ShootersCacheModel.userId = getUserId();

		vw_ShootersCacheModel.CodiceTessera = getCodiceTessera();

		String CodiceTessera = vw_ShootersCacheModel.CodiceTessera;

		if ((CodiceTessera != null) && (CodiceTessera.length() == 0)) {
			vw_ShootersCacheModel.CodiceTessera = null;
		}

		vw_ShootersCacheModel.CodiceOrganizzazione = getCodiceOrganizzazione();

		String CodiceOrganizzazione = vw_ShootersCacheModel.CodiceOrganizzazione;

		if ((CodiceOrganizzazione != null) &&
				(CodiceOrganizzazione.length() == 0)) {
			vw_ShootersCacheModel.CodiceOrganizzazione = null;
		}

		vw_ShootersCacheModel.Nome = getNome();

		String Nome = vw_ShootersCacheModel.Nome;

		if ((Nome != null) && (Nome.length() == 0)) {
			vw_ShootersCacheModel.Nome = null;
		}

		vw_ShootersCacheModel.Cognome = getCognome();

		String Cognome = vw_ShootersCacheModel.Cognome;

		if ((Cognome != null) && (Cognome.length() == 0)) {
			vw_ShootersCacheModel.Cognome = null;
		}

		vw_ShootersCacheModel.Email = getEmail();

		String Email = vw_ShootersCacheModel.Email;

		if ((Email != null) && (Email.length() == 0)) {
			vw_ShootersCacheModel.Email = null;
		}

		vw_ShootersCacheModel.CF = getCF();

		String CF = vw_ShootersCacheModel.CF;

		if ((CF != null) && (CF.length() == 0)) {
			vw_ShootersCacheModel.CF = null;
		}

		vw_ShootersCacheModel.organizationId = getOrganizationId();

		vw_ShootersCacheModel.invitato = getInvitato();

		return vw_ShootersCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{userId=");
		sb.append(getUserId());
		sb.append(", CodiceTessera=");
		sb.append(getCodiceTessera());
		sb.append(", CodiceOrganizzazione=");
		sb.append(getCodiceOrganizzazione());
		sb.append(", Nome=");
		sb.append(getNome());
		sb.append(", Cognome=");
		sb.append(getCognome());
		sb.append(", Email=");
		sb.append(getEmail());
		sb.append(", CF=");
		sb.append(getCF());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", invitato=");
		sb.append(getInvitato());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.VW_Shooters");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CodiceTessera</column-name><column-value><![CDATA[");
		sb.append(getCodiceTessera());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CodiceOrganizzazione</column-name><column-value><![CDATA[");
		sb.append(getCodiceOrganizzazione());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Nome</column-name><column-value><![CDATA[");
		sb.append(getNome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Cognome</column-name><column-value><![CDATA[");
		sb.append(getCognome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CF</column-name><column-value><![CDATA[");
		sb.append(getCF());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invitato</column-name><column-value><![CDATA[");
		sb.append(getInvitato());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VW_Shooters.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VW_Shooters.class
		};
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _CodiceTessera;
	private String _CodiceOrganizzazione;
	private String _Nome;
	private String _Cognome;
	private String _Email;
	private String _CF;
	private long _organizationId;
	private int _invitato;
	private long _columnBitmask;
	private VW_Shooters _escapedModel;
}