/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFSportType;
import it.ethica.esf.model.ESFSportTypeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFSportType service. Represents a row in the &quot;ESFSportType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFSportTypeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFSportTypeImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFSportTypeImpl
 * @see it.ethica.esf.model.ESFSportType
 * @see it.ethica.esf.model.ESFSportTypeModel
 * @generated
 */
@JSON(strict = true)
public class ESFSportTypeModelImpl extends BaseModelImpl<ESFSportType>
	implements ESFSportTypeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f sport type model instance should use the {@link it.ethica.esf.model.ESFSportType} interface instead.
	 */
	public static final String TABLE_NAME = "ESFSportType";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "esfSportTypeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "national", Types.BOOLEAN },
			{ "code_", Types.VARCHAR },
			{ "isChangeCategory", Types.BOOLEAN },
			{ "isOlimpic", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFSportType (uuid_ VARCHAR(75) null,esfSportTypeId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,name VARCHAR(75) null,description VARCHAR(75) null,national BOOLEAN,code_ VARCHAR(75) null,isChangeCategory BOOLEAN,isOlimpic BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table ESFSportType";
	public static final String ORDER_BY_JPQL = " ORDER BY esfSportType.name ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFSportType.name ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFSportType"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFSportType"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFSportType"),
			true);
	public static long CODE_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long ISOLIMPIC_COLUMN_BITMASK = 8L;
	public static long NAME_COLUMN_BITMASK = 16L;
	public static long NATIONAL_COLUMN_BITMASK = 32L;
	public static long UUID_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFSportType"));

	public ESFSportTypeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfSportTypeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfSportTypeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfSportTypeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFSportType.class;
	}

	@Override
	public String getModelClassName() {
		return ESFSportType.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("esfSportTypeId", getEsfSportTypeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("national", getNational());
		attributes.put("code", getCode());
		attributes.put("isChangeCategory", getIsChangeCategory());
		attributes.put("isOlimpic", getIsOlimpic());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long esfSportTypeId = (Long)attributes.get("esfSportTypeId");

		if (esfSportTypeId != null) {
			setEsfSportTypeId(esfSportTypeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Boolean national = (Boolean)attributes.get("national");

		if (national != null) {
			setNational(national);
		}

		String code = (String)attributes.get("code");

		if (code != null) {
			setCode(code);
		}

		Boolean isChangeCategory = (Boolean)attributes.get("isChangeCategory");

		if (isChangeCategory != null) {
			setIsChangeCategory(isChangeCategory);
		}

		Boolean isOlimpic = (Boolean)attributes.get("isOlimpic");

		if (isOlimpic != null) {
			setIsOlimpic(isOlimpic);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getEsfSportTypeId() {
		return _esfSportTypeId;
	}

	@Override
	public void setEsfSportTypeId(long esfSportTypeId) {
		_esfSportTypeId = esfSportTypeId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask = -1L;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public boolean getNational() {
		return _national;
	}

	@Override
	public boolean isNational() {
		return _national;
	}

	@Override
	public void setNational(boolean national) {
		_columnBitmask |= NATIONAL_COLUMN_BITMASK;

		if (!_setOriginalNational) {
			_setOriginalNational = true;

			_originalNational = _national;
		}

		_national = national;
	}

	public boolean getOriginalNational() {
		return _originalNational;
	}

	@JSON
	@Override
	public String getCode() {
		if (_code == null) {
			return StringPool.BLANK;
		}
		else {
			return _code;
		}
	}

	@Override
	public void setCode(String code) {
		_columnBitmask |= CODE_COLUMN_BITMASK;

		if (_originalCode == null) {
			_originalCode = _code;
		}

		_code = code;
	}

	public String getOriginalCode() {
		return GetterUtil.getString(_originalCode);
	}

	@JSON
	@Override
	public boolean getIsChangeCategory() {
		return _isChangeCategory;
	}

	@Override
	public boolean isIsChangeCategory() {
		return _isChangeCategory;
	}

	@Override
	public void setIsChangeCategory(boolean isChangeCategory) {
		_isChangeCategory = isChangeCategory;
	}

	@JSON
	@Override
	public boolean getIsOlimpic() {
		return _isOlimpic;
	}

	@Override
	public boolean isIsOlimpic() {
		return _isOlimpic;
	}

	@Override
	public void setIsOlimpic(boolean isOlimpic) {
		_columnBitmask |= ISOLIMPIC_COLUMN_BITMASK;

		if (!_setOriginalIsOlimpic) {
			_setOriginalIsOlimpic = true;

			_originalIsOlimpic = _isOlimpic;
		}

		_isOlimpic = isOlimpic;
	}

	public boolean getOriginalIsOlimpic() {
		return _originalIsOlimpic;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				ESFSportType.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ESFSportType.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFSportType toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFSportType)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFSportTypeImpl esfSportTypeImpl = new ESFSportTypeImpl();

		esfSportTypeImpl.setUuid(getUuid());
		esfSportTypeImpl.setEsfSportTypeId(getEsfSportTypeId());
		esfSportTypeImpl.setGroupId(getGroupId());
		esfSportTypeImpl.setCompanyId(getCompanyId());
		esfSportTypeImpl.setUserId(getUserId());
		esfSportTypeImpl.setUserName(getUserName());
		esfSportTypeImpl.setCreateDate(getCreateDate());
		esfSportTypeImpl.setModifiedDate(getModifiedDate());
		esfSportTypeImpl.setName(getName());
		esfSportTypeImpl.setDescription(getDescription());
		esfSportTypeImpl.setNational(getNational());
		esfSportTypeImpl.setCode(getCode());
		esfSportTypeImpl.setIsChangeCategory(getIsChangeCategory());
		esfSportTypeImpl.setIsOlimpic(getIsOlimpic());

		esfSportTypeImpl.resetOriginalValues();

		return esfSportTypeImpl;
	}

	@Override
	public int compareTo(ESFSportType esfSportType) {
		int value = 0;

		value = getName().compareTo(esfSportType.getName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFSportType)) {
			return false;
		}

		ESFSportType esfSportType = (ESFSportType)obj;

		long primaryKey = esfSportType.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFSportTypeModelImpl esfSportTypeModelImpl = this;

		esfSportTypeModelImpl._originalUuid = esfSportTypeModelImpl._uuid;

		esfSportTypeModelImpl._originalGroupId = esfSportTypeModelImpl._groupId;

		esfSportTypeModelImpl._setOriginalGroupId = false;

		esfSportTypeModelImpl._originalCompanyId = esfSportTypeModelImpl._companyId;

		esfSportTypeModelImpl._setOriginalCompanyId = false;

		esfSportTypeModelImpl._originalName = esfSportTypeModelImpl._name;

		esfSportTypeModelImpl._originalNational = esfSportTypeModelImpl._national;

		esfSportTypeModelImpl._setOriginalNational = false;

		esfSportTypeModelImpl._originalCode = esfSportTypeModelImpl._code;

		esfSportTypeModelImpl._originalIsOlimpic = esfSportTypeModelImpl._isOlimpic;

		esfSportTypeModelImpl._setOriginalIsOlimpic = false;

		esfSportTypeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFSportType> toCacheModel() {
		ESFSportTypeCacheModel esfSportTypeCacheModel = new ESFSportTypeCacheModel();

		esfSportTypeCacheModel.uuid = getUuid();

		String uuid = esfSportTypeCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			esfSportTypeCacheModel.uuid = null;
		}

		esfSportTypeCacheModel.esfSportTypeId = getEsfSportTypeId();

		esfSportTypeCacheModel.groupId = getGroupId();

		esfSportTypeCacheModel.companyId = getCompanyId();

		esfSportTypeCacheModel.userId = getUserId();

		esfSportTypeCacheModel.userName = getUserName();

		String userName = esfSportTypeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			esfSportTypeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			esfSportTypeCacheModel.createDate = createDate.getTime();
		}
		else {
			esfSportTypeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			esfSportTypeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			esfSportTypeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		esfSportTypeCacheModel.name = getName();

		String name = esfSportTypeCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			esfSportTypeCacheModel.name = null;
		}

		esfSportTypeCacheModel.description = getDescription();

		String description = esfSportTypeCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			esfSportTypeCacheModel.description = null;
		}

		esfSportTypeCacheModel.national = getNational();

		esfSportTypeCacheModel.code = getCode();

		String code = esfSportTypeCacheModel.code;

		if ((code != null) && (code.length() == 0)) {
			esfSportTypeCacheModel.code = null;
		}

		esfSportTypeCacheModel.isChangeCategory = getIsChangeCategory();

		esfSportTypeCacheModel.isOlimpic = getIsOlimpic();

		return esfSportTypeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", esfSportTypeId=");
		sb.append(getEsfSportTypeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", national=");
		sb.append(getNational());
		sb.append(", code=");
		sb.append(getCode());
		sb.append(", isChangeCategory=");
		sb.append(getIsChangeCategory());
		sb.append(", isOlimpic=");
		sb.append(getIsOlimpic());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFSportType");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfSportTypeId</column-name><column-value><![CDATA[");
		sb.append(getEsfSportTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>national</column-name><column-value><![CDATA[");
		sb.append(getNational());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>code</column-name><column-value><![CDATA[");
		sb.append(getCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isChangeCategory</column-name><column-value><![CDATA[");
		sb.append(getIsChangeCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isOlimpic</column-name><column-value><![CDATA[");
		sb.append(getIsOlimpic());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFSportType.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFSportType.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _esfSportTypeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _name;
	private String _originalName;
	private String _description;
	private boolean _national;
	private boolean _originalNational;
	private boolean _setOriginalNational;
	private String _code;
	private String _originalCode;
	private boolean _isChangeCategory;
	private boolean _isOlimpic;
	private boolean _originalIsOlimpic;
	private boolean _setOriginalIsOlimpic;
	private long _columnBitmask;
	private ESFSportType _escapedModel;
}