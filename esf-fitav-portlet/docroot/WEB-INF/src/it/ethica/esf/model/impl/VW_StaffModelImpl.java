/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import it.ethica.esf.model.VW_Staff;
import it.ethica.esf.model.VW_StaffModel;
import it.ethica.esf.service.persistence.VW_StaffPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VW_Staff service. Represents a row in the &quot;vw_staff&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.VW_StaffModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VW_StaffImpl}.
 * </p>
 *
 * @author Ethica
 * @see VW_StaffImpl
 * @see it.ethica.esf.model.VW_Staff
 * @see it.ethica.esf.model.VW_StaffModel
 * @generated
 */
public class VW_StaffModelImpl extends BaseModelImpl<VW_Staff>
	implements VW_StaffModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a v w_ staff model instance should use the {@link it.ethica.esf.model.VW_Staff} interface instead.
	 */
	public static final String TABLE_NAME = "vw_staff";
	public static final Object[][] TABLE_COLUMNS = {
			{ "userId", Types.BIGINT },
			{ "emailAddress", Types.VARCHAR },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "esfStartData", Types.TIMESTAMP },
			{ "esfEndData", Types.TIMESTAMP },
			{ "regionId", Types.VARCHAR },
			{ "provinceId", Types.VARCHAR },
			{ "esfShootingDirectorQualificationDesc", Types.VARCHAR },
			{ "esfSportTypeId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "invitato", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table vw_staff (userId LONG not null,emailAddress VARCHAR(75) null,firstName VARCHAR(75) null,lastName VARCHAR(75) null,createDate DATE null,esfStartData DATE null,esfEndData DATE null,regionId VARCHAR(75) not null,provinceId VARCHAR(75) not null,esfShootingDirectorQualificationDesc VARCHAR(75) null,esfSportTypeId LONG not null,name VARCHAR(75) null,invitato LONG,primary key (userId, regionId, provinceId, esfSportTypeId))";
	public static final String TABLE_SQL_DROP = "drop table vw_staff";
	public static final String ORDER_BY_JPQL = " ORDER BY vw_Staff.id.userId ASC, vw_Staff.id.regionId ASC, vw_Staff.id.provinceId ASC, vw_Staff.id.esfSportTypeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vw_staff.userId ASC, vw_staff.regionId ASC, vw_staff.provinceId ASC, vw_staff.esfSportTypeId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.VW_Staff"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.VW_Staff"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.VW_Staff"));

	public VW_StaffModelImpl() {
	}

	@Override
	public VW_StaffPK getPrimaryKey() {
		return new VW_StaffPK(_userId, _regionId, _provinceId, _esfSportTypeId);
	}

	@Override
	public void setPrimaryKey(VW_StaffPK primaryKey) {
		setUserId(primaryKey.userId);
		setRegionId(primaryKey.regionId);
		setProvinceId(primaryKey.provinceId);
		setEsfSportTypeId(primaryKey.esfSportTypeId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new VW_StaffPK(_userId, _regionId, _provinceId, _esfSportTypeId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((VW_StaffPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return VW_Staff.class;
	}

	@Override
	public String getModelClassName() {
		return VW_Staff.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("userId", getUserId());
		attributes.put("emailAddress", getEmailAddress());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("createDate", getCreateDate());
		attributes.put("esfStartData", getEsfStartData());
		attributes.put("esfEndData", getEsfEndData());
		attributes.put("regionId", getRegionId());
		attributes.put("provinceId", getProvinceId());
		attributes.put("esfShootingDirectorQualificationDesc",
			getEsfShootingDirectorQualificationDesc());
		attributes.put("esfSportTypeId", getEsfSportTypeId());
		attributes.put("name", getName());
		attributes.put("invitato", getInvitato());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String emailAddress = (String)attributes.get("emailAddress");

		if (emailAddress != null) {
			setEmailAddress(emailAddress);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date esfStartData = (Date)attributes.get("esfStartData");

		if (esfStartData != null) {
			setEsfStartData(esfStartData);
		}

		Date esfEndData = (Date)attributes.get("esfEndData");

		if (esfEndData != null) {
			setEsfEndData(esfEndData);
		}

		String regionId = (String)attributes.get("regionId");

		if (regionId != null) {
			setRegionId(regionId);
		}

		String provinceId = (String)attributes.get("provinceId");

		if (provinceId != null) {
			setProvinceId(provinceId);
		}

		String esfShootingDirectorQualificationDesc = (String)attributes.get(
				"esfShootingDirectorQualificationDesc");

		if (esfShootingDirectorQualificationDesc != null) {
			setEsfShootingDirectorQualificationDesc(esfShootingDirectorQualificationDesc);
		}

		Long esfSportTypeId = (Long)attributes.get("esfSportTypeId");

		if (esfSportTypeId != null) {
			setEsfSportTypeId(esfSportTypeId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Long invitato = (Long)attributes.get("invitato");

		if (invitato != null) {
			setInvitato(invitato);
		}
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getEmailAddress() {
		if (_emailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailAddress;
		}
	}

	@Override
	public void setEmailAddress(String emailAddress) {
		_emailAddress = emailAddress;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_firstName = firstName;
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_lastName = lastName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getEsfStartData() {
		return _esfStartData;
	}

	@Override
	public void setEsfStartData(Date esfStartData) {
		_esfStartData = esfStartData;
	}

	@Override
	public Date getEsfEndData() {
		return _esfEndData;
	}

	@Override
	public void setEsfEndData(Date esfEndData) {
		_esfEndData = esfEndData;
	}

	@Override
	public String getRegionId() {
		if (_regionId == null) {
			return StringPool.BLANK;
		}
		else {
			return _regionId;
		}
	}

	@Override
	public void setRegionId(String regionId) {
		_regionId = regionId;
	}

	@Override
	public String getProvinceId() {
		if (_provinceId == null) {
			return StringPool.BLANK;
		}
		else {
			return _provinceId;
		}
	}

	@Override
	public void setProvinceId(String provinceId) {
		_provinceId = provinceId;
	}

	@Override
	public String getEsfShootingDirectorQualificationDesc() {
		if (_esfShootingDirectorQualificationDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _esfShootingDirectorQualificationDesc;
		}
	}

	@Override
	public void setEsfShootingDirectorQualificationDesc(
		String esfShootingDirectorQualificationDesc) {
		_esfShootingDirectorQualificationDesc = esfShootingDirectorQualificationDesc;
	}

	@Override
	public long getEsfSportTypeId() {
		return _esfSportTypeId;
	}

	@Override
	public void setEsfSportTypeId(long esfSportTypeId) {
		_esfSportTypeId = esfSportTypeId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public long getInvitato() {
		return _invitato;
	}

	@Override
	public void setInvitato(long invitato) {
		_invitato = invitato;
	}

	@Override
	public VW_Staff toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VW_Staff)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VW_StaffImpl vw_StaffImpl = new VW_StaffImpl();

		vw_StaffImpl.setUserId(getUserId());
		vw_StaffImpl.setEmailAddress(getEmailAddress());
		vw_StaffImpl.setFirstName(getFirstName());
		vw_StaffImpl.setLastName(getLastName());
		vw_StaffImpl.setCreateDate(getCreateDate());
		vw_StaffImpl.setEsfStartData(getEsfStartData());
		vw_StaffImpl.setEsfEndData(getEsfEndData());
		vw_StaffImpl.setRegionId(getRegionId());
		vw_StaffImpl.setProvinceId(getProvinceId());
		vw_StaffImpl.setEsfShootingDirectorQualificationDesc(getEsfShootingDirectorQualificationDesc());
		vw_StaffImpl.setEsfSportTypeId(getEsfSportTypeId());
		vw_StaffImpl.setName(getName());
		vw_StaffImpl.setInvitato(getInvitato());

		vw_StaffImpl.resetOriginalValues();

		return vw_StaffImpl;
	}

	@Override
	public int compareTo(VW_Staff vw_Staff) {
		VW_StaffPK primaryKey = vw_Staff.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VW_Staff)) {
			return false;
		}

		VW_Staff vw_Staff = (VW_Staff)obj;

		VW_StaffPK primaryKey = vw_Staff.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<VW_Staff> toCacheModel() {
		VW_StaffCacheModel vw_StaffCacheModel = new VW_StaffCacheModel();

		vw_StaffCacheModel.userId = getUserId();

		vw_StaffCacheModel.emailAddress = getEmailAddress();

		String emailAddress = vw_StaffCacheModel.emailAddress;

		if ((emailAddress != null) && (emailAddress.length() == 0)) {
			vw_StaffCacheModel.emailAddress = null;
		}

		vw_StaffCacheModel.firstName = getFirstName();

		String firstName = vw_StaffCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			vw_StaffCacheModel.firstName = null;
		}

		vw_StaffCacheModel.lastName = getLastName();

		String lastName = vw_StaffCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			vw_StaffCacheModel.lastName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			vw_StaffCacheModel.createDate = createDate.getTime();
		}
		else {
			vw_StaffCacheModel.createDate = Long.MIN_VALUE;
		}

		Date esfStartData = getEsfStartData();

		if (esfStartData != null) {
			vw_StaffCacheModel.esfStartData = esfStartData.getTime();
		}
		else {
			vw_StaffCacheModel.esfStartData = Long.MIN_VALUE;
		}

		Date esfEndData = getEsfEndData();

		if (esfEndData != null) {
			vw_StaffCacheModel.esfEndData = esfEndData.getTime();
		}
		else {
			vw_StaffCacheModel.esfEndData = Long.MIN_VALUE;
		}

		vw_StaffCacheModel.regionId = getRegionId();

		String regionId = vw_StaffCacheModel.regionId;

		if ((regionId != null) && (regionId.length() == 0)) {
			vw_StaffCacheModel.regionId = null;
		}

		vw_StaffCacheModel.provinceId = getProvinceId();

		String provinceId = vw_StaffCacheModel.provinceId;

		if ((provinceId != null) && (provinceId.length() == 0)) {
			vw_StaffCacheModel.provinceId = null;
		}

		vw_StaffCacheModel.esfShootingDirectorQualificationDesc = getEsfShootingDirectorQualificationDesc();

		String esfShootingDirectorQualificationDesc = vw_StaffCacheModel.esfShootingDirectorQualificationDesc;

		if ((esfShootingDirectorQualificationDesc != null) &&
				(esfShootingDirectorQualificationDesc.length() == 0)) {
			vw_StaffCacheModel.esfShootingDirectorQualificationDesc = null;
		}

		vw_StaffCacheModel.esfSportTypeId = getEsfSportTypeId();

		vw_StaffCacheModel.name = getName();

		String name = vw_StaffCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			vw_StaffCacheModel.name = null;
		}

		vw_StaffCacheModel.invitato = getInvitato();

		return vw_StaffCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{userId=");
		sb.append(getUserId());
		sb.append(", emailAddress=");
		sb.append(getEmailAddress());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", esfStartData=");
		sb.append(getEsfStartData());
		sb.append(", esfEndData=");
		sb.append(getEsfEndData());
		sb.append(", regionId=");
		sb.append(getRegionId());
		sb.append(", provinceId=");
		sb.append(getProvinceId());
		sb.append(", esfShootingDirectorQualificationDesc=");
		sb.append(getEsfShootingDirectorQualificationDesc());
		sb.append(", esfSportTypeId=");
		sb.append(getEsfSportTypeId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", invitato=");
		sb.append(getInvitato());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.VW_Staff");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailAddress</column-name><column-value><![CDATA[");
		sb.append(getEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfStartData</column-name><column-value><![CDATA[");
		sb.append(getEsfStartData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfEndData</column-name><column-value><![CDATA[");
		sb.append(getEsfEndData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>regionId</column-name><column-value><![CDATA[");
		sb.append(getRegionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>provinceId</column-name><column-value><![CDATA[");
		sb.append(getProvinceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfShootingDirectorQualificationDesc</column-name><column-value><![CDATA[");
		sb.append(getEsfShootingDirectorQualificationDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfSportTypeId</column-name><column-value><![CDATA[");
		sb.append(getEsfSportTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invitato</column-name><column-value><![CDATA[");
		sb.append(getInvitato());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VW_Staff.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VW_Staff.class
		};
	private long _userId;
	private String _userUuid;
	private String _emailAddress;
	private String _firstName;
	private String _lastName;
	private Date _createDate;
	private Date _esfStartData;
	private Date _esfEndData;
	private String _regionId;
	private String _provinceId;
	private String _esfShootingDirectorQualificationDesc;
	private long _esfSportTypeId;
	private String _name;
	private long _invitato;
	private VW_Staff _escapedModel;
}