/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFPartecipantInfo;
import it.ethica.esf.model.ESFPartecipantInfoModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFPartecipantInfo service. Represents a row in the &quot;ESFPartecipantInfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFPartecipantInfoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFPartecipantInfoImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFPartecipantInfoImpl
 * @see it.ethica.esf.model.ESFPartecipantInfo
 * @see it.ethica.esf.model.ESFPartecipantInfoModel
 * @generated
 */
public class ESFPartecipantInfoModelImpl extends BaseModelImpl<ESFPartecipantInfo>
	implements ESFPartecipantInfoModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f partecipant info model instance should use the {@link it.ethica.esf.model.ESFPartecipantInfo} interface instead.
	 */
	public static final String TABLE_NAME = "ESFPartecipantInfo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "esfPartecipantInfoId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "isPortalUser", Types.BOOLEAN },
			{ "esfUserId", Types.BIGINT },
			{ "protocol", Types.BIGINT },
			{ "firstName", Types.VARCHAR },
			{ "lastName", Types.VARCHAR },
			{ "placeOfBirth", Types.VARCHAR },
			{ "dateOfBirth", Types.TIMESTAMP },
			{ "residenceCity", Types.VARCHAR },
			{ "province", Types.VARCHAR },
			{ "zip", Types.INTEGER },
			{ "address", Types.VARCHAR },
			{ "phonNumber", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "maritialStatus", Types.VARCHAR },
			{ "fiscalCode", Types.VARCHAR },
			{ "passport", Types.VARCHAR },
			{ "releasedBy", Types.VARCHAR },
			{ "passportReleaseDate", Types.TIMESTAMP },
			{ "passportExpirationDate", Types.TIMESTAMP },
			{ "europeanCardNumber", Types.VARCHAR },
			{ "europeanCardReleaseDate", Types.TIMESTAMP },
			{ "europeanCardExpirationDate", Types.TIMESTAMP },
			{ "gunLicenceNumber", Types.VARCHAR },
			{ "gunLicenceReleaseDate", Types.TIMESTAMP },
			{ "gunLicenceExpirationDate", Types.TIMESTAMP },
			{ "firstGunType", Types.VARCHAR },
			{ "firstGunKind", Types.VARCHAR },
			{ "firstGunCaliber", Types.DOUBLE },
			{ "firstGunCode", Types.VARCHAR },
			{ "firstGunExtraCanes", Types.VARCHAR },
			{ "secondGunType", Types.VARCHAR },
			{ "secondGunKind", Types.VARCHAR },
			{ "secondGunCaliber", Types.DOUBLE },
			{ "secondGunCode", Types.VARCHAR },
			{ "secondGunExtraCanes", Types.VARCHAR },
			{ "gunCartridgeType", Types.VARCHAR },
			{ "gunCartridgeKind", Types.VARCHAR },
			{ "cartridgeCaliber", Types.VARCHAR },
			{ "esfMatchId", Types.BIGINT },
			{ "esfGunTypeIdOne", Types.BIGINT },
			{ "esfGunKindIdOne", Types.BIGINT },
			{ "esfGunTypeIdTwo", Types.BIGINT },
			{ "esfGunKindIdTwo", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFPartecipantInfo (esfPartecipantInfoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,isPortalUser BOOLEAN,esfUserId LONG,protocol LONG,firstName VARCHAR(75) null,lastName VARCHAR(75) null,placeOfBirth VARCHAR(75) null,dateOfBirth DATE null,residenceCity VARCHAR(75) null,province VARCHAR(75) null,zip INTEGER,address VARCHAR(75) null,phonNumber VARCHAR(75) null,email VARCHAR(75) null,maritialStatus VARCHAR(75) null,fiscalCode VARCHAR(75) null,passport VARCHAR(75) null,releasedBy VARCHAR(75) null,passportReleaseDate DATE null,passportExpirationDate DATE null,europeanCardNumber VARCHAR(75) null,europeanCardReleaseDate DATE null,europeanCardExpirationDate DATE null,gunLicenceNumber VARCHAR(75) null,gunLicenceReleaseDate DATE null,gunLicenceExpirationDate DATE null,firstGunType VARCHAR(75) null,firstGunKind VARCHAR(75) null,firstGunCaliber DOUBLE,firstGunCode VARCHAR(75) null,firstGunExtraCanes VARCHAR(75) null,secondGunType VARCHAR(75) null,secondGunKind VARCHAR(75) null,secondGunCaliber DOUBLE,secondGunCode VARCHAR(75) null,secondGunExtraCanes VARCHAR(75) null,gunCartridgeType VARCHAR(75) null,gunCartridgeKind VARCHAR(75) null,cartridgeCaliber VARCHAR(75) null,esfMatchId LONG,esfGunTypeIdOne LONG,esfGunKindIdOne LONG,esfGunTypeIdTwo LONG,esfGunKindIdTwo LONG)";
	public static final String TABLE_SQL_DROP = "drop table ESFPartecipantInfo";
	public static final String ORDER_BY_JPQL = " ORDER BY esfPartecipantInfo.esfPartecipantInfoId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFPartecipantInfo.esfPartecipantInfoId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFPartecipantInfo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFPartecipantInfo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFPartecipantInfo"),
			true);
	public static long FIRSTNAME_COLUMN_BITMASK = 1L;
	public static long LASTNAME_COLUMN_BITMASK = 2L;
	public static long PROTOCOL_COLUMN_BITMASK = 4L;
	public static long ESFPARTECIPANTINFOID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFPartecipantInfo"));

	public ESFPartecipantInfoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfPartecipantInfoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfPartecipantInfoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfPartecipantInfoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFPartecipantInfo.class;
	}

	@Override
	public String getModelClassName() {
		return ESFPartecipantInfo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("esfPartecipantInfoId", getEsfPartecipantInfoId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("isPortalUser", getIsPortalUser());
		attributes.put("esfUserId", getEsfUserId());
		attributes.put("protocol", getProtocol());
		attributes.put("firstName", getFirstName());
		attributes.put("lastName", getLastName());
		attributes.put("placeOfBirth", getPlaceOfBirth());
		attributes.put("dateOfBirth", getDateOfBirth());
		attributes.put("residenceCity", getResidenceCity());
		attributes.put("province", getProvince());
		attributes.put("zip", getZip());
		attributes.put("address", getAddress());
		attributes.put("phonNumber", getPhonNumber());
		attributes.put("email", getEmail());
		attributes.put("maritialStatus", getMaritialStatus());
		attributes.put("fiscalCode", getFiscalCode());
		attributes.put("passport", getPassport());
		attributes.put("releasedBy", getReleasedBy());
		attributes.put("passportReleaseDate", getPassportReleaseDate());
		attributes.put("passportExpirationDate", getPassportExpirationDate());
		attributes.put("europeanCardNumber", getEuropeanCardNumber());
		attributes.put("europeanCardReleaseDate", getEuropeanCardReleaseDate());
		attributes.put("europeanCardExpirationDate",
			getEuropeanCardExpirationDate());
		attributes.put("gunLicenceNumber", getGunLicenceNumber());
		attributes.put("gunLicenceReleaseDate", getGunLicenceReleaseDate());
		attributes.put("gunLicenceExpirationDate", getGunLicenceExpirationDate());
		attributes.put("firstGunType", getFirstGunType());
		attributes.put("firstGunKind", getFirstGunKind());
		attributes.put("firstGunCaliber", getFirstGunCaliber());
		attributes.put("firstGunCode", getFirstGunCode());
		attributes.put("firstGunExtraCanes", getFirstGunExtraCanes());
		attributes.put("secondGunType", getSecondGunType());
		attributes.put("secondGunKind", getSecondGunKind());
		attributes.put("secondGunCaliber", getSecondGunCaliber());
		attributes.put("secondGunCode", getSecondGunCode());
		attributes.put("secondGunExtraCanes", getSecondGunExtraCanes());
		attributes.put("gunCartridgeType", getGunCartridgeType());
		attributes.put("gunCartridgeKind", getGunCartridgeKind());
		attributes.put("cartridgeCaliber", getCartridgeCaliber());
		attributes.put("esfMatchId", getEsfMatchId());
		attributes.put("esfGunTypeIdOne", getEsfGunTypeIdOne());
		attributes.put("esfGunKindIdOne", getEsfGunKindIdOne());
		attributes.put("esfGunTypeIdTwo", getEsfGunTypeIdTwo());
		attributes.put("esfGunKindIdTwo", getEsfGunKindIdTwo());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long esfPartecipantInfoId = (Long)attributes.get("esfPartecipantInfoId");

		if (esfPartecipantInfoId != null) {
			setEsfPartecipantInfoId(esfPartecipantInfoId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Boolean isPortalUser = (Boolean)attributes.get("isPortalUser");

		if (isPortalUser != null) {
			setIsPortalUser(isPortalUser);
		}

		Long esfUserId = (Long)attributes.get("esfUserId");

		if (esfUserId != null) {
			setEsfUserId(esfUserId);
		}

		Long protocol = (Long)attributes.get("protocol");

		if (protocol != null) {
			setProtocol(protocol);
		}

		String firstName = (String)attributes.get("firstName");

		if (firstName != null) {
			setFirstName(firstName);
		}

		String lastName = (String)attributes.get("lastName");

		if (lastName != null) {
			setLastName(lastName);
		}

		String placeOfBirth = (String)attributes.get("placeOfBirth");

		if (placeOfBirth != null) {
			setPlaceOfBirth(placeOfBirth);
		}

		Date dateOfBirth = (Date)attributes.get("dateOfBirth");

		if (dateOfBirth != null) {
			setDateOfBirth(dateOfBirth);
		}

		String residenceCity = (String)attributes.get("residenceCity");

		if (residenceCity != null) {
			setResidenceCity(residenceCity);
		}

		String province = (String)attributes.get("province");

		if (province != null) {
			setProvince(province);
		}

		Integer zip = (Integer)attributes.get("zip");

		if (zip != null) {
			setZip(zip);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String phonNumber = (String)attributes.get("phonNumber");

		if (phonNumber != null) {
			setPhonNumber(phonNumber);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String maritialStatus = (String)attributes.get("maritialStatus");

		if (maritialStatus != null) {
			setMaritialStatus(maritialStatus);
		}

		String fiscalCode = (String)attributes.get("fiscalCode");

		if (fiscalCode != null) {
			setFiscalCode(fiscalCode);
		}

		String passport = (String)attributes.get("passport");

		if (passport != null) {
			setPassport(passport);
		}

		String releasedBy = (String)attributes.get("releasedBy");

		if (releasedBy != null) {
			setReleasedBy(releasedBy);
		}

		Date passportReleaseDate = (Date)attributes.get("passportReleaseDate");

		if (passportReleaseDate != null) {
			setPassportReleaseDate(passportReleaseDate);
		}

		Date passportExpirationDate = (Date)attributes.get(
				"passportExpirationDate");

		if (passportExpirationDate != null) {
			setPassportExpirationDate(passportExpirationDate);
		}

		String europeanCardNumber = (String)attributes.get("europeanCardNumber");

		if (europeanCardNumber != null) {
			setEuropeanCardNumber(europeanCardNumber);
		}

		Date europeanCardReleaseDate = (Date)attributes.get(
				"europeanCardReleaseDate");

		if (europeanCardReleaseDate != null) {
			setEuropeanCardReleaseDate(europeanCardReleaseDate);
		}

		Date europeanCardExpirationDate = (Date)attributes.get(
				"europeanCardExpirationDate");

		if (europeanCardExpirationDate != null) {
			setEuropeanCardExpirationDate(europeanCardExpirationDate);
		}

		String gunLicenceNumber = (String)attributes.get("gunLicenceNumber");

		if (gunLicenceNumber != null) {
			setGunLicenceNumber(gunLicenceNumber);
		}

		Date gunLicenceReleaseDate = (Date)attributes.get(
				"gunLicenceReleaseDate");

		if (gunLicenceReleaseDate != null) {
			setGunLicenceReleaseDate(gunLicenceReleaseDate);
		}

		Date gunLicenceExpirationDate = (Date)attributes.get(
				"gunLicenceExpirationDate");

		if (gunLicenceExpirationDate != null) {
			setGunLicenceExpirationDate(gunLicenceExpirationDate);
		}

		String firstGunType = (String)attributes.get("firstGunType");

		if (firstGunType != null) {
			setFirstGunType(firstGunType);
		}

		String firstGunKind = (String)attributes.get("firstGunKind");

		if (firstGunKind != null) {
			setFirstGunKind(firstGunKind);
		}

		Double firstGunCaliber = (Double)attributes.get("firstGunCaliber");

		if (firstGunCaliber != null) {
			setFirstGunCaliber(firstGunCaliber);
		}

		String firstGunCode = (String)attributes.get("firstGunCode");

		if (firstGunCode != null) {
			setFirstGunCode(firstGunCode);
		}

		String firstGunExtraCanes = (String)attributes.get("firstGunExtraCanes");

		if (firstGunExtraCanes != null) {
			setFirstGunExtraCanes(firstGunExtraCanes);
		}

		String secondGunType = (String)attributes.get("secondGunType");

		if (secondGunType != null) {
			setSecondGunType(secondGunType);
		}

		String secondGunKind = (String)attributes.get("secondGunKind");

		if (secondGunKind != null) {
			setSecondGunKind(secondGunKind);
		}

		Double secondGunCaliber = (Double)attributes.get("secondGunCaliber");

		if (secondGunCaliber != null) {
			setSecondGunCaliber(secondGunCaliber);
		}

		String secondGunCode = (String)attributes.get("secondGunCode");

		if (secondGunCode != null) {
			setSecondGunCode(secondGunCode);
		}

		String secondGunExtraCanes = (String)attributes.get(
				"secondGunExtraCanes");

		if (secondGunExtraCanes != null) {
			setSecondGunExtraCanes(secondGunExtraCanes);
		}

		String gunCartridgeType = (String)attributes.get("gunCartridgeType");

		if (gunCartridgeType != null) {
			setGunCartridgeType(gunCartridgeType);
		}

		String gunCartridgeKind = (String)attributes.get("gunCartridgeKind");

		if (gunCartridgeKind != null) {
			setGunCartridgeKind(gunCartridgeKind);
		}

		String cartridgeCaliber = (String)attributes.get("cartridgeCaliber");

		if (cartridgeCaliber != null) {
			setCartridgeCaliber(cartridgeCaliber);
		}

		Long esfMatchId = (Long)attributes.get("esfMatchId");

		if (esfMatchId != null) {
			setEsfMatchId(esfMatchId);
		}

		Long esfGunTypeIdOne = (Long)attributes.get("esfGunTypeIdOne");

		if (esfGunTypeIdOne != null) {
			setEsfGunTypeIdOne(esfGunTypeIdOne);
		}

		Long esfGunKindIdOne = (Long)attributes.get("esfGunKindIdOne");

		if (esfGunKindIdOne != null) {
			setEsfGunKindIdOne(esfGunKindIdOne);
		}

		Long esfGunTypeIdTwo = (Long)attributes.get("esfGunTypeIdTwo");

		if (esfGunTypeIdTwo != null) {
			setEsfGunTypeIdTwo(esfGunTypeIdTwo);
		}

		Long esfGunKindIdTwo = (Long)attributes.get("esfGunKindIdTwo");

		if (esfGunKindIdTwo != null) {
			setEsfGunKindIdTwo(esfGunKindIdTwo);
		}
	}

	@Override
	public long getEsfPartecipantInfoId() {
		return _esfPartecipantInfoId;
	}

	@Override
	public void setEsfPartecipantInfoId(long esfPartecipantInfoId) {
		_esfPartecipantInfoId = esfPartecipantInfoId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public boolean getIsPortalUser() {
		return _isPortalUser;
	}

	@Override
	public boolean isIsPortalUser() {
		return _isPortalUser;
	}

	@Override
	public void setIsPortalUser(boolean isPortalUser) {
		_isPortalUser = isPortalUser;
	}

	@Override
	public long getEsfUserId() {
		return _esfUserId;
	}

	@Override
	public void setEsfUserId(long esfUserId) {
		_esfUserId = esfUserId;
	}

	@Override
	public String getEsfUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getEsfUserId(), "uuid", _esfUserUuid);
	}

	@Override
	public void setEsfUserUuid(String esfUserUuid) {
		_esfUserUuid = esfUserUuid;
	}

	@Override
	public long getProtocol() {
		return _protocol;
	}

	@Override
	public void setProtocol(long protocol) {
		_columnBitmask |= PROTOCOL_COLUMN_BITMASK;

		if (!_setOriginalProtocol) {
			_setOriginalProtocol = true;

			_originalProtocol = _protocol;
		}

		_protocol = protocol;
	}

	public long getOriginalProtocol() {
		return _originalProtocol;
	}

	@Override
	public String getFirstName() {
		if (_firstName == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstName;
		}
	}

	@Override
	public void setFirstName(String firstName) {
		_columnBitmask |= FIRSTNAME_COLUMN_BITMASK;

		if (_originalFirstName == null) {
			_originalFirstName = _firstName;
		}

		_firstName = firstName;
	}

	public String getOriginalFirstName() {
		return GetterUtil.getString(_originalFirstName);
	}

	@Override
	public String getLastName() {
		if (_lastName == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastName;
		}
	}

	@Override
	public void setLastName(String lastName) {
		_columnBitmask |= LASTNAME_COLUMN_BITMASK;

		if (_originalLastName == null) {
			_originalLastName = _lastName;
		}

		_lastName = lastName;
	}

	public String getOriginalLastName() {
		return GetterUtil.getString(_originalLastName);
	}

	@Override
	public String getPlaceOfBirth() {
		if (_placeOfBirth == null) {
			return StringPool.BLANK;
		}
		else {
			return _placeOfBirth;
		}
	}

	@Override
	public void setPlaceOfBirth(String placeOfBirth) {
		_placeOfBirth = placeOfBirth;
	}

	@Override
	public Date getDateOfBirth() {
		return _dateOfBirth;
	}

	@Override
	public void setDateOfBirth(Date dateOfBirth) {
		_dateOfBirth = dateOfBirth;
	}

	@Override
	public String getResidenceCity() {
		if (_residenceCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _residenceCity;
		}
	}

	@Override
	public void setResidenceCity(String residenceCity) {
		_residenceCity = residenceCity;
	}

	@Override
	public String getProvince() {
		if (_province == null) {
			return StringPool.BLANK;
		}
		else {
			return _province;
		}
	}

	@Override
	public void setProvince(String province) {
		_province = province;
	}

	@Override
	public int getZip() {
		return _zip;
	}

	@Override
	public void setZip(int zip) {
		_zip = zip;
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public String getPhonNumber() {
		if (_phonNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _phonNumber;
		}
	}

	@Override
	public void setPhonNumber(String phonNumber) {
		_phonNumber = phonNumber;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getMaritialStatus() {
		if (_maritialStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _maritialStatus;
		}
	}

	@Override
	public void setMaritialStatus(String maritialStatus) {
		_maritialStatus = maritialStatus;
	}

	@Override
	public String getFiscalCode() {
		if (_fiscalCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _fiscalCode;
		}
	}

	@Override
	public void setFiscalCode(String fiscalCode) {
		_fiscalCode = fiscalCode;
	}

	@Override
	public String getPassport() {
		if (_passport == null) {
			return StringPool.BLANK;
		}
		else {
			return _passport;
		}
	}

	@Override
	public void setPassport(String passport) {
		_passport = passport;
	}

	@Override
	public String getReleasedBy() {
		if (_releasedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _releasedBy;
		}
	}

	@Override
	public void setReleasedBy(String releasedBy) {
		_releasedBy = releasedBy;
	}

	@Override
	public Date getPassportReleaseDate() {
		return _passportReleaseDate;
	}

	@Override
	public void setPassportReleaseDate(Date passportReleaseDate) {
		_passportReleaseDate = passportReleaseDate;
	}

	@Override
	public Date getPassportExpirationDate() {
		return _passportExpirationDate;
	}

	@Override
	public void setPassportExpirationDate(Date passportExpirationDate) {
		_passportExpirationDate = passportExpirationDate;
	}

	@Override
	public String getEuropeanCardNumber() {
		if (_europeanCardNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _europeanCardNumber;
		}
	}

	@Override
	public void setEuropeanCardNumber(String europeanCardNumber) {
		_europeanCardNumber = europeanCardNumber;
	}

	@Override
	public Date getEuropeanCardReleaseDate() {
		return _europeanCardReleaseDate;
	}

	@Override
	public void setEuropeanCardReleaseDate(Date europeanCardReleaseDate) {
		_europeanCardReleaseDate = europeanCardReleaseDate;
	}

	@Override
	public Date getEuropeanCardExpirationDate() {
		return _europeanCardExpirationDate;
	}

	@Override
	public void setEuropeanCardExpirationDate(Date europeanCardExpirationDate) {
		_europeanCardExpirationDate = europeanCardExpirationDate;
	}

	@Override
	public String getGunLicenceNumber() {
		if (_gunLicenceNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _gunLicenceNumber;
		}
	}

	@Override
	public void setGunLicenceNumber(String gunLicenceNumber) {
		_gunLicenceNumber = gunLicenceNumber;
	}

	@Override
	public Date getGunLicenceReleaseDate() {
		return _gunLicenceReleaseDate;
	}

	@Override
	public void setGunLicenceReleaseDate(Date gunLicenceReleaseDate) {
		_gunLicenceReleaseDate = gunLicenceReleaseDate;
	}

	@Override
	public Date getGunLicenceExpirationDate() {
		return _gunLicenceExpirationDate;
	}

	@Override
	public void setGunLicenceExpirationDate(Date gunLicenceExpirationDate) {
		_gunLicenceExpirationDate = gunLicenceExpirationDate;
	}

	@Override
	public String getFirstGunType() {
		if (_firstGunType == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstGunType;
		}
	}

	@Override
	public void setFirstGunType(String firstGunType) {
		_firstGunType = firstGunType;
	}

	@Override
	public String getFirstGunKind() {
		if (_firstGunKind == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstGunKind;
		}
	}

	@Override
	public void setFirstGunKind(String firstGunKind) {
		_firstGunKind = firstGunKind;
	}

	@Override
	public double getFirstGunCaliber() {
		return _firstGunCaliber;
	}

	@Override
	public void setFirstGunCaliber(double firstGunCaliber) {
		_firstGunCaliber = firstGunCaliber;
	}

	@Override
	public String getFirstGunCode() {
		if (_firstGunCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstGunCode;
		}
	}

	@Override
	public void setFirstGunCode(String firstGunCode) {
		_firstGunCode = firstGunCode;
	}

	@Override
	public String getFirstGunExtraCanes() {
		if (_firstGunExtraCanes == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstGunExtraCanes;
		}
	}

	@Override
	public void setFirstGunExtraCanes(String firstGunExtraCanes) {
		_firstGunExtraCanes = firstGunExtraCanes;
	}

	@Override
	public String getSecondGunType() {
		if (_secondGunType == null) {
			return StringPool.BLANK;
		}
		else {
			return _secondGunType;
		}
	}

	@Override
	public void setSecondGunType(String secondGunType) {
		_secondGunType = secondGunType;
	}

	@Override
	public String getSecondGunKind() {
		if (_secondGunKind == null) {
			return StringPool.BLANK;
		}
		else {
			return _secondGunKind;
		}
	}

	@Override
	public void setSecondGunKind(String secondGunKind) {
		_secondGunKind = secondGunKind;
	}

	@Override
	public double getSecondGunCaliber() {
		return _secondGunCaliber;
	}

	@Override
	public void setSecondGunCaliber(double secondGunCaliber) {
		_secondGunCaliber = secondGunCaliber;
	}

	@Override
	public String getSecondGunCode() {
		if (_secondGunCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _secondGunCode;
		}
	}

	@Override
	public void setSecondGunCode(String secondGunCode) {
		_secondGunCode = secondGunCode;
	}

	@Override
	public String getSecondGunExtraCanes() {
		if (_secondGunExtraCanes == null) {
			return StringPool.BLANK;
		}
		else {
			return _secondGunExtraCanes;
		}
	}

	@Override
	public void setSecondGunExtraCanes(String secondGunExtraCanes) {
		_secondGunExtraCanes = secondGunExtraCanes;
	}

	@Override
	public String getGunCartridgeType() {
		if (_gunCartridgeType == null) {
			return StringPool.BLANK;
		}
		else {
			return _gunCartridgeType;
		}
	}

	@Override
	public void setGunCartridgeType(String gunCartridgeType) {
		_gunCartridgeType = gunCartridgeType;
	}

	@Override
	public String getGunCartridgeKind() {
		if (_gunCartridgeKind == null) {
			return StringPool.BLANK;
		}
		else {
			return _gunCartridgeKind;
		}
	}

	@Override
	public void setGunCartridgeKind(String gunCartridgeKind) {
		_gunCartridgeKind = gunCartridgeKind;
	}

	@Override
	public String getCartridgeCaliber() {
		if (_cartridgeCaliber == null) {
			return StringPool.BLANK;
		}
		else {
			return _cartridgeCaliber;
		}
	}

	@Override
	public void setCartridgeCaliber(String cartridgeCaliber) {
		_cartridgeCaliber = cartridgeCaliber;
	}

	@Override
	public long getEsfMatchId() {
		return _esfMatchId;
	}

	@Override
	public void setEsfMatchId(long esfMatchId) {
		_esfMatchId = esfMatchId;
	}

	@Override
	public long getEsfGunTypeIdOne() {
		return _esfGunTypeIdOne;
	}

	@Override
	public void setEsfGunTypeIdOne(long esfGunTypeIdOne) {
		_esfGunTypeIdOne = esfGunTypeIdOne;
	}

	@Override
	public long getEsfGunKindIdOne() {
		return _esfGunKindIdOne;
	}

	@Override
	public void setEsfGunKindIdOne(long esfGunKindIdOne) {
		_esfGunKindIdOne = esfGunKindIdOne;
	}

	@Override
	public long getEsfGunTypeIdTwo() {
		return _esfGunTypeIdTwo;
	}

	@Override
	public void setEsfGunTypeIdTwo(long esfGunTypeIdTwo) {
		_esfGunTypeIdTwo = esfGunTypeIdTwo;
	}

	@Override
	public long getEsfGunKindIdTwo() {
		return _esfGunKindIdTwo;
	}

	@Override
	public void setEsfGunKindIdTwo(long esfGunKindIdTwo) {
		_esfGunKindIdTwo = esfGunKindIdTwo;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ESFPartecipantInfo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFPartecipantInfo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFPartecipantInfo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFPartecipantInfoImpl esfPartecipantInfoImpl = new ESFPartecipantInfoImpl();

		esfPartecipantInfoImpl.setEsfPartecipantInfoId(getEsfPartecipantInfoId());
		esfPartecipantInfoImpl.setGroupId(getGroupId());
		esfPartecipantInfoImpl.setCompanyId(getCompanyId());
		esfPartecipantInfoImpl.setUserId(getUserId());
		esfPartecipantInfoImpl.setUserName(getUserName());
		esfPartecipantInfoImpl.setCreateDate(getCreateDate());
		esfPartecipantInfoImpl.setModifiedDate(getModifiedDate());
		esfPartecipantInfoImpl.setIsPortalUser(getIsPortalUser());
		esfPartecipantInfoImpl.setEsfUserId(getEsfUserId());
		esfPartecipantInfoImpl.setProtocol(getProtocol());
		esfPartecipantInfoImpl.setFirstName(getFirstName());
		esfPartecipantInfoImpl.setLastName(getLastName());
		esfPartecipantInfoImpl.setPlaceOfBirth(getPlaceOfBirth());
		esfPartecipantInfoImpl.setDateOfBirth(getDateOfBirth());
		esfPartecipantInfoImpl.setResidenceCity(getResidenceCity());
		esfPartecipantInfoImpl.setProvince(getProvince());
		esfPartecipantInfoImpl.setZip(getZip());
		esfPartecipantInfoImpl.setAddress(getAddress());
		esfPartecipantInfoImpl.setPhonNumber(getPhonNumber());
		esfPartecipantInfoImpl.setEmail(getEmail());
		esfPartecipantInfoImpl.setMaritialStatus(getMaritialStatus());
		esfPartecipantInfoImpl.setFiscalCode(getFiscalCode());
		esfPartecipantInfoImpl.setPassport(getPassport());
		esfPartecipantInfoImpl.setReleasedBy(getReleasedBy());
		esfPartecipantInfoImpl.setPassportReleaseDate(getPassportReleaseDate());
		esfPartecipantInfoImpl.setPassportExpirationDate(getPassportExpirationDate());
		esfPartecipantInfoImpl.setEuropeanCardNumber(getEuropeanCardNumber());
		esfPartecipantInfoImpl.setEuropeanCardReleaseDate(getEuropeanCardReleaseDate());
		esfPartecipantInfoImpl.setEuropeanCardExpirationDate(getEuropeanCardExpirationDate());
		esfPartecipantInfoImpl.setGunLicenceNumber(getGunLicenceNumber());
		esfPartecipantInfoImpl.setGunLicenceReleaseDate(getGunLicenceReleaseDate());
		esfPartecipantInfoImpl.setGunLicenceExpirationDate(getGunLicenceExpirationDate());
		esfPartecipantInfoImpl.setFirstGunType(getFirstGunType());
		esfPartecipantInfoImpl.setFirstGunKind(getFirstGunKind());
		esfPartecipantInfoImpl.setFirstGunCaliber(getFirstGunCaliber());
		esfPartecipantInfoImpl.setFirstGunCode(getFirstGunCode());
		esfPartecipantInfoImpl.setFirstGunExtraCanes(getFirstGunExtraCanes());
		esfPartecipantInfoImpl.setSecondGunType(getSecondGunType());
		esfPartecipantInfoImpl.setSecondGunKind(getSecondGunKind());
		esfPartecipantInfoImpl.setSecondGunCaliber(getSecondGunCaliber());
		esfPartecipantInfoImpl.setSecondGunCode(getSecondGunCode());
		esfPartecipantInfoImpl.setSecondGunExtraCanes(getSecondGunExtraCanes());
		esfPartecipantInfoImpl.setGunCartridgeType(getGunCartridgeType());
		esfPartecipantInfoImpl.setGunCartridgeKind(getGunCartridgeKind());
		esfPartecipantInfoImpl.setCartridgeCaliber(getCartridgeCaliber());
		esfPartecipantInfoImpl.setEsfMatchId(getEsfMatchId());
		esfPartecipantInfoImpl.setEsfGunTypeIdOne(getEsfGunTypeIdOne());
		esfPartecipantInfoImpl.setEsfGunKindIdOne(getEsfGunKindIdOne());
		esfPartecipantInfoImpl.setEsfGunTypeIdTwo(getEsfGunTypeIdTwo());
		esfPartecipantInfoImpl.setEsfGunKindIdTwo(getEsfGunKindIdTwo());

		esfPartecipantInfoImpl.resetOriginalValues();

		return esfPartecipantInfoImpl;
	}

	@Override
	public int compareTo(ESFPartecipantInfo esfPartecipantInfo) {
		long primaryKey = esfPartecipantInfo.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFPartecipantInfo)) {
			return false;
		}

		ESFPartecipantInfo esfPartecipantInfo = (ESFPartecipantInfo)obj;

		long primaryKey = esfPartecipantInfo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFPartecipantInfoModelImpl esfPartecipantInfoModelImpl = this;

		esfPartecipantInfoModelImpl._originalProtocol = esfPartecipantInfoModelImpl._protocol;

		esfPartecipantInfoModelImpl._setOriginalProtocol = false;

		esfPartecipantInfoModelImpl._originalFirstName = esfPartecipantInfoModelImpl._firstName;

		esfPartecipantInfoModelImpl._originalLastName = esfPartecipantInfoModelImpl._lastName;

		esfPartecipantInfoModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFPartecipantInfo> toCacheModel() {
		ESFPartecipantInfoCacheModel esfPartecipantInfoCacheModel = new ESFPartecipantInfoCacheModel();

		esfPartecipantInfoCacheModel.esfPartecipantInfoId = getEsfPartecipantInfoId();

		esfPartecipantInfoCacheModel.groupId = getGroupId();

		esfPartecipantInfoCacheModel.companyId = getCompanyId();

		esfPartecipantInfoCacheModel.userId = getUserId();

		esfPartecipantInfoCacheModel.userName = getUserName();

		String userName = esfPartecipantInfoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			esfPartecipantInfoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			esfPartecipantInfoCacheModel.createDate = createDate.getTime();
		}
		else {
			esfPartecipantInfoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			esfPartecipantInfoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			esfPartecipantInfoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		esfPartecipantInfoCacheModel.isPortalUser = getIsPortalUser();

		esfPartecipantInfoCacheModel.esfUserId = getEsfUserId();

		esfPartecipantInfoCacheModel.protocol = getProtocol();

		esfPartecipantInfoCacheModel.firstName = getFirstName();

		String firstName = esfPartecipantInfoCacheModel.firstName;

		if ((firstName != null) && (firstName.length() == 0)) {
			esfPartecipantInfoCacheModel.firstName = null;
		}

		esfPartecipantInfoCacheModel.lastName = getLastName();

		String lastName = esfPartecipantInfoCacheModel.lastName;

		if ((lastName != null) && (lastName.length() == 0)) {
			esfPartecipantInfoCacheModel.lastName = null;
		}

		esfPartecipantInfoCacheModel.placeOfBirth = getPlaceOfBirth();

		String placeOfBirth = esfPartecipantInfoCacheModel.placeOfBirth;

		if ((placeOfBirth != null) && (placeOfBirth.length() == 0)) {
			esfPartecipantInfoCacheModel.placeOfBirth = null;
		}

		Date dateOfBirth = getDateOfBirth();

		if (dateOfBirth != null) {
			esfPartecipantInfoCacheModel.dateOfBirth = dateOfBirth.getTime();
		}
		else {
			esfPartecipantInfoCacheModel.dateOfBirth = Long.MIN_VALUE;
		}

		esfPartecipantInfoCacheModel.residenceCity = getResidenceCity();

		String residenceCity = esfPartecipantInfoCacheModel.residenceCity;

		if ((residenceCity != null) && (residenceCity.length() == 0)) {
			esfPartecipantInfoCacheModel.residenceCity = null;
		}

		esfPartecipantInfoCacheModel.province = getProvince();

		String province = esfPartecipantInfoCacheModel.province;

		if ((province != null) && (province.length() == 0)) {
			esfPartecipantInfoCacheModel.province = null;
		}

		esfPartecipantInfoCacheModel.zip = getZip();

		esfPartecipantInfoCacheModel.address = getAddress();

		String address = esfPartecipantInfoCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			esfPartecipantInfoCacheModel.address = null;
		}

		esfPartecipantInfoCacheModel.phonNumber = getPhonNumber();

		String phonNumber = esfPartecipantInfoCacheModel.phonNumber;

		if ((phonNumber != null) && (phonNumber.length() == 0)) {
			esfPartecipantInfoCacheModel.phonNumber = null;
		}

		esfPartecipantInfoCacheModel.email = getEmail();

		String email = esfPartecipantInfoCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			esfPartecipantInfoCacheModel.email = null;
		}

		esfPartecipantInfoCacheModel.maritialStatus = getMaritialStatus();

		String maritialStatus = esfPartecipantInfoCacheModel.maritialStatus;

		if ((maritialStatus != null) && (maritialStatus.length() == 0)) {
			esfPartecipantInfoCacheModel.maritialStatus = null;
		}

		esfPartecipantInfoCacheModel.fiscalCode = getFiscalCode();

		String fiscalCode = esfPartecipantInfoCacheModel.fiscalCode;

		if ((fiscalCode != null) && (fiscalCode.length() == 0)) {
			esfPartecipantInfoCacheModel.fiscalCode = null;
		}

		esfPartecipantInfoCacheModel.passport = getPassport();

		String passport = esfPartecipantInfoCacheModel.passport;

		if ((passport != null) && (passport.length() == 0)) {
			esfPartecipantInfoCacheModel.passport = null;
		}

		esfPartecipantInfoCacheModel.releasedBy = getReleasedBy();

		String releasedBy = esfPartecipantInfoCacheModel.releasedBy;

		if ((releasedBy != null) && (releasedBy.length() == 0)) {
			esfPartecipantInfoCacheModel.releasedBy = null;
		}

		Date passportReleaseDate = getPassportReleaseDate();

		if (passportReleaseDate != null) {
			esfPartecipantInfoCacheModel.passportReleaseDate = passportReleaseDate.getTime();
		}
		else {
			esfPartecipantInfoCacheModel.passportReleaseDate = Long.MIN_VALUE;
		}

		Date passportExpirationDate = getPassportExpirationDate();

		if (passportExpirationDate != null) {
			esfPartecipantInfoCacheModel.passportExpirationDate = passportExpirationDate.getTime();
		}
		else {
			esfPartecipantInfoCacheModel.passportExpirationDate = Long.MIN_VALUE;
		}

		esfPartecipantInfoCacheModel.europeanCardNumber = getEuropeanCardNumber();

		String europeanCardNumber = esfPartecipantInfoCacheModel.europeanCardNumber;

		if ((europeanCardNumber != null) && (europeanCardNumber.length() == 0)) {
			esfPartecipantInfoCacheModel.europeanCardNumber = null;
		}

		Date europeanCardReleaseDate = getEuropeanCardReleaseDate();

		if (europeanCardReleaseDate != null) {
			esfPartecipantInfoCacheModel.europeanCardReleaseDate = europeanCardReleaseDate.getTime();
		}
		else {
			esfPartecipantInfoCacheModel.europeanCardReleaseDate = Long.MIN_VALUE;
		}

		Date europeanCardExpirationDate = getEuropeanCardExpirationDate();

		if (europeanCardExpirationDate != null) {
			esfPartecipantInfoCacheModel.europeanCardExpirationDate = europeanCardExpirationDate.getTime();
		}
		else {
			esfPartecipantInfoCacheModel.europeanCardExpirationDate = Long.MIN_VALUE;
		}

		esfPartecipantInfoCacheModel.gunLicenceNumber = getGunLicenceNumber();

		String gunLicenceNumber = esfPartecipantInfoCacheModel.gunLicenceNumber;

		if ((gunLicenceNumber != null) && (gunLicenceNumber.length() == 0)) {
			esfPartecipantInfoCacheModel.gunLicenceNumber = null;
		}

		Date gunLicenceReleaseDate = getGunLicenceReleaseDate();

		if (gunLicenceReleaseDate != null) {
			esfPartecipantInfoCacheModel.gunLicenceReleaseDate = gunLicenceReleaseDate.getTime();
		}
		else {
			esfPartecipantInfoCacheModel.gunLicenceReleaseDate = Long.MIN_VALUE;
		}

		Date gunLicenceExpirationDate = getGunLicenceExpirationDate();

		if (gunLicenceExpirationDate != null) {
			esfPartecipantInfoCacheModel.gunLicenceExpirationDate = gunLicenceExpirationDate.getTime();
		}
		else {
			esfPartecipantInfoCacheModel.gunLicenceExpirationDate = Long.MIN_VALUE;
		}

		esfPartecipantInfoCacheModel.firstGunType = getFirstGunType();

		String firstGunType = esfPartecipantInfoCacheModel.firstGunType;

		if ((firstGunType != null) && (firstGunType.length() == 0)) {
			esfPartecipantInfoCacheModel.firstGunType = null;
		}

		esfPartecipantInfoCacheModel.firstGunKind = getFirstGunKind();

		String firstGunKind = esfPartecipantInfoCacheModel.firstGunKind;

		if ((firstGunKind != null) && (firstGunKind.length() == 0)) {
			esfPartecipantInfoCacheModel.firstGunKind = null;
		}

		esfPartecipantInfoCacheModel.firstGunCaliber = getFirstGunCaliber();

		esfPartecipantInfoCacheModel.firstGunCode = getFirstGunCode();

		String firstGunCode = esfPartecipantInfoCacheModel.firstGunCode;

		if ((firstGunCode != null) && (firstGunCode.length() == 0)) {
			esfPartecipantInfoCacheModel.firstGunCode = null;
		}

		esfPartecipantInfoCacheModel.firstGunExtraCanes = getFirstGunExtraCanes();

		String firstGunExtraCanes = esfPartecipantInfoCacheModel.firstGunExtraCanes;

		if ((firstGunExtraCanes != null) && (firstGunExtraCanes.length() == 0)) {
			esfPartecipantInfoCacheModel.firstGunExtraCanes = null;
		}

		esfPartecipantInfoCacheModel.secondGunType = getSecondGunType();

		String secondGunType = esfPartecipantInfoCacheModel.secondGunType;

		if ((secondGunType != null) && (secondGunType.length() == 0)) {
			esfPartecipantInfoCacheModel.secondGunType = null;
		}

		esfPartecipantInfoCacheModel.secondGunKind = getSecondGunKind();

		String secondGunKind = esfPartecipantInfoCacheModel.secondGunKind;

		if ((secondGunKind != null) && (secondGunKind.length() == 0)) {
			esfPartecipantInfoCacheModel.secondGunKind = null;
		}

		esfPartecipantInfoCacheModel.secondGunCaliber = getSecondGunCaliber();

		esfPartecipantInfoCacheModel.secondGunCode = getSecondGunCode();

		String secondGunCode = esfPartecipantInfoCacheModel.secondGunCode;

		if ((secondGunCode != null) && (secondGunCode.length() == 0)) {
			esfPartecipantInfoCacheModel.secondGunCode = null;
		}

		esfPartecipantInfoCacheModel.secondGunExtraCanes = getSecondGunExtraCanes();

		String secondGunExtraCanes = esfPartecipantInfoCacheModel.secondGunExtraCanes;

		if ((secondGunExtraCanes != null) &&
				(secondGunExtraCanes.length() == 0)) {
			esfPartecipantInfoCacheModel.secondGunExtraCanes = null;
		}

		esfPartecipantInfoCacheModel.gunCartridgeType = getGunCartridgeType();

		String gunCartridgeType = esfPartecipantInfoCacheModel.gunCartridgeType;

		if ((gunCartridgeType != null) && (gunCartridgeType.length() == 0)) {
			esfPartecipantInfoCacheModel.gunCartridgeType = null;
		}

		esfPartecipantInfoCacheModel.gunCartridgeKind = getGunCartridgeKind();

		String gunCartridgeKind = esfPartecipantInfoCacheModel.gunCartridgeKind;

		if ((gunCartridgeKind != null) && (gunCartridgeKind.length() == 0)) {
			esfPartecipantInfoCacheModel.gunCartridgeKind = null;
		}

		esfPartecipantInfoCacheModel.cartridgeCaliber = getCartridgeCaliber();

		String cartridgeCaliber = esfPartecipantInfoCacheModel.cartridgeCaliber;

		if ((cartridgeCaliber != null) && (cartridgeCaliber.length() == 0)) {
			esfPartecipantInfoCacheModel.cartridgeCaliber = null;
		}

		esfPartecipantInfoCacheModel.esfMatchId = getEsfMatchId();

		esfPartecipantInfoCacheModel.esfGunTypeIdOne = getEsfGunTypeIdOne();

		esfPartecipantInfoCacheModel.esfGunKindIdOne = getEsfGunKindIdOne();

		esfPartecipantInfoCacheModel.esfGunTypeIdTwo = getEsfGunTypeIdTwo();

		esfPartecipantInfoCacheModel.esfGunKindIdTwo = getEsfGunKindIdTwo();

		return esfPartecipantInfoCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(101);

		sb.append("{esfPartecipantInfoId=");
		sb.append(getEsfPartecipantInfoId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", isPortalUser=");
		sb.append(getIsPortalUser());
		sb.append(", esfUserId=");
		sb.append(getEsfUserId());
		sb.append(", protocol=");
		sb.append(getProtocol());
		sb.append(", firstName=");
		sb.append(getFirstName());
		sb.append(", lastName=");
		sb.append(getLastName());
		sb.append(", placeOfBirth=");
		sb.append(getPlaceOfBirth());
		sb.append(", dateOfBirth=");
		sb.append(getDateOfBirth());
		sb.append(", residenceCity=");
		sb.append(getResidenceCity());
		sb.append(", province=");
		sb.append(getProvince());
		sb.append(", zip=");
		sb.append(getZip());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", phonNumber=");
		sb.append(getPhonNumber());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", maritialStatus=");
		sb.append(getMaritialStatus());
		sb.append(", fiscalCode=");
		sb.append(getFiscalCode());
		sb.append(", passport=");
		sb.append(getPassport());
		sb.append(", releasedBy=");
		sb.append(getReleasedBy());
		sb.append(", passportReleaseDate=");
		sb.append(getPassportReleaseDate());
		sb.append(", passportExpirationDate=");
		sb.append(getPassportExpirationDate());
		sb.append(", europeanCardNumber=");
		sb.append(getEuropeanCardNumber());
		sb.append(", europeanCardReleaseDate=");
		sb.append(getEuropeanCardReleaseDate());
		sb.append(", europeanCardExpirationDate=");
		sb.append(getEuropeanCardExpirationDate());
		sb.append(", gunLicenceNumber=");
		sb.append(getGunLicenceNumber());
		sb.append(", gunLicenceReleaseDate=");
		sb.append(getGunLicenceReleaseDate());
		sb.append(", gunLicenceExpirationDate=");
		sb.append(getGunLicenceExpirationDate());
		sb.append(", firstGunType=");
		sb.append(getFirstGunType());
		sb.append(", firstGunKind=");
		sb.append(getFirstGunKind());
		sb.append(", firstGunCaliber=");
		sb.append(getFirstGunCaliber());
		sb.append(", firstGunCode=");
		sb.append(getFirstGunCode());
		sb.append(", firstGunExtraCanes=");
		sb.append(getFirstGunExtraCanes());
		sb.append(", secondGunType=");
		sb.append(getSecondGunType());
		sb.append(", secondGunKind=");
		sb.append(getSecondGunKind());
		sb.append(", secondGunCaliber=");
		sb.append(getSecondGunCaliber());
		sb.append(", secondGunCode=");
		sb.append(getSecondGunCode());
		sb.append(", secondGunExtraCanes=");
		sb.append(getSecondGunExtraCanes());
		sb.append(", gunCartridgeType=");
		sb.append(getGunCartridgeType());
		sb.append(", gunCartridgeKind=");
		sb.append(getGunCartridgeKind());
		sb.append(", cartridgeCaliber=");
		sb.append(getCartridgeCaliber());
		sb.append(", esfMatchId=");
		sb.append(getEsfMatchId());
		sb.append(", esfGunTypeIdOne=");
		sb.append(getEsfGunTypeIdOne());
		sb.append(", esfGunKindIdOne=");
		sb.append(getEsfGunKindIdOne());
		sb.append(", esfGunTypeIdTwo=");
		sb.append(getEsfGunTypeIdTwo());
		sb.append(", esfGunKindIdTwo=");
		sb.append(getEsfGunKindIdTwo());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(154);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFPartecipantInfo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>esfPartecipantInfoId</column-name><column-value><![CDATA[");
		sb.append(getEsfPartecipantInfoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isPortalUser</column-name><column-value><![CDATA[");
		sb.append(getIsPortalUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfUserId</column-name><column-value><![CDATA[");
		sb.append(getEsfUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>protocol</column-name><column-value><![CDATA[");
		sb.append(getProtocol());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstName</column-name><column-value><![CDATA[");
		sb.append(getFirstName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastName</column-name><column-value><![CDATA[");
		sb.append(getLastName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>placeOfBirth</column-name><column-value><![CDATA[");
		sb.append(getPlaceOfBirth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateOfBirth</column-name><column-value><![CDATA[");
		sb.append(getDateOfBirth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>residenceCity</column-name><column-value><![CDATA[");
		sb.append(getResidenceCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>province</column-name><column-value><![CDATA[");
		sb.append(getProvince());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>zip</column-name><column-value><![CDATA[");
		sb.append(getZip());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phonNumber</column-name><column-value><![CDATA[");
		sb.append(getPhonNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maritialStatus</column-name><column-value><![CDATA[");
		sb.append(getMaritialStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fiscalCode</column-name><column-value><![CDATA[");
		sb.append(getFiscalCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passport</column-name><column-value><![CDATA[");
		sb.append(getPassport());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>releasedBy</column-name><column-value><![CDATA[");
		sb.append(getReleasedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passportReleaseDate</column-name><column-value><![CDATA[");
		sb.append(getPassportReleaseDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passportExpirationDate</column-name><column-value><![CDATA[");
		sb.append(getPassportExpirationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>europeanCardNumber</column-name><column-value><![CDATA[");
		sb.append(getEuropeanCardNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>europeanCardReleaseDate</column-name><column-value><![CDATA[");
		sb.append(getEuropeanCardReleaseDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>europeanCardExpirationDate</column-name><column-value><![CDATA[");
		sb.append(getEuropeanCardExpirationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gunLicenceNumber</column-name><column-value><![CDATA[");
		sb.append(getGunLicenceNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gunLicenceReleaseDate</column-name><column-value><![CDATA[");
		sb.append(getGunLicenceReleaseDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gunLicenceExpirationDate</column-name><column-value><![CDATA[");
		sb.append(getGunLicenceExpirationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstGunType</column-name><column-value><![CDATA[");
		sb.append(getFirstGunType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstGunKind</column-name><column-value><![CDATA[");
		sb.append(getFirstGunKind());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstGunCaliber</column-name><column-value><![CDATA[");
		sb.append(getFirstGunCaliber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstGunCode</column-name><column-value><![CDATA[");
		sb.append(getFirstGunCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstGunExtraCanes</column-name><column-value><![CDATA[");
		sb.append(getFirstGunExtraCanes());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondGunType</column-name><column-value><![CDATA[");
		sb.append(getSecondGunType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondGunKind</column-name><column-value><![CDATA[");
		sb.append(getSecondGunKind());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondGunCaliber</column-name><column-value><![CDATA[");
		sb.append(getSecondGunCaliber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondGunCode</column-name><column-value><![CDATA[");
		sb.append(getSecondGunCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondGunExtraCanes</column-name><column-value><![CDATA[");
		sb.append(getSecondGunExtraCanes());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gunCartridgeType</column-name><column-value><![CDATA[");
		sb.append(getGunCartridgeType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gunCartridgeKind</column-name><column-value><![CDATA[");
		sb.append(getGunCartridgeKind());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cartridgeCaliber</column-name><column-value><![CDATA[");
		sb.append(getCartridgeCaliber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfMatchId</column-name><column-value><![CDATA[");
		sb.append(getEsfMatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfGunTypeIdOne</column-name><column-value><![CDATA[");
		sb.append(getEsfGunTypeIdOne());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfGunKindIdOne</column-name><column-value><![CDATA[");
		sb.append(getEsfGunKindIdOne());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfGunTypeIdTwo</column-name><column-value><![CDATA[");
		sb.append(getEsfGunTypeIdTwo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfGunKindIdTwo</column-name><column-value><![CDATA[");
		sb.append(getEsfGunKindIdTwo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFPartecipantInfo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFPartecipantInfo.class
		};
	private long _esfPartecipantInfoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _isPortalUser;
	private long _esfUserId;
	private String _esfUserUuid;
	private long _protocol;
	private long _originalProtocol;
	private boolean _setOriginalProtocol;
	private String _firstName;
	private String _originalFirstName;
	private String _lastName;
	private String _originalLastName;
	private String _placeOfBirth;
	private Date _dateOfBirth;
	private String _residenceCity;
	private String _province;
	private int _zip;
	private String _address;
	private String _phonNumber;
	private String _email;
	private String _maritialStatus;
	private String _fiscalCode;
	private String _passport;
	private String _releasedBy;
	private Date _passportReleaseDate;
	private Date _passportExpirationDate;
	private String _europeanCardNumber;
	private Date _europeanCardReleaseDate;
	private Date _europeanCardExpirationDate;
	private String _gunLicenceNumber;
	private Date _gunLicenceReleaseDate;
	private Date _gunLicenceExpirationDate;
	private String _firstGunType;
	private String _firstGunKind;
	private double _firstGunCaliber;
	private String _firstGunCode;
	private String _firstGunExtraCanes;
	private String _secondGunType;
	private String _secondGunKind;
	private double _secondGunCaliber;
	private String _secondGunCode;
	private String _secondGunExtraCanes;
	private String _gunCartridgeType;
	private String _gunCartridgeKind;
	private String _cartridgeCaliber;
	private long _esfMatchId;
	private long _esfGunTypeIdOne;
	private long _esfGunKindIdOne;
	private long _esfGunTypeIdTwo;
	private long _esfGunKindIdTwo;
	private long _columnBitmask;
	private ESFPartecipantInfo _escapedModel;
}