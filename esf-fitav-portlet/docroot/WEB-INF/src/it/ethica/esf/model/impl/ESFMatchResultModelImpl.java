/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFMatchResult;
import it.ethica.esf.model.ESFMatchResultModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFMatchResult service. Represents a row in the &quot;ESFMatchResult&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFMatchResultModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFMatchResultImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFMatchResultImpl
 * @see it.ethica.esf.model.ESFMatchResult
 * @see it.ethica.esf.model.ESFMatchResultModel
 * @generated
 */
public class ESFMatchResultModelImpl extends BaseModelImpl<ESFMatchResult>
	implements ESFMatchResultModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f match result model instance should use the {@link it.ethica.esf.model.ESFMatchResult} interface instead.
	 */
	public static final String TABLE_NAME = "ESFMatchResult";
	public static final Object[][] TABLE_COLUMNS = {
			{ "esfMatchResultId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "esfMatchId", Types.BIGINT },
			{ "esfPartecipantId", Types.BIGINT },
			{ "cardCode", Types.VARCHAR },
			{ "generalClassPosition", Types.INTEGER },
			{ "categoryClassPosition", Types.INTEGER },
			{ "categoryName", Types.VARCHAR },
			{ "qualification", Types.VARCHAR },
			{ "first", Types.INTEGER },
			{ "second", Types.INTEGER },
			{ "third", Types.INTEGER },
			{ "fourth", Types.INTEGER },
			{ "fifth", Types.INTEGER },
			{ "total", Types.INTEGER },
			{ "firstPlayOff", Types.INTEGER },
			{ "secondPlayOff", Types.INTEGER },
			{ "thirdPlayOff", Types.INTEGER },
			{ "totalAfterPlayOff", Types.INTEGER },
			{ "nextFirstPlayOff", Types.INTEGER },
			{ "nextSecondPlayOff", Types.INTEGER },
			{ "nextTotalPlayOff", Types.INTEGER },
			{ "fiscalCode", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFMatchResult (esfMatchResultId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,esfMatchId LONG,esfPartecipantId LONG,cardCode VARCHAR(75) null,generalClassPosition INTEGER,categoryClassPosition INTEGER,categoryName VARCHAR(75) null,qualification VARCHAR(75) null,first INTEGER,second INTEGER,third INTEGER,fourth INTEGER,fifth INTEGER,total INTEGER,firstPlayOff INTEGER,secondPlayOff INTEGER,thirdPlayOff INTEGER,totalAfterPlayOff INTEGER,nextFirstPlayOff INTEGER,nextSecondPlayOff INTEGER,nextTotalPlayOff INTEGER,fiscalCode VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ESFMatchResult";
	public static final String ORDER_BY_JPQL = " ORDER BY esfMatchResult.esfMatchResultId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFMatchResult.esfMatchResultId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFMatchResult"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFMatchResult"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFMatchResult"),
			true);
	public static long ESFMATCHID_COLUMN_BITMASK = 1L;
	public static long ESFPARTECIPANTID_COLUMN_BITMASK = 2L;
	public static long ESFMATCHRESULTID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFMatchResult"));

	public ESFMatchResultModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfMatchResultId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfMatchResultId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfMatchResultId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFMatchResult.class;
	}

	@Override
	public String getModelClassName() {
		return ESFMatchResult.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("esfMatchResultId", getEsfMatchResultId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("esfMatchId", getEsfMatchId());
		attributes.put("esfPartecipantId", getEsfPartecipantId());
		attributes.put("cardCode", getCardCode());
		attributes.put("generalClassPosition", getGeneralClassPosition());
		attributes.put("categoryClassPosition", getCategoryClassPosition());
		attributes.put("categoryName", getCategoryName());
		attributes.put("qualification", getQualification());
		attributes.put("first", getFirst());
		attributes.put("second", getSecond());
		attributes.put("third", getThird());
		attributes.put("fourth", getFourth());
		attributes.put("fifth", getFifth());
		attributes.put("total", getTotal());
		attributes.put("firstPlayOff", getFirstPlayOff());
		attributes.put("secondPlayOff", getSecondPlayOff());
		attributes.put("thirdPlayOff", getThirdPlayOff());
		attributes.put("totalAfterPlayOff", getTotalAfterPlayOff());
		attributes.put("nextFirstPlayOff", getNextFirstPlayOff());
		attributes.put("nextSecondPlayOff", getNextSecondPlayOff());
		attributes.put("nextTotalPlayOff", getNextTotalPlayOff());
		attributes.put("fiscalCode", getFiscalCode());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long esfMatchResultId = (Long)attributes.get("esfMatchResultId");

		if (esfMatchResultId != null) {
			setEsfMatchResultId(esfMatchResultId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long esfMatchId = (Long)attributes.get("esfMatchId");

		if (esfMatchId != null) {
			setEsfMatchId(esfMatchId);
		}

		Long esfPartecipantId = (Long)attributes.get("esfPartecipantId");

		if (esfPartecipantId != null) {
			setEsfPartecipantId(esfPartecipantId);
		}

		String cardCode = (String)attributes.get("cardCode");

		if (cardCode != null) {
			setCardCode(cardCode);
		}

		Integer generalClassPosition = (Integer)attributes.get(
				"generalClassPosition");

		if (generalClassPosition != null) {
			setGeneralClassPosition(generalClassPosition);
		}

		Integer categoryClassPosition = (Integer)attributes.get(
				"categoryClassPosition");

		if (categoryClassPosition != null) {
			setCategoryClassPosition(categoryClassPosition);
		}

		String categoryName = (String)attributes.get("categoryName");

		if (categoryName != null) {
			setCategoryName(categoryName);
		}

		String qualification = (String)attributes.get("qualification");

		if (qualification != null) {
			setQualification(qualification);
		}

		Integer first = (Integer)attributes.get("first");

		if (first != null) {
			setFirst(first);
		}

		Integer second = (Integer)attributes.get("second");

		if (second != null) {
			setSecond(second);
		}

		Integer third = (Integer)attributes.get("third");

		if (third != null) {
			setThird(third);
		}

		Integer fourth = (Integer)attributes.get("fourth");

		if (fourth != null) {
			setFourth(fourth);
		}

		Integer fifth = (Integer)attributes.get("fifth");

		if (fifth != null) {
			setFifth(fifth);
		}

		Integer total = (Integer)attributes.get("total");

		if (total != null) {
			setTotal(total);
		}

		Integer firstPlayOff = (Integer)attributes.get("firstPlayOff");

		if (firstPlayOff != null) {
			setFirstPlayOff(firstPlayOff);
		}

		Integer secondPlayOff = (Integer)attributes.get("secondPlayOff");

		if (secondPlayOff != null) {
			setSecondPlayOff(secondPlayOff);
		}

		Integer thirdPlayOff = (Integer)attributes.get("thirdPlayOff");

		if (thirdPlayOff != null) {
			setThirdPlayOff(thirdPlayOff);
		}

		Integer totalAfterPlayOff = (Integer)attributes.get("totalAfterPlayOff");

		if (totalAfterPlayOff != null) {
			setTotalAfterPlayOff(totalAfterPlayOff);
		}

		Integer nextFirstPlayOff = (Integer)attributes.get("nextFirstPlayOff");

		if (nextFirstPlayOff != null) {
			setNextFirstPlayOff(nextFirstPlayOff);
		}

		Integer nextSecondPlayOff = (Integer)attributes.get("nextSecondPlayOff");

		if (nextSecondPlayOff != null) {
			setNextSecondPlayOff(nextSecondPlayOff);
		}

		Integer nextTotalPlayOff = (Integer)attributes.get("nextTotalPlayOff");

		if (nextTotalPlayOff != null) {
			setNextTotalPlayOff(nextTotalPlayOff);
		}

		String fiscalCode = (String)attributes.get("fiscalCode");

		if (fiscalCode != null) {
			setFiscalCode(fiscalCode);
		}
	}

	@Override
	public long getEsfMatchResultId() {
		return _esfMatchResultId;
	}

	@Override
	public void setEsfMatchResultId(long esfMatchResultId) {
		_esfMatchResultId = esfMatchResultId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getEsfMatchId() {
		return _esfMatchId;
	}

	@Override
	public void setEsfMatchId(long esfMatchId) {
		_columnBitmask |= ESFMATCHID_COLUMN_BITMASK;

		if (!_setOriginalEsfMatchId) {
			_setOriginalEsfMatchId = true;

			_originalEsfMatchId = _esfMatchId;
		}

		_esfMatchId = esfMatchId;
	}

	public long getOriginalEsfMatchId() {
		return _originalEsfMatchId;
	}

	@Override
	public long getEsfPartecipantId() {
		return _esfPartecipantId;
	}

	@Override
	public void setEsfPartecipantId(long esfPartecipantId) {
		_columnBitmask |= ESFPARTECIPANTID_COLUMN_BITMASK;

		if (!_setOriginalEsfPartecipantId) {
			_setOriginalEsfPartecipantId = true;

			_originalEsfPartecipantId = _esfPartecipantId;
		}

		_esfPartecipantId = esfPartecipantId;
	}

	public long getOriginalEsfPartecipantId() {
		return _originalEsfPartecipantId;
	}

	@Override
	public String getCardCode() {
		if (_cardCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _cardCode;
		}
	}

	@Override
	public void setCardCode(String cardCode) {
		_cardCode = cardCode;
	}

	@Override
	public int getGeneralClassPosition() {
		return _generalClassPosition;
	}

	@Override
	public void setGeneralClassPosition(int generalClassPosition) {
		_generalClassPosition = generalClassPosition;
	}

	@Override
	public int getCategoryClassPosition() {
		return _categoryClassPosition;
	}

	@Override
	public void setCategoryClassPosition(int categoryClassPosition) {
		_categoryClassPosition = categoryClassPosition;
	}

	@Override
	public String getCategoryName() {
		if (_categoryName == null) {
			return StringPool.BLANK;
		}
		else {
			return _categoryName;
		}
	}

	@Override
	public void setCategoryName(String categoryName) {
		_categoryName = categoryName;
	}

	@Override
	public String getQualification() {
		if (_qualification == null) {
			return StringPool.BLANK;
		}
		else {
			return _qualification;
		}
	}

	@Override
	public void setQualification(String qualification) {
		_qualification = qualification;
	}

	@Override
	public int getFirst() {
		return _first;
	}

	@Override
	public void setFirst(int first) {
		_first = first;
	}

	@Override
	public int getSecond() {
		return _second;
	}

	@Override
	public void setSecond(int second) {
		_second = second;
	}

	@Override
	public int getThird() {
		return _third;
	}

	@Override
	public void setThird(int third) {
		_third = third;
	}

	@Override
	public int getFourth() {
		return _fourth;
	}

	@Override
	public void setFourth(int fourth) {
		_fourth = fourth;
	}

	@Override
	public int getFifth() {
		return _fifth;
	}

	@Override
	public void setFifth(int fifth) {
		_fifth = fifth;
	}

	@Override
	public int getTotal() {
		return _total;
	}

	@Override
	public void setTotal(int total) {
		_total = total;
	}

	@Override
	public int getFirstPlayOff() {
		return _firstPlayOff;
	}

	@Override
	public void setFirstPlayOff(int firstPlayOff) {
		_firstPlayOff = firstPlayOff;
	}

	@Override
	public int getSecondPlayOff() {
		return _secondPlayOff;
	}

	@Override
	public void setSecondPlayOff(int secondPlayOff) {
		_secondPlayOff = secondPlayOff;
	}

	@Override
	public int getThirdPlayOff() {
		return _thirdPlayOff;
	}

	@Override
	public void setThirdPlayOff(int thirdPlayOff) {
		_thirdPlayOff = thirdPlayOff;
	}

	@Override
	public int getTotalAfterPlayOff() {
		return _totalAfterPlayOff;
	}

	@Override
	public void setTotalAfterPlayOff(int totalAfterPlayOff) {
		_totalAfterPlayOff = totalAfterPlayOff;
	}

	@Override
	public int getNextFirstPlayOff() {
		return _nextFirstPlayOff;
	}

	@Override
	public void setNextFirstPlayOff(int nextFirstPlayOff) {
		_nextFirstPlayOff = nextFirstPlayOff;
	}

	@Override
	public int getNextSecondPlayOff() {
		return _nextSecondPlayOff;
	}

	@Override
	public void setNextSecondPlayOff(int nextSecondPlayOff) {
		_nextSecondPlayOff = nextSecondPlayOff;
	}

	@Override
	public int getNextTotalPlayOff() {
		return _nextTotalPlayOff;
	}

	@Override
	public void setNextTotalPlayOff(int nextTotalPlayOff) {
		_nextTotalPlayOff = nextTotalPlayOff;
	}

	@Override
	public String getFiscalCode() {
		if (_fiscalCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _fiscalCode;
		}
	}

	@Override
	public void setFiscalCode(String fiscalCode) {
		_fiscalCode = fiscalCode;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ESFMatchResult.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFMatchResult toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFMatchResult)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFMatchResultImpl esfMatchResultImpl = new ESFMatchResultImpl();

		esfMatchResultImpl.setEsfMatchResultId(getEsfMatchResultId());
		esfMatchResultImpl.setGroupId(getGroupId());
		esfMatchResultImpl.setCompanyId(getCompanyId());
		esfMatchResultImpl.setUserId(getUserId());
		esfMatchResultImpl.setUserName(getUserName());
		esfMatchResultImpl.setCreateDate(getCreateDate());
		esfMatchResultImpl.setModifiedDate(getModifiedDate());
		esfMatchResultImpl.setEsfMatchId(getEsfMatchId());
		esfMatchResultImpl.setEsfPartecipantId(getEsfPartecipantId());
		esfMatchResultImpl.setCardCode(getCardCode());
		esfMatchResultImpl.setGeneralClassPosition(getGeneralClassPosition());
		esfMatchResultImpl.setCategoryClassPosition(getCategoryClassPosition());
		esfMatchResultImpl.setCategoryName(getCategoryName());
		esfMatchResultImpl.setQualification(getQualification());
		esfMatchResultImpl.setFirst(getFirst());
		esfMatchResultImpl.setSecond(getSecond());
		esfMatchResultImpl.setThird(getThird());
		esfMatchResultImpl.setFourth(getFourth());
		esfMatchResultImpl.setFifth(getFifth());
		esfMatchResultImpl.setTotal(getTotal());
		esfMatchResultImpl.setFirstPlayOff(getFirstPlayOff());
		esfMatchResultImpl.setSecondPlayOff(getSecondPlayOff());
		esfMatchResultImpl.setThirdPlayOff(getThirdPlayOff());
		esfMatchResultImpl.setTotalAfterPlayOff(getTotalAfterPlayOff());
		esfMatchResultImpl.setNextFirstPlayOff(getNextFirstPlayOff());
		esfMatchResultImpl.setNextSecondPlayOff(getNextSecondPlayOff());
		esfMatchResultImpl.setNextTotalPlayOff(getNextTotalPlayOff());
		esfMatchResultImpl.setFiscalCode(getFiscalCode());

		esfMatchResultImpl.resetOriginalValues();

		return esfMatchResultImpl;
	}

	@Override
	public int compareTo(ESFMatchResult esfMatchResult) {
		long primaryKey = esfMatchResult.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFMatchResult)) {
			return false;
		}

		ESFMatchResult esfMatchResult = (ESFMatchResult)obj;

		long primaryKey = esfMatchResult.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFMatchResultModelImpl esfMatchResultModelImpl = this;

		esfMatchResultModelImpl._originalEsfMatchId = esfMatchResultModelImpl._esfMatchId;

		esfMatchResultModelImpl._setOriginalEsfMatchId = false;

		esfMatchResultModelImpl._originalEsfPartecipantId = esfMatchResultModelImpl._esfPartecipantId;

		esfMatchResultModelImpl._setOriginalEsfPartecipantId = false;

		esfMatchResultModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFMatchResult> toCacheModel() {
		ESFMatchResultCacheModel esfMatchResultCacheModel = new ESFMatchResultCacheModel();

		esfMatchResultCacheModel.esfMatchResultId = getEsfMatchResultId();

		esfMatchResultCacheModel.groupId = getGroupId();

		esfMatchResultCacheModel.companyId = getCompanyId();

		esfMatchResultCacheModel.userId = getUserId();

		esfMatchResultCacheModel.userName = getUserName();

		String userName = esfMatchResultCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			esfMatchResultCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			esfMatchResultCacheModel.createDate = createDate.getTime();
		}
		else {
			esfMatchResultCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			esfMatchResultCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			esfMatchResultCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		esfMatchResultCacheModel.esfMatchId = getEsfMatchId();

		esfMatchResultCacheModel.esfPartecipantId = getEsfPartecipantId();

		esfMatchResultCacheModel.cardCode = getCardCode();

		String cardCode = esfMatchResultCacheModel.cardCode;

		if ((cardCode != null) && (cardCode.length() == 0)) {
			esfMatchResultCacheModel.cardCode = null;
		}

		esfMatchResultCacheModel.generalClassPosition = getGeneralClassPosition();

		esfMatchResultCacheModel.categoryClassPosition = getCategoryClassPosition();

		esfMatchResultCacheModel.categoryName = getCategoryName();

		String categoryName = esfMatchResultCacheModel.categoryName;

		if ((categoryName != null) && (categoryName.length() == 0)) {
			esfMatchResultCacheModel.categoryName = null;
		}

		esfMatchResultCacheModel.qualification = getQualification();

		String qualification = esfMatchResultCacheModel.qualification;

		if ((qualification != null) && (qualification.length() == 0)) {
			esfMatchResultCacheModel.qualification = null;
		}

		esfMatchResultCacheModel.first = getFirst();

		esfMatchResultCacheModel.second = getSecond();

		esfMatchResultCacheModel.third = getThird();

		esfMatchResultCacheModel.fourth = getFourth();

		esfMatchResultCacheModel.fifth = getFifth();

		esfMatchResultCacheModel.total = getTotal();

		esfMatchResultCacheModel.firstPlayOff = getFirstPlayOff();

		esfMatchResultCacheModel.secondPlayOff = getSecondPlayOff();

		esfMatchResultCacheModel.thirdPlayOff = getThirdPlayOff();

		esfMatchResultCacheModel.totalAfterPlayOff = getTotalAfterPlayOff();

		esfMatchResultCacheModel.nextFirstPlayOff = getNextFirstPlayOff();

		esfMatchResultCacheModel.nextSecondPlayOff = getNextSecondPlayOff();

		esfMatchResultCacheModel.nextTotalPlayOff = getNextTotalPlayOff();

		esfMatchResultCacheModel.fiscalCode = getFiscalCode();

		String fiscalCode = esfMatchResultCacheModel.fiscalCode;

		if ((fiscalCode != null) && (fiscalCode.length() == 0)) {
			esfMatchResultCacheModel.fiscalCode = null;
		}

		return esfMatchResultCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(57);

		sb.append("{esfMatchResultId=");
		sb.append(getEsfMatchResultId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", esfMatchId=");
		sb.append(getEsfMatchId());
		sb.append(", esfPartecipantId=");
		sb.append(getEsfPartecipantId());
		sb.append(", cardCode=");
		sb.append(getCardCode());
		sb.append(", generalClassPosition=");
		sb.append(getGeneralClassPosition());
		sb.append(", categoryClassPosition=");
		sb.append(getCategoryClassPosition());
		sb.append(", categoryName=");
		sb.append(getCategoryName());
		sb.append(", qualification=");
		sb.append(getQualification());
		sb.append(", first=");
		sb.append(getFirst());
		sb.append(", second=");
		sb.append(getSecond());
		sb.append(", third=");
		sb.append(getThird());
		sb.append(", fourth=");
		sb.append(getFourth());
		sb.append(", fifth=");
		sb.append(getFifth());
		sb.append(", total=");
		sb.append(getTotal());
		sb.append(", firstPlayOff=");
		sb.append(getFirstPlayOff());
		sb.append(", secondPlayOff=");
		sb.append(getSecondPlayOff());
		sb.append(", thirdPlayOff=");
		sb.append(getThirdPlayOff());
		sb.append(", totalAfterPlayOff=");
		sb.append(getTotalAfterPlayOff());
		sb.append(", nextFirstPlayOff=");
		sb.append(getNextFirstPlayOff());
		sb.append(", nextSecondPlayOff=");
		sb.append(getNextSecondPlayOff());
		sb.append(", nextTotalPlayOff=");
		sb.append(getNextTotalPlayOff());
		sb.append(", fiscalCode=");
		sb.append(getFiscalCode());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(88);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFMatchResult");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>esfMatchResultId</column-name><column-value><![CDATA[");
		sb.append(getEsfMatchResultId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfMatchId</column-name><column-value><![CDATA[");
		sb.append(getEsfMatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfPartecipantId</column-name><column-value><![CDATA[");
		sb.append(getEsfPartecipantId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cardCode</column-name><column-value><![CDATA[");
		sb.append(getCardCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>generalClassPosition</column-name><column-value><![CDATA[");
		sb.append(getGeneralClassPosition());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryClassPosition</column-name><column-value><![CDATA[");
		sb.append(getCategoryClassPosition());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryName</column-name><column-value><![CDATA[");
		sb.append(getCategoryName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>qualification</column-name><column-value><![CDATA[");
		sb.append(getQualification());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>first</column-name><column-value><![CDATA[");
		sb.append(getFirst());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>second</column-name><column-value><![CDATA[");
		sb.append(getSecond());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>third</column-name><column-value><![CDATA[");
		sb.append(getThird());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fourth</column-name><column-value><![CDATA[");
		sb.append(getFourth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fifth</column-name><column-value><![CDATA[");
		sb.append(getFifth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>total</column-name><column-value><![CDATA[");
		sb.append(getTotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstPlayOff</column-name><column-value><![CDATA[");
		sb.append(getFirstPlayOff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondPlayOff</column-name><column-value><![CDATA[");
		sb.append(getSecondPlayOff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thirdPlayOff</column-name><column-value><![CDATA[");
		sb.append(getThirdPlayOff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalAfterPlayOff</column-name><column-value><![CDATA[");
		sb.append(getTotalAfterPlayOff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nextFirstPlayOff</column-name><column-value><![CDATA[");
		sb.append(getNextFirstPlayOff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nextSecondPlayOff</column-name><column-value><![CDATA[");
		sb.append(getNextSecondPlayOff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nextTotalPlayOff</column-name><column-value><![CDATA[");
		sb.append(getNextTotalPlayOff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fiscalCode</column-name><column-value><![CDATA[");
		sb.append(getFiscalCode());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFMatchResult.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFMatchResult.class
		};
	private long _esfMatchResultId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _esfMatchId;
	private long _originalEsfMatchId;
	private boolean _setOriginalEsfMatchId;
	private long _esfPartecipantId;
	private long _originalEsfPartecipantId;
	private boolean _setOriginalEsfPartecipantId;
	private String _cardCode;
	private int _generalClassPosition;
	private int _categoryClassPosition;
	private String _categoryName;
	private String _qualification;
	private int _first;
	private int _second;
	private int _third;
	private int _fourth;
	private int _fifth;
	private int _total;
	private int _firstPlayOff;
	private int _secondPlayOff;
	private int _thirdPlayOff;
	private int _totalAfterPlayOff;
	private int _nextFirstPlayOff;
	private int _nextSecondPlayOff;
	private int _nextTotalPlayOff;
	private String _fiscalCode;
	private long _columnBitmask;
	private ESFMatchResult _escapedModel;
}