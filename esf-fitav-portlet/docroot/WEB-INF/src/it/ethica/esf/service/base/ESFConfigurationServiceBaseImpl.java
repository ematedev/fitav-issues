/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import it.ethica.esf.model.ESFConfiguration;
import it.ethica.esf.service.ESFConfigurationService;
import it.ethica.esf.service.persistence.ESFAddressPersistence;
import it.ethica.esf.service.persistence.ESFCardPersistence;
import it.ethica.esf.service.persistence.ESFCityPersistence;
import it.ethica.esf.service.persistence.ESFConfigurationPersistence;
import it.ethica.esf.service.persistence.ESFCountryPersistence;
import it.ethica.esf.service.persistence.ESFEntityStatePersistence;
import it.ethica.esf.service.persistence.ESFFieldESFSportTypePersistence;
import it.ethica.esf.service.persistence.ESFFieldPersistence;
import it.ethica.esf.service.persistence.ESFForniturePersistence;
import it.ethica.esf.service.persistence.ESFFornitureRelPersistence;
import it.ethica.esf.service.persistence.ESFFornitureTypePersistence;
import it.ethica.esf.service.persistence.ESFGunKindPersistence;
import it.ethica.esf.service.persistence.ESFGunPersistence;
import it.ethica.esf.service.persistence.ESFGunTypePersistence;
import it.ethica.esf.service.persistence.ESFMatchPersistence;
import it.ethica.esf.service.persistence.ESFOrganizationPersistence;
import it.ethica.esf.service.persistence.ESFOrganizationUnitservicePersistence;
import it.ethica.esf.service.persistence.ESFProvincePersistence;
import it.ethica.esf.service.persistence.ESFRegionPersistence;
import it.ethica.esf.service.persistence.ESFSportTypePersistence;
import it.ethica.esf.service.persistence.ESFStatePersistence;
import it.ethica.esf.service.persistence.ESFTournamentPersistence;
import it.ethica.esf.service.persistence.ESFUnitservicePersistence;
import it.ethica.esf.service.persistence.ESFUserESFUserRolePersistence;
import it.ethica.esf.service.persistence.ESFUserPersistence;
import it.ethica.esf.service.persistence.ESFUserRolePersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the e s f configuration remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link it.ethica.esf.service.impl.ESFConfigurationServiceImpl}.
 * </p>
 *
 * @author Ethica
 * @see it.ethica.esf.service.impl.ESFConfigurationServiceImpl
 * @see it.ethica.esf.service.ESFConfigurationServiceUtil
 * @generated
 */
public abstract class ESFConfigurationServiceBaseImpl extends BaseServiceImpl
	implements ESFConfigurationService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link it.ethica.esf.service.ESFConfigurationServiceUtil} to access the e s f configuration remote service.
	 */

	/**
	 * Returns the e s f address local service.
	 *
	 * @return the e s f address local service
	 */
	public it.ethica.esf.service.ESFAddressLocalService getESFAddressLocalService() {
		return esfAddressLocalService;
	}

	/**
	 * Sets the e s f address local service.
	 *
	 * @param esfAddressLocalService the e s f address local service
	 */
	public void setESFAddressLocalService(
		it.ethica.esf.service.ESFAddressLocalService esfAddressLocalService) {
		this.esfAddressLocalService = esfAddressLocalService;
	}

	/**
	 * Returns the e s f address persistence.
	 *
	 * @return the e s f address persistence
	 */
	public ESFAddressPersistence getESFAddressPersistence() {
		return esfAddressPersistence;
	}

	/**
	 * Sets the e s f address persistence.
	 *
	 * @param esfAddressPersistence the e s f address persistence
	 */
	public void setESFAddressPersistence(
		ESFAddressPersistence esfAddressPersistence) {
		this.esfAddressPersistence = esfAddressPersistence;
	}

	/**
	 * Returns the e s f card local service.
	 *
	 * @return the e s f card local service
	 */
	public it.ethica.esf.service.ESFCardLocalService getESFCardLocalService() {
		return esfCardLocalService;
	}

	/**
	 * Sets the e s f card local service.
	 *
	 * @param esfCardLocalService the e s f card local service
	 */
	public void setESFCardLocalService(
		it.ethica.esf.service.ESFCardLocalService esfCardLocalService) {
		this.esfCardLocalService = esfCardLocalService;
	}

	/**
	 * Returns the e s f card persistence.
	 *
	 * @return the e s f card persistence
	 */
	public ESFCardPersistence getESFCardPersistence() {
		return esfCardPersistence;
	}

	/**
	 * Sets the e s f card persistence.
	 *
	 * @param esfCardPersistence the e s f card persistence
	 */
	public void setESFCardPersistence(ESFCardPersistence esfCardPersistence) {
		this.esfCardPersistence = esfCardPersistence;
	}

	/**
	 * Returns the e s f city local service.
	 *
	 * @return the e s f city local service
	 */
	public it.ethica.esf.service.ESFCityLocalService getESFCityLocalService() {
		return esfCityLocalService;
	}

	/**
	 * Sets the e s f city local service.
	 *
	 * @param esfCityLocalService the e s f city local service
	 */
	public void setESFCityLocalService(
		it.ethica.esf.service.ESFCityLocalService esfCityLocalService) {
		this.esfCityLocalService = esfCityLocalService;
	}

	/**
	 * Returns the e s f city persistence.
	 *
	 * @return the e s f city persistence
	 */
	public ESFCityPersistence getESFCityPersistence() {
		return esfCityPersistence;
	}

	/**
	 * Sets the e s f city persistence.
	 *
	 * @param esfCityPersistence the e s f city persistence
	 */
	public void setESFCityPersistence(ESFCityPersistence esfCityPersistence) {
		this.esfCityPersistence = esfCityPersistence;
	}

	/**
	 * Returns the e s f configuration remote service.
	 *
	 * @return the e s f configuration remote service
	 */
	public it.ethica.esf.service.ESFConfigurationService getESFConfigurationService() {
		return esfConfigurationService;
	}

	/**
	 * Sets the e s f configuration remote service.
	 *
	 * @param esfConfigurationService the e s f configuration remote service
	 */
	public void setESFConfigurationService(
		it.ethica.esf.service.ESFConfigurationService esfConfigurationService) {
		this.esfConfigurationService = esfConfigurationService;
	}

	/**
	 * Returns the e s f configuration persistence.
	 *
	 * @return the e s f configuration persistence
	 */
	public ESFConfigurationPersistence getESFConfigurationPersistence() {
		return esfConfigurationPersistence;
	}

	/**
	 * Sets the e s f configuration persistence.
	 *
	 * @param esfConfigurationPersistence the e s f configuration persistence
	 */
	public void setESFConfigurationPersistence(
		ESFConfigurationPersistence esfConfigurationPersistence) {
		this.esfConfigurationPersistence = esfConfigurationPersistence;
	}

	/**
	 * Returns the e s f country local service.
	 *
	 * @return the e s f country local service
	 */
	public it.ethica.esf.service.ESFCountryLocalService getESFCountryLocalService() {
		return esfCountryLocalService;
	}

	/**
	 * Sets the e s f country local service.
	 *
	 * @param esfCountryLocalService the e s f country local service
	 */
	public void setESFCountryLocalService(
		it.ethica.esf.service.ESFCountryLocalService esfCountryLocalService) {
		this.esfCountryLocalService = esfCountryLocalService;
	}

	/**
	 * Returns the e s f country persistence.
	 *
	 * @return the e s f country persistence
	 */
	public ESFCountryPersistence getESFCountryPersistence() {
		return esfCountryPersistence;
	}

	/**
	 * Sets the e s f country persistence.
	 *
	 * @param esfCountryPersistence the e s f country persistence
	 */
	public void setESFCountryPersistence(
		ESFCountryPersistence esfCountryPersistence) {
		this.esfCountryPersistence = esfCountryPersistence;
	}

	/**
	 * Returns the e s f entity state local service.
	 *
	 * @return the e s f entity state local service
	 */
	public it.ethica.esf.service.ESFEntityStateLocalService getESFEntityStateLocalService() {
		return esfEntityStateLocalService;
	}

	/**
	 * Sets the e s f entity state local service.
	 *
	 * @param esfEntityStateLocalService the e s f entity state local service
	 */
	public void setESFEntityStateLocalService(
		it.ethica.esf.service.ESFEntityStateLocalService esfEntityStateLocalService) {
		this.esfEntityStateLocalService = esfEntityStateLocalService;
	}

	/**
	 * Returns the e s f entity state persistence.
	 *
	 * @return the e s f entity state persistence
	 */
	public ESFEntityStatePersistence getESFEntityStatePersistence() {
		return esfEntityStatePersistence;
	}

	/**
	 * Sets the e s f entity state persistence.
	 *
	 * @param esfEntityStatePersistence the e s f entity state persistence
	 */
	public void setESFEntityStatePersistence(
		ESFEntityStatePersistence esfEntityStatePersistence) {
		this.esfEntityStatePersistence = esfEntityStatePersistence;
	}

	/**
	 * Returns the e s f field local service.
	 *
	 * @return the e s f field local service
	 */
	public it.ethica.esf.service.ESFFieldLocalService getESFFieldLocalService() {
		return esfFieldLocalService;
	}

	/**
	 * Sets the e s f field local service.
	 *
	 * @param esfFieldLocalService the e s f field local service
	 */
	public void setESFFieldLocalService(
		it.ethica.esf.service.ESFFieldLocalService esfFieldLocalService) {
		this.esfFieldLocalService = esfFieldLocalService;
	}

	/**
	 * Returns the e s f field persistence.
	 *
	 * @return the e s f field persistence
	 */
	public ESFFieldPersistence getESFFieldPersistence() {
		return esfFieldPersistence;
	}

	/**
	 * Sets the e s f field persistence.
	 *
	 * @param esfFieldPersistence the e s f field persistence
	 */
	public void setESFFieldPersistence(ESFFieldPersistence esfFieldPersistence) {
		this.esfFieldPersistence = esfFieldPersistence;
	}

	/**
	 * Returns the e s f field e s f sport type persistence.
	 *
	 * @return the e s f field e s f sport type persistence
	 */
	public ESFFieldESFSportTypePersistence getESFFieldESFSportTypePersistence() {
		return esfFieldESFSportTypePersistence;
	}

	/**
	 * Sets the e s f field e s f sport type persistence.
	 *
	 * @param esfFieldESFSportTypePersistence the e s f field e s f sport type persistence
	 */
	public void setESFFieldESFSportTypePersistence(
		ESFFieldESFSportTypePersistence esfFieldESFSportTypePersistence) {
		this.esfFieldESFSportTypePersistence = esfFieldESFSportTypePersistence;
	}

	/**
	 * Returns the e s f forniture local service.
	 *
	 * @return the e s f forniture local service
	 */
	public it.ethica.esf.service.ESFFornitureLocalService getESFFornitureLocalService() {
		return esfFornitureLocalService;
	}

	/**
	 * Sets the e s f forniture local service.
	 *
	 * @param esfFornitureLocalService the e s f forniture local service
	 */
	public void setESFFornitureLocalService(
		it.ethica.esf.service.ESFFornitureLocalService esfFornitureLocalService) {
		this.esfFornitureLocalService = esfFornitureLocalService;
	}

	/**
	 * Returns the e s f forniture persistence.
	 *
	 * @return the e s f forniture persistence
	 */
	public ESFForniturePersistence getESFForniturePersistence() {
		return esfForniturePersistence;
	}

	/**
	 * Sets the e s f forniture persistence.
	 *
	 * @param esfForniturePersistence the e s f forniture persistence
	 */
	public void setESFForniturePersistence(
		ESFForniturePersistence esfForniturePersistence) {
		this.esfForniturePersistence = esfForniturePersistence;
	}

	/**
	 * Returns the e s f forniture rel local service.
	 *
	 * @return the e s f forniture rel local service
	 */
	public it.ethica.esf.service.ESFFornitureRelLocalService getESFFornitureRelLocalService() {
		return esfFornitureRelLocalService;
	}

	/**
	 * Sets the e s f forniture rel local service.
	 *
	 * @param esfFornitureRelLocalService the e s f forniture rel local service
	 */
	public void setESFFornitureRelLocalService(
		it.ethica.esf.service.ESFFornitureRelLocalService esfFornitureRelLocalService) {
		this.esfFornitureRelLocalService = esfFornitureRelLocalService;
	}

	/**
	 * Returns the e s f forniture rel persistence.
	 *
	 * @return the e s f forniture rel persistence
	 */
	public ESFFornitureRelPersistence getESFFornitureRelPersistence() {
		return esfFornitureRelPersistence;
	}

	/**
	 * Sets the e s f forniture rel persistence.
	 *
	 * @param esfFornitureRelPersistence the e s f forniture rel persistence
	 */
	public void setESFFornitureRelPersistence(
		ESFFornitureRelPersistence esfFornitureRelPersistence) {
		this.esfFornitureRelPersistence = esfFornitureRelPersistence;
	}

	/**
	 * Returns the e s f forniture type local service.
	 *
	 * @return the e s f forniture type local service
	 */
	public it.ethica.esf.service.ESFFornitureTypeLocalService getESFFornitureTypeLocalService() {
		return esfFornitureTypeLocalService;
	}

	/**
	 * Sets the e s f forniture type local service.
	 *
	 * @param esfFornitureTypeLocalService the e s f forniture type local service
	 */
	public void setESFFornitureTypeLocalService(
		it.ethica.esf.service.ESFFornitureTypeLocalService esfFornitureTypeLocalService) {
		this.esfFornitureTypeLocalService = esfFornitureTypeLocalService;
	}

	/**
	 * Returns the e s f forniture type persistence.
	 *
	 * @return the e s f forniture type persistence
	 */
	public ESFFornitureTypePersistence getESFFornitureTypePersistence() {
		return esfFornitureTypePersistence;
	}

	/**
	 * Sets the e s f forniture type persistence.
	 *
	 * @param esfFornitureTypePersistence the e s f forniture type persistence
	 */
	public void setESFFornitureTypePersistence(
		ESFFornitureTypePersistence esfFornitureTypePersistence) {
		this.esfFornitureTypePersistence = esfFornitureTypePersistence;
	}

	/**
	 * Returns the e s f gun local service.
	 *
	 * @return the e s f gun local service
	 */
	public it.ethica.esf.service.ESFGunLocalService getESFGunLocalService() {
		return esfGunLocalService;
	}

	/**
	 * Sets the e s f gun local service.
	 *
	 * @param esfGunLocalService the e s f gun local service
	 */
	public void setESFGunLocalService(
		it.ethica.esf.service.ESFGunLocalService esfGunLocalService) {
		this.esfGunLocalService = esfGunLocalService;
	}

	/**
	 * Returns the e s f gun persistence.
	 *
	 * @return the e s f gun persistence
	 */
	public ESFGunPersistence getESFGunPersistence() {
		return esfGunPersistence;
	}

	/**
	 * Sets the e s f gun persistence.
	 *
	 * @param esfGunPersistence the e s f gun persistence
	 */
	public void setESFGunPersistence(ESFGunPersistence esfGunPersistence) {
		this.esfGunPersistence = esfGunPersistence;
	}

	/**
	 * Returns the e s f gun kind local service.
	 *
	 * @return the e s f gun kind local service
	 */
	public it.ethica.esf.service.ESFGunKindLocalService getESFGunKindLocalService() {
		return esfGunKindLocalService;
	}

	/**
	 * Sets the e s f gun kind local service.
	 *
	 * @param esfGunKindLocalService the e s f gun kind local service
	 */
	public void setESFGunKindLocalService(
		it.ethica.esf.service.ESFGunKindLocalService esfGunKindLocalService) {
		this.esfGunKindLocalService = esfGunKindLocalService;
	}

	/**
	 * Returns the e s f gun kind persistence.
	 *
	 * @return the e s f gun kind persistence
	 */
	public ESFGunKindPersistence getESFGunKindPersistence() {
		return esfGunKindPersistence;
	}

	/**
	 * Sets the e s f gun kind persistence.
	 *
	 * @param esfGunKindPersistence the e s f gun kind persistence
	 */
	public void setESFGunKindPersistence(
		ESFGunKindPersistence esfGunKindPersistence) {
		this.esfGunKindPersistence = esfGunKindPersistence;
	}

	/**
	 * Returns the e s f gun type local service.
	 *
	 * @return the e s f gun type local service
	 */
	public it.ethica.esf.service.ESFGunTypeLocalService getESFGunTypeLocalService() {
		return esfGunTypeLocalService;
	}

	/**
	 * Sets the e s f gun type local service.
	 *
	 * @param esfGunTypeLocalService the e s f gun type local service
	 */
	public void setESFGunTypeLocalService(
		it.ethica.esf.service.ESFGunTypeLocalService esfGunTypeLocalService) {
		this.esfGunTypeLocalService = esfGunTypeLocalService;
	}

	/**
	 * Returns the e s f gun type persistence.
	 *
	 * @return the e s f gun type persistence
	 */
	public ESFGunTypePersistence getESFGunTypePersistence() {
		return esfGunTypePersistence;
	}

	/**
	 * Sets the e s f gun type persistence.
	 *
	 * @param esfGunTypePersistence the e s f gun type persistence
	 */
	public void setESFGunTypePersistence(
		ESFGunTypePersistence esfGunTypePersistence) {
		this.esfGunTypePersistence = esfGunTypePersistence;
	}

	/**
	 * Returns the e s f match local service.
	 *
	 * @return the e s f match local service
	 */
	public it.ethica.esf.service.ESFMatchLocalService getESFMatchLocalService() {
		return esfMatchLocalService;
	}

	/**
	 * Sets the e s f match local service.
	 *
	 * @param esfMatchLocalService the e s f match local service
	 */
	public void setESFMatchLocalService(
		it.ethica.esf.service.ESFMatchLocalService esfMatchLocalService) {
		this.esfMatchLocalService = esfMatchLocalService;
	}

	/**
	 * Returns the e s f match persistence.
	 *
	 * @return the e s f match persistence
	 */
	public ESFMatchPersistence getESFMatchPersistence() {
		return esfMatchPersistence;
	}

	/**
	 * Sets the e s f match persistence.
	 *
	 * @param esfMatchPersistence the e s f match persistence
	 */
	public void setESFMatchPersistence(ESFMatchPersistence esfMatchPersistence) {
		this.esfMatchPersistence = esfMatchPersistence;
	}

	/**
	 * Returns the e s f organization local service.
	 *
	 * @return the e s f organization local service
	 */
	public it.ethica.esf.service.ESFOrganizationLocalService getESFOrganizationLocalService() {
		return esfOrganizationLocalService;
	}

	/**
	 * Sets the e s f organization local service.
	 *
	 * @param esfOrganizationLocalService the e s f organization local service
	 */
	public void setESFOrganizationLocalService(
		it.ethica.esf.service.ESFOrganizationLocalService esfOrganizationLocalService) {
		this.esfOrganizationLocalService = esfOrganizationLocalService;
	}

	/**
	 * Returns the e s f organization persistence.
	 *
	 * @return the e s f organization persistence
	 */
	public ESFOrganizationPersistence getESFOrganizationPersistence() {
		return esfOrganizationPersistence;
	}

	/**
	 * Sets the e s f organization persistence.
	 *
	 * @param esfOrganizationPersistence the e s f organization persistence
	 */
	public void setESFOrganizationPersistence(
		ESFOrganizationPersistence esfOrganizationPersistence) {
		this.esfOrganizationPersistence = esfOrganizationPersistence;
	}

	/**
	 * Returns the e s f organization unitservice local service.
	 *
	 * @return the e s f organization unitservice local service
	 */
	public it.ethica.esf.service.ESFOrganizationUnitserviceLocalService getESFOrganizationUnitserviceLocalService() {
		return esfOrganizationUnitserviceLocalService;
	}

	/**
	 * Sets the e s f organization unitservice local service.
	 *
	 * @param esfOrganizationUnitserviceLocalService the e s f organization unitservice local service
	 */
	public void setESFOrganizationUnitserviceLocalService(
		it.ethica.esf.service.ESFOrganizationUnitserviceLocalService esfOrganizationUnitserviceLocalService) {
		this.esfOrganizationUnitserviceLocalService = esfOrganizationUnitserviceLocalService;
	}

	/**
	 * Returns the e s f organization unitservice persistence.
	 *
	 * @return the e s f organization unitservice persistence
	 */
	public ESFOrganizationUnitservicePersistence getESFOrganizationUnitservicePersistence() {
		return esfOrganizationUnitservicePersistence;
	}

	/**
	 * Sets the e s f organization unitservice persistence.
	 *
	 * @param esfOrganizationUnitservicePersistence the e s f organization unitservice persistence
	 */
	public void setESFOrganizationUnitservicePersistence(
		ESFOrganizationUnitservicePersistence esfOrganizationUnitservicePersistence) {
		this.esfOrganizationUnitservicePersistence = esfOrganizationUnitservicePersistence;
	}

	/**
	 * Returns the e s f province local service.
	 *
	 * @return the e s f province local service
	 */
	public it.ethica.esf.service.ESFProvinceLocalService getESFProvinceLocalService() {
		return esfProvinceLocalService;
	}

	/**
	 * Sets the e s f province local service.
	 *
	 * @param esfProvinceLocalService the e s f province local service
	 */
	public void setESFProvinceLocalService(
		it.ethica.esf.service.ESFProvinceLocalService esfProvinceLocalService) {
		this.esfProvinceLocalService = esfProvinceLocalService;
	}

	/**
	 * Returns the e s f province persistence.
	 *
	 * @return the e s f province persistence
	 */
	public ESFProvincePersistence getESFProvincePersistence() {
		return esfProvincePersistence;
	}

	/**
	 * Sets the e s f province persistence.
	 *
	 * @param esfProvincePersistence the e s f province persistence
	 */
	public void setESFProvincePersistence(
		ESFProvincePersistence esfProvincePersistence) {
		this.esfProvincePersistence = esfProvincePersistence;
	}

	/**
	 * Returns the e s f region local service.
	 *
	 * @return the e s f region local service
	 */
	public it.ethica.esf.service.ESFRegionLocalService getESFRegionLocalService() {
		return esfRegionLocalService;
	}

	/**
	 * Sets the e s f region local service.
	 *
	 * @param esfRegionLocalService the e s f region local service
	 */
	public void setESFRegionLocalService(
		it.ethica.esf.service.ESFRegionLocalService esfRegionLocalService) {
		this.esfRegionLocalService = esfRegionLocalService;
	}

	/**
	 * Returns the e s f region persistence.
	 *
	 * @return the e s f region persistence
	 */
	public ESFRegionPersistence getESFRegionPersistence() {
		return esfRegionPersistence;
	}

	/**
	 * Sets the e s f region persistence.
	 *
	 * @param esfRegionPersistence the e s f region persistence
	 */
	public void setESFRegionPersistence(
		ESFRegionPersistence esfRegionPersistence) {
		this.esfRegionPersistence = esfRegionPersistence;
	}

	/**
	 * Returns the e s f sport type local service.
	 *
	 * @return the e s f sport type local service
	 */
	public it.ethica.esf.service.ESFSportTypeLocalService getESFSportTypeLocalService() {
		return esfSportTypeLocalService;
	}

	/**
	 * Sets the e s f sport type local service.
	 *
	 * @param esfSportTypeLocalService the e s f sport type local service
	 */
	public void setESFSportTypeLocalService(
		it.ethica.esf.service.ESFSportTypeLocalService esfSportTypeLocalService) {
		this.esfSportTypeLocalService = esfSportTypeLocalService;
	}

	/**
	 * Returns the e s f sport type persistence.
	 *
	 * @return the e s f sport type persistence
	 */
	public ESFSportTypePersistence getESFSportTypePersistence() {
		return esfSportTypePersistence;
	}

	/**
	 * Sets the e s f sport type persistence.
	 *
	 * @param esfSportTypePersistence the e s f sport type persistence
	 */
	public void setESFSportTypePersistence(
		ESFSportTypePersistence esfSportTypePersistence) {
		this.esfSportTypePersistence = esfSportTypePersistence;
	}

	/**
	 * Returns the e s f state local service.
	 *
	 * @return the e s f state local service
	 */
	public it.ethica.esf.service.ESFStateLocalService getESFStateLocalService() {
		return esfStateLocalService;
	}

	/**
	 * Sets the e s f state local service.
	 *
	 * @param esfStateLocalService the e s f state local service
	 */
	public void setESFStateLocalService(
		it.ethica.esf.service.ESFStateLocalService esfStateLocalService) {
		this.esfStateLocalService = esfStateLocalService;
	}

	/**
	 * Returns the e s f state persistence.
	 *
	 * @return the e s f state persistence
	 */
	public ESFStatePersistence getESFStatePersistence() {
		return esfStatePersistence;
	}

	/**
	 * Sets the e s f state persistence.
	 *
	 * @param esfStatePersistence the e s f state persistence
	 */
	public void setESFStatePersistence(ESFStatePersistence esfStatePersistence) {
		this.esfStatePersistence = esfStatePersistence;
	}

	/**
	 * Returns the e s f tournament local service.
	 *
	 * @return the e s f tournament local service
	 */
	public it.ethica.esf.service.ESFTournamentLocalService getESFTournamentLocalService() {
		return esfTournamentLocalService;
	}

	/**
	 * Sets the e s f tournament local service.
	 *
	 * @param esfTournamentLocalService the e s f tournament local service
	 */
	public void setESFTournamentLocalService(
		it.ethica.esf.service.ESFTournamentLocalService esfTournamentLocalService) {
		this.esfTournamentLocalService = esfTournamentLocalService;
	}

	/**
	 * Returns the e s f tournament persistence.
	 *
	 * @return the e s f tournament persistence
	 */
	public ESFTournamentPersistence getESFTournamentPersistence() {
		return esfTournamentPersistence;
	}

	/**
	 * Sets the e s f tournament persistence.
	 *
	 * @param esfTournamentPersistence the e s f tournament persistence
	 */
	public void setESFTournamentPersistence(
		ESFTournamentPersistence esfTournamentPersistence) {
		this.esfTournamentPersistence = esfTournamentPersistence;
	}

	/**
	 * Returns the e s f unitservice local service.
	 *
	 * @return the e s f unitservice local service
	 */
	public it.ethica.esf.service.ESFUnitserviceLocalService getESFUnitserviceLocalService() {
		return esfUnitserviceLocalService;
	}

	/**
	 * Sets the e s f unitservice local service.
	 *
	 * @param esfUnitserviceLocalService the e s f unitservice local service
	 */
	public void setESFUnitserviceLocalService(
		it.ethica.esf.service.ESFUnitserviceLocalService esfUnitserviceLocalService) {
		this.esfUnitserviceLocalService = esfUnitserviceLocalService;
	}

	/**
	 * Returns the e s f unitservice persistence.
	 *
	 * @return the e s f unitservice persistence
	 */
	public ESFUnitservicePersistence getESFUnitservicePersistence() {
		return esfUnitservicePersistence;
	}

	/**
	 * Sets the e s f unitservice persistence.
	 *
	 * @param esfUnitservicePersistence the e s f unitservice persistence
	 */
	public void setESFUnitservicePersistence(
		ESFUnitservicePersistence esfUnitservicePersistence) {
		this.esfUnitservicePersistence = esfUnitservicePersistence;
	}

	/**
	 * Returns the e s f user local service.
	 *
	 * @return the e s f user local service
	 */
	public it.ethica.esf.service.ESFUserLocalService getESFUserLocalService() {
		return esfUserLocalService;
	}

	/**
	 * Sets the e s f user local service.
	 *
	 * @param esfUserLocalService the e s f user local service
	 */
	public void setESFUserLocalService(
		it.ethica.esf.service.ESFUserLocalService esfUserLocalService) {
		this.esfUserLocalService = esfUserLocalService;
	}

	/**
	 * Returns the e s f user persistence.
	 *
	 * @return the e s f user persistence
	 */
	public ESFUserPersistence getESFUserPersistence() {
		return esfUserPersistence;
	}

	/**
	 * Sets the e s f user persistence.
	 *
	 * @param esfUserPersistence the e s f user persistence
	 */
	public void setESFUserPersistence(ESFUserPersistence esfUserPersistence) {
		this.esfUserPersistence = esfUserPersistence;
	}

	/**
	 * Returns the e s f user e s f user role local service.
	 *
	 * @return the e s f user e s f user role local service
	 */
	public it.ethica.esf.service.ESFUserESFUserRoleLocalService getESFUserESFUserRoleLocalService() {
		return esfUserESFUserRoleLocalService;
	}

	/**
	 * Sets the e s f user e s f user role local service.
	 *
	 * @param esfUserESFUserRoleLocalService the e s f user e s f user role local service
	 */
	public void setESFUserESFUserRoleLocalService(
		it.ethica.esf.service.ESFUserESFUserRoleLocalService esfUserESFUserRoleLocalService) {
		this.esfUserESFUserRoleLocalService = esfUserESFUserRoleLocalService;
	}

	/**
	 * Returns the e s f user e s f user role persistence.
	 *
	 * @return the e s f user e s f user role persistence
	 */
	public ESFUserESFUserRolePersistence getESFUserESFUserRolePersistence() {
		return esfUserESFUserRolePersistence;
	}

	/**
	 * Sets the e s f user e s f user role persistence.
	 *
	 * @param esfUserESFUserRolePersistence the e s f user e s f user role persistence
	 */
	public void setESFUserESFUserRolePersistence(
		ESFUserESFUserRolePersistence esfUserESFUserRolePersistence) {
		this.esfUserESFUserRolePersistence = esfUserESFUserRolePersistence;
	}

	/**
	 * Returns the e s f user role local service.
	 *
	 * @return the e s f user role local service
	 */
	public it.ethica.esf.service.ESFUserRoleLocalService getESFUserRoleLocalService() {
		return esfUserRoleLocalService;
	}

	/**
	 * Sets the e s f user role local service.
	 *
	 * @param esfUserRoleLocalService the e s f user role local service
	 */
	public void setESFUserRoleLocalService(
		it.ethica.esf.service.ESFUserRoleLocalService esfUserRoleLocalService) {
		this.esfUserRoleLocalService = esfUserRoleLocalService;
	}

	/**
	 * Returns the e s f user role persistence.
	 *
	 * @return the e s f user role persistence
	 */
	public ESFUserRolePersistence getESFUserRolePersistence() {
		return esfUserRolePersistence;
	}

	/**
	 * Sets the e s f user role persistence.
	 *
	 * @param esfUserRolePersistence the e s f user role persistence
	 */
	public void setESFUserRolePersistence(
		ESFUserRolePersistence esfUserRolePersistence) {
		this.esfUserRolePersistence = esfUserRolePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return ESFConfiguration.class;
	}

	protected String getModelClassName() {
		return ESFConfiguration.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = esfConfigurationPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = it.ethica.esf.service.ESFAddressLocalService.class)
	protected it.ethica.esf.service.ESFAddressLocalService esfAddressLocalService;
	@BeanReference(type = ESFAddressPersistence.class)
	protected ESFAddressPersistence esfAddressPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFCardLocalService.class)
	protected it.ethica.esf.service.ESFCardLocalService esfCardLocalService;
	@BeanReference(type = ESFCardPersistence.class)
	protected ESFCardPersistence esfCardPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFCityLocalService.class)
	protected it.ethica.esf.service.ESFCityLocalService esfCityLocalService;
	@BeanReference(type = ESFCityPersistence.class)
	protected ESFCityPersistence esfCityPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFConfigurationService.class)
	protected it.ethica.esf.service.ESFConfigurationService esfConfigurationService;
	@BeanReference(type = ESFConfigurationPersistence.class)
	protected ESFConfigurationPersistence esfConfigurationPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFCountryLocalService.class)
	protected it.ethica.esf.service.ESFCountryLocalService esfCountryLocalService;
	@BeanReference(type = ESFCountryPersistence.class)
	protected ESFCountryPersistence esfCountryPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFEntityStateLocalService.class)
	protected it.ethica.esf.service.ESFEntityStateLocalService esfEntityStateLocalService;
	@BeanReference(type = ESFEntityStatePersistence.class)
	protected ESFEntityStatePersistence esfEntityStatePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFFieldLocalService.class)
	protected it.ethica.esf.service.ESFFieldLocalService esfFieldLocalService;
	@BeanReference(type = ESFFieldPersistence.class)
	protected ESFFieldPersistence esfFieldPersistence;
	@BeanReference(type = ESFFieldESFSportTypePersistence.class)
	protected ESFFieldESFSportTypePersistence esfFieldESFSportTypePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFFornitureLocalService.class)
	protected it.ethica.esf.service.ESFFornitureLocalService esfFornitureLocalService;
	@BeanReference(type = ESFForniturePersistence.class)
	protected ESFForniturePersistence esfForniturePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFFornitureRelLocalService.class)
	protected it.ethica.esf.service.ESFFornitureRelLocalService esfFornitureRelLocalService;
	@BeanReference(type = ESFFornitureRelPersistence.class)
	protected ESFFornitureRelPersistence esfFornitureRelPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFFornitureTypeLocalService.class)
	protected it.ethica.esf.service.ESFFornitureTypeLocalService esfFornitureTypeLocalService;
	@BeanReference(type = ESFFornitureTypePersistence.class)
	protected ESFFornitureTypePersistence esfFornitureTypePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFGunLocalService.class)
	protected it.ethica.esf.service.ESFGunLocalService esfGunLocalService;
	@BeanReference(type = ESFGunPersistence.class)
	protected ESFGunPersistence esfGunPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFGunKindLocalService.class)
	protected it.ethica.esf.service.ESFGunKindLocalService esfGunKindLocalService;
	@BeanReference(type = ESFGunKindPersistence.class)
	protected ESFGunKindPersistence esfGunKindPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFGunTypeLocalService.class)
	protected it.ethica.esf.service.ESFGunTypeLocalService esfGunTypeLocalService;
	@BeanReference(type = ESFGunTypePersistence.class)
	protected ESFGunTypePersistence esfGunTypePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFMatchLocalService.class)
	protected it.ethica.esf.service.ESFMatchLocalService esfMatchLocalService;
	@BeanReference(type = ESFMatchPersistence.class)
	protected ESFMatchPersistence esfMatchPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFOrganizationLocalService.class)
	protected it.ethica.esf.service.ESFOrganizationLocalService esfOrganizationLocalService;
	@BeanReference(type = ESFOrganizationPersistence.class)
	protected ESFOrganizationPersistence esfOrganizationPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFOrganizationUnitserviceLocalService.class)
	protected it.ethica.esf.service.ESFOrganizationUnitserviceLocalService esfOrganizationUnitserviceLocalService;
	@BeanReference(type = ESFOrganizationUnitservicePersistence.class)
	protected ESFOrganizationUnitservicePersistence esfOrganizationUnitservicePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFProvinceLocalService.class)
	protected it.ethica.esf.service.ESFProvinceLocalService esfProvinceLocalService;
	@BeanReference(type = ESFProvincePersistence.class)
	protected ESFProvincePersistence esfProvincePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFRegionLocalService.class)
	protected it.ethica.esf.service.ESFRegionLocalService esfRegionLocalService;
	@BeanReference(type = ESFRegionPersistence.class)
	protected ESFRegionPersistence esfRegionPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFSportTypeLocalService.class)
	protected it.ethica.esf.service.ESFSportTypeLocalService esfSportTypeLocalService;
	@BeanReference(type = ESFSportTypePersistence.class)
	protected ESFSportTypePersistence esfSportTypePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFStateLocalService.class)
	protected it.ethica.esf.service.ESFStateLocalService esfStateLocalService;
	@BeanReference(type = ESFStatePersistence.class)
	protected ESFStatePersistence esfStatePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFTournamentLocalService.class)
	protected it.ethica.esf.service.ESFTournamentLocalService esfTournamentLocalService;
	@BeanReference(type = ESFTournamentPersistence.class)
	protected ESFTournamentPersistence esfTournamentPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFUnitserviceLocalService.class)
	protected it.ethica.esf.service.ESFUnitserviceLocalService esfUnitserviceLocalService;
	@BeanReference(type = ESFUnitservicePersistence.class)
	protected ESFUnitservicePersistence esfUnitservicePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFUserLocalService.class)
	protected it.ethica.esf.service.ESFUserLocalService esfUserLocalService;
	@BeanReference(type = ESFUserPersistence.class)
	protected ESFUserPersistence esfUserPersistence;
	@BeanReference(type = it.ethica.esf.service.ESFUserESFUserRoleLocalService.class)
	protected it.ethica.esf.service.ESFUserESFUserRoleLocalService esfUserESFUserRoleLocalService;
	@BeanReference(type = ESFUserESFUserRolePersistence.class)
	protected ESFUserESFUserRolePersistence esfUserESFUserRolePersistence;
	@BeanReference(type = it.ethica.esf.service.ESFUserRoleLocalService.class)
	protected it.ethica.esf.service.ESFUserRoleLocalService esfUserRoleLocalService;
	@BeanReference(type = ESFUserRolePersistence.class)
	protected ESFUserRolePersistence esfUserRolePersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private ESFConfigurationServiceClpInvoker _clpInvoker = new ESFConfigurationServiceClpInvoker();
}