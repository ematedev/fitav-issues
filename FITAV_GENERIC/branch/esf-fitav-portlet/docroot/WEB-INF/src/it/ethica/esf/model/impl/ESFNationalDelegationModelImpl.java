/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFNationalDelegation;
import it.ethica.esf.model.ESFNationalDelegationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFNationalDelegation service. Represents a row in the &quot;ESFNationalDelegation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFNationalDelegationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFNationalDelegationImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFNationalDelegationImpl
 * @see it.ethica.esf.model.ESFNationalDelegation
 * @see it.ethica.esf.model.ESFNationalDelegationModel
 * @generated
 */
public class ESFNationalDelegationModelImpl extends BaseModelImpl<ESFNationalDelegation>
	implements ESFNationalDelegationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f national delegation model instance should use the {@link it.ethica.esf.model.ESFNationalDelegation} interface instead.
	 */
	public static final String TABLE_NAME = "ESFNationalDelegation";
	public static final Object[][] TABLE_COLUMNS = {
			{ "esfUserId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "leaveDate", Types.TIMESTAMP },
			{ "returnDate", Types.TIMESTAMP },
			{ "esfMatchId", Types.BIGINT },
			{ "esfSportTypeId", Types.BIGINT },
			{ "esfGunId1", Types.BIGINT },
			{ "esfGunId2", Types.BIGINT },
			{ "esfNationalDelgationId", Types.BIGINT },
			{ "esfPartecipantTypeId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFNationalDelegation (esfUserId LONG,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,leaveDate DATE null,returnDate DATE null,esfMatchId LONG,esfSportTypeId LONG,esfGunId1 LONG,esfGunId2 LONG,esfNationalDelgationId LONG not null primary key,esfPartecipantTypeId LONG)";
	public static final String TABLE_SQL_DROP = "drop table ESFNationalDelegation";
	public static final String ORDER_BY_JPQL = " ORDER BY esfNationalDelegation.esfNationalDelgationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFNationalDelegation.esfNationalDelgationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFNationalDelegation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFNationalDelegation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFNationalDelegation"),
			true);
	public static long ESFMATCHID_COLUMN_BITMASK = 1L;
	public static long ESFPARTECIPANTTYPEID_COLUMN_BITMASK = 2L;
	public static long ESFSPORTTYPEID_COLUMN_BITMASK = 4L;
	public static long ESFUSERID_COLUMN_BITMASK = 8L;
	public static long LEAVEDATE_COLUMN_BITMASK = 16L;
	public static long ESFNATIONALDELGATIONID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFNationalDelegation"));

	public ESFNationalDelegationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfNationalDelgationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfNationalDelgationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfNationalDelgationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFNationalDelegation.class;
	}

	@Override
	public String getModelClassName() {
		return ESFNationalDelegation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("esfUserId", getEsfUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("leaveDate", getLeaveDate());
		attributes.put("returnDate", getReturnDate());
		attributes.put("esfMatchId", getEsfMatchId());
		attributes.put("esfSportTypeId", getEsfSportTypeId());
		attributes.put("esfGunId1", getEsfGunId1());
		attributes.put("esfGunId2", getEsfGunId2());
		attributes.put("esfNationalDelgationId", getEsfNationalDelgationId());
		attributes.put("esfPartecipantTypeId", getEsfPartecipantTypeId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long esfUserId = (Long)attributes.get("esfUserId");

		if (esfUserId != null) {
			setEsfUserId(esfUserId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date leaveDate = (Date)attributes.get("leaveDate");

		if (leaveDate != null) {
			setLeaveDate(leaveDate);
		}

		Date returnDate = (Date)attributes.get("returnDate");

		if (returnDate != null) {
			setReturnDate(returnDate);
		}

		Long esfMatchId = (Long)attributes.get("esfMatchId");

		if (esfMatchId != null) {
			setEsfMatchId(esfMatchId);
		}

		Long esfSportTypeId = (Long)attributes.get("esfSportTypeId");

		if (esfSportTypeId != null) {
			setEsfSportTypeId(esfSportTypeId);
		}

		Long esfGunId1 = (Long)attributes.get("esfGunId1");

		if (esfGunId1 != null) {
			setEsfGunId1(esfGunId1);
		}

		Long esfGunId2 = (Long)attributes.get("esfGunId2");

		if (esfGunId2 != null) {
			setEsfGunId2(esfGunId2);
		}

		Long esfNationalDelgationId = (Long)attributes.get(
				"esfNationalDelgationId");

		if (esfNationalDelgationId != null) {
			setEsfNationalDelgationId(esfNationalDelgationId);
		}

		Long esfPartecipantTypeId = (Long)attributes.get("esfPartecipantTypeId");

		if (esfPartecipantTypeId != null) {
			setEsfPartecipantTypeId(esfPartecipantTypeId);
		}
	}

	@Override
	public long getEsfUserId() {
		return _esfUserId;
	}

	@Override
	public void setEsfUserId(long esfUserId) {
		_columnBitmask |= ESFUSERID_COLUMN_BITMASK;

		if (!_setOriginalEsfUserId) {
			_setOriginalEsfUserId = true;

			_originalEsfUserId = _esfUserId;
		}

		_esfUserId = esfUserId;
	}

	@Override
	public String getEsfUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getEsfUserId(), "uuid", _esfUserUuid);
	}

	@Override
	public void setEsfUserUuid(String esfUserUuid) {
		_esfUserUuid = esfUserUuid;
	}

	public long getOriginalEsfUserId() {
		return _originalEsfUserId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public Date getLeaveDate() {
		return _leaveDate;
	}

	@Override
	public void setLeaveDate(Date leaveDate) {
		_columnBitmask |= LEAVEDATE_COLUMN_BITMASK;

		if (_originalLeaveDate == null) {
			_originalLeaveDate = _leaveDate;
		}

		_leaveDate = leaveDate;
	}

	public Date getOriginalLeaveDate() {
		return _originalLeaveDate;
	}

	@Override
	public Date getReturnDate() {
		return _returnDate;
	}

	@Override
	public void setReturnDate(Date returnDate) {
		_returnDate = returnDate;
	}

	@Override
	public long getEsfMatchId() {
		return _esfMatchId;
	}

	@Override
	public void setEsfMatchId(long esfMatchId) {
		_columnBitmask |= ESFMATCHID_COLUMN_BITMASK;

		if (!_setOriginalEsfMatchId) {
			_setOriginalEsfMatchId = true;

			_originalEsfMatchId = _esfMatchId;
		}

		_esfMatchId = esfMatchId;
	}

	public long getOriginalEsfMatchId() {
		return _originalEsfMatchId;
	}

	@Override
	public long getEsfSportTypeId() {
		return _esfSportTypeId;
	}

	@Override
	public void setEsfSportTypeId(long esfSportTypeId) {
		_columnBitmask |= ESFSPORTTYPEID_COLUMN_BITMASK;

		if (!_setOriginalEsfSportTypeId) {
			_setOriginalEsfSportTypeId = true;

			_originalEsfSportTypeId = _esfSportTypeId;
		}

		_esfSportTypeId = esfSportTypeId;
	}

	public long getOriginalEsfSportTypeId() {
		return _originalEsfSportTypeId;
	}

	@Override
	public long getEsfGunId1() {
		return _esfGunId1;
	}

	@Override
	public void setEsfGunId1(long esfGunId1) {
		_esfGunId1 = esfGunId1;
	}

	@Override
	public long getEsfGunId2() {
		return _esfGunId2;
	}

	@Override
	public void setEsfGunId2(long esfGunId2) {
		_esfGunId2 = esfGunId2;
	}

	@Override
	public long getEsfNationalDelgationId() {
		return _esfNationalDelgationId;
	}

	@Override
	public void setEsfNationalDelgationId(long esfNationalDelgationId) {
		_esfNationalDelgationId = esfNationalDelgationId;
	}

	@Override
	public long getEsfPartecipantTypeId() {
		return _esfPartecipantTypeId;
	}

	@Override
	public void setEsfPartecipantTypeId(long esfPartecipantTypeId) {
		_columnBitmask |= ESFPARTECIPANTTYPEID_COLUMN_BITMASK;

		if (!_setOriginalEsfPartecipantTypeId) {
			_setOriginalEsfPartecipantTypeId = true;

			_originalEsfPartecipantTypeId = _esfPartecipantTypeId;
		}

		_esfPartecipantTypeId = esfPartecipantTypeId;
	}

	public long getOriginalEsfPartecipantTypeId() {
		return _originalEsfPartecipantTypeId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ESFNationalDelegation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFNationalDelegation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFNationalDelegation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFNationalDelegationImpl esfNationalDelegationImpl = new ESFNationalDelegationImpl();

		esfNationalDelegationImpl.setEsfUserId(getEsfUserId());
		esfNationalDelegationImpl.setGroupId(getGroupId());
		esfNationalDelegationImpl.setCompanyId(getCompanyId());
		esfNationalDelegationImpl.setUserId(getUserId());
		esfNationalDelegationImpl.setUserName(getUserName());
		esfNationalDelegationImpl.setCreateDate(getCreateDate());
		esfNationalDelegationImpl.setModifiedDate(getModifiedDate());
		esfNationalDelegationImpl.setLeaveDate(getLeaveDate());
		esfNationalDelegationImpl.setReturnDate(getReturnDate());
		esfNationalDelegationImpl.setEsfMatchId(getEsfMatchId());
		esfNationalDelegationImpl.setEsfSportTypeId(getEsfSportTypeId());
		esfNationalDelegationImpl.setEsfGunId1(getEsfGunId1());
		esfNationalDelegationImpl.setEsfGunId2(getEsfGunId2());
		esfNationalDelegationImpl.setEsfNationalDelgationId(getEsfNationalDelgationId());
		esfNationalDelegationImpl.setEsfPartecipantTypeId(getEsfPartecipantTypeId());

		esfNationalDelegationImpl.resetOriginalValues();

		return esfNationalDelegationImpl;
	}

	@Override
	public int compareTo(ESFNationalDelegation esfNationalDelegation) {
		long primaryKey = esfNationalDelegation.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFNationalDelegation)) {
			return false;
		}

		ESFNationalDelegation esfNationalDelegation = (ESFNationalDelegation)obj;

		long primaryKey = esfNationalDelegation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFNationalDelegationModelImpl esfNationalDelegationModelImpl = this;

		esfNationalDelegationModelImpl._originalEsfUserId = esfNationalDelegationModelImpl._esfUserId;

		esfNationalDelegationModelImpl._setOriginalEsfUserId = false;

		esfNationalDelegationModelImpl._originalLeaveDate = esfNationalDelegationModelImpl._leaveDate;

		esfNationalDelegationModelImpl._originalEsfMatchId = esfNationalDelegationModelImpl._esfMatchId;

		esfNationalDelegationModelImpl._setOriginalEsfMatchId = false;

		esfNationalDelegationModelImpl._originalEsfSportTypeId = esfNationalDelegationModelImpl._esfSportTypeId;

		esfNationalDelegationModelImpl._setOriginalEsfSportTypeId = false;

		esfNationalDelegationModelImpl._originalEsfPartecipantTypeId = esfNationalDelegationModelImpl._esfPartecipantTypeId;

		esfNationalDelegationModelImpl._setOriginalEsfPartecipantTypeId = false;

		esfNationalDelegationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFNationalDelegation> toCacheModel() {
		ESFNationalDelegationCacheModel esfNationalDelegationCacheModel = new ESFNationalDelegationCacheModel();

		esfNationalDelegationCacheModel.esfUserId = getEsfUserId();

		esfNationalDelegationCacheModel.groupId = getGroupId();

		esfNationalDelegationCacheModel.companyId = getCompanyId();

		esfNationalDelegationCacheModel.userId = getUserId();

		esfNationalDelegationCacheModel.userName = getUserName();

		String userName = esfNationalDelegationCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			esfNationalDelegationCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			esfNationalDelegationCacheModel.createDate = createDate.getTime();
		}
		else {
			esfNationalDelegationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			esfNationalDelegationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			esfNationalDelegationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date leaveDate = getLeaveDate();

		if (leaveDate != null) {
			esfNationalDelegationCacheModel.leaveDate = leaveDate.getTime();
		}
		else {
			esfNationalDelegationCacheModel.leaveDate = Long.MIN_VALUE;
		}

		Date returnDate = getReturnDate();

		if (returnDate != null) {
			esfNationalDelegationCacheModel.returnDate = returnDate.getTime();
		}
		else {
			esfNationalDelegationCacheModel.returnDate = Long.MIN_VALUE;
		}

		esfNationalDelegationCacheModel.esfMatchId = getEsfMatchId();

		esfNationalDelegationCacheModel.esfSportTypeId = getEsfSportTypeId();

		esfNationalDelegationCacheModel.esfGunId1 = getEsfGunId1();

		esfNationalDelegationCacheModel.esfGunId2 = getEsfGunId2();

		esfNationalDelegationCacheModel.esfNationalDelgationId = getEsfNationalDelgationId();

		esfNationalDelegationCacheModel.esfPartecipantTypeId = getEsfPartecipantTypeId();

		return esfNationalDelegationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{esfUserId=");
		sb.append(getEsfUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", leaveDate=");
		sb.append(getLeaveDate());
		sb.append(", returnDate=");
		sb.append(getReturnDate());
		sb.append(", esfMatchId=");
		sb.append(getEsfMatchId());
		sb.append(", esfSportTypeId=");
		sb.append(getEsfSportTypeId());
		sb.append(", esfGunId1=");
		sb.append(getEsfGunId1());
		sb.append(", esfGunId2=");
		sb.append(getEsfGunId2());
		sb.append(", esfNationalDelgationId=");
		sb.append(getEsfNationalDelgationId());
		sb.append(", esfPartecipantTypeId=");
		sb.append(getEsfPartecipantTypeId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFNationalDelegation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>esfUserId</column-name><column-value><![CDATA[");
		sb.append(getEsfUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leaveDate</column-name><column-value><![CDATA[");
		sb.append(getLeaveDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>returnDate</column-name><column-value><![CDATA[");
		sb.append(getReturnDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfMatchId</column-name><column-value><![CDATA[");
		sb.append(getEsfMatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfSportTypeId</column-name><column-value><![CDATA[");
		sb.append(getEsfSportTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfGunId1</column-name><column-value><![CDATA[");
		sb.append(getEsfGunId1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfGunId2</column-name><column-value><![CDATA[");
		sb.append(getEsfGunId2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfNationalDelgationId</column-name><column-value><![CDATA[");
		sb.append(getEsfNationalDelgationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfPartecipantTypeId</column-name><column-value><![CDATA[");
		sb.append(getEsfPartecipantTypeId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFNationalDelegation.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFNationalDelegation.class
		};
	private long _esfUserId;
	private String _esfUserUuid;
	private long _originalEsfUserId;
	private boolean _setOriginalEsfUserId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private Date _leaveDate;
	private Date _originalLeaveDate;
	private Date _returnDate;
	private long _esfMatchId;
	private long _originalEsfMatchId;
	private boolean _setOriginalEsfMatchId;
	private long _esfSportTypeId;
	private long _originalEsfSportTypeId;
	private boolean _setOriginalEsfSportTypeId;
	private long _esfGunId1;
	private long _esfGunId2;
	private long _esfNationalDelgationId;
	private long _esfPartecipantTypeId;
	private long _originalEsfPartecipantTypeId;
	private boolean _setOriginalEsfPartecipantTypeId;
	private long _columnBitmask;
	private ESFNationalDelegation _escapedModel;
}