/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFOrganization;
import it.ethica.esf.model.ESFOrganizationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFOrganization service. Represents a row in the &quot;ESFOrganization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFOrganizationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFOrganizationImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFOrganizationImpl
 * @see it.ethica.esf.model.ESFOrganization
 * @see it.ethica.esf.model.ESFOrganizationModel
 * @generated
 */
public class ESFOrganizationModelImpl extends BaseModelImpl<ESFOrganization>
	implements ESFOrganizationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f organization model instance should use the {@link it.ethica.esf.model.ESFOrganization} interface instead.
	 */
	public static final String TABLE_NAME = "ESFOrganization";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "esfOrganizationId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "code_", Types.VARCHAR },
			{ "vat", Types.VARCHAR },
			{ "fiscalCode", Types.VARCHAR },
			{ "ibanCode", Types.VARCHAR },
			{ "isMultiSport", Types.BOOLEAN },
			{ "legalForm", Types.VARCHAR },
			{ "category", Types.VARCHAR },
			{ "establishmentDate", Types.TIMESTAMP },
			{ "closureDate", Types.TIMESTAMP },
			{ "type_", Types.INTEGER },
			{ "insertDate", Types.TIMESTAMP },
			{ "coniDate", Types.TIMESTAMP },
			{ "coniCode", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "isYouthActive", Types.BOOLEAN },
			{ "firstAffiliationDate", Types.TIMESTAMP },
			{ "variations", Types.BIGINT },
			{ "regionCode", Types.BIGINT },
			{ "idFatherAssociation", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFOrganization (uuid_ VARCHAR(75) null,esfOrganizationId LONG not null primary key,groupId LONG,code_ VARCHAR(75) null,vat VARCHAR(75) null,fiscalCode VARCHAR(75) null,ibanCode VARCHAR(75) null,isMultiSport BOOLEAN,legalForm VARCHAR(75) null,category VARCHAR(75) null,establishmentDate DATE null,closureDate DATE null,type_ INTEGER,insertDate DATE null,coniDate DATE null,coniCode VARCHAR(75) null,description VARCHAR(255) null,isYouthActive BOOLEAN,firstAffiliationDate DATE null,variations LONG,regionCode LONG,idFatherAssociation LONG)";
	public static final String TABLE_SQL_DROP = "drop table ESFOrganization";
	public static final String ORDER_BY_JPQL = " ORDER BY esfOrganization.esfOrganizationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFOrganization.esfOrganizationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFOrganization"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFOrganization"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFOrganization"),
			true);
	public static long CATEGORY_COLUMN_BITMASK = 1L;
	public static long CODE_COLUMN_BITMASK = 2L;
	public static long FISCALCODE_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long ISMULTISPORT_COLUMN_BITMASK = 16L;
	public static long LEGALFORM_COLUMN_BITMASK = 32L;
	public static long TYPE_COLUMN_BITMASK = 64L;
	public static long UUID_COLUMN_BITMASK = 128L;
	public static long VAT_COLUMN_BITMASK = 256L;
	public static long ESFORGANIZATIONID_COLUMN_BITMASK = 512L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFOrganization"));

	public ESFOrganizationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfOrganizationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfOrganizationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfOrganizationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFOrganization.class;
	}

	@Override
	public String getModelClassName() {
		return ESFOrganization.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("esfOrganizationId", getEsfOrganizationId());
		attributes.put("groupId", getGroupId());
		attributes.put("code", getCode());
		attributes.put("vat", getVat());
		attributes.put("fiscalCode", getFiscalCode());
		attributes.put("ibanCode", getIbanCode());
		attributes.put("isMultiSport", getIsMultiSport());
		attributes.put("legalForm", getLegalForm());
		attributes.put("category", getCategory());
		attributes.put("establishmentDate", getEstablishmentDate());
		attributes.put("closureDate", getClosureDate());
		attributes.put("type", getType());
		attributes.put("insertDate", getInsertDate());
		attributes.put("coniDate", getConiDate());
		attributes.put("coniCode", getConiCode());
		attributes.put("description", getDescription());
		attributes.put("isYouthActive", getIsYouthActive());
		attributes.put("firstAffiliationDate", getFirstAffiliationDate());
		attributes.put("variations", getVariations());
		attributes.put("regionCode", getRegionCode());
		attributes.put("idFatherAssociation", getIdFatherAssociation());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long esfOrganizationId = (Long)attributes.get("esfOrganizationId");

		if (esfOrganizationId != null) {
			setEsfOrganizationId(esfOrganizationId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String code = (String)attributes.get("code");

		if (code != null) {
			setCode(code);
		}

		String vat = (String)attributes.get("vat");

		if (vat != null) {
			setVat(vat);
		}

		String fiscalCode = (String)attributes.get("fiscalCode");

		if (fiscalCode != null) {
			setFiscalCode(fiscalCode);
		}

		String ibanCode = (String)attributes.get("ibanCode");

		if (ibanCode != null) {
			setIbanCode(ibanCode);
		}

		Boolean isMultiSport = (Boolean)attributes.get("isMultiSport");

		if (isMultiSport != null) {
			setIsMultiSport(isMultiSport);
		}

		String legalForm = (String)attributes.get("legalForm");

		if (legalForm != null) {
			setLegalForm(legalForm);
		}

		String category = (String)attributes.get("category");

		if (category != null) {
			setCategory(category);
		}

		Date establishmentDate = (Date)attributes.get("establishmentDate");

		if (establishmentDate != null) {
			setEstablishmentDate(establishmentDate);
		}

		Date closureDate = (Date)attributes.get("closureDate");

		if (closureDate != null) {
			setClosureDate(closureDate);
		}

		Integer type = (Integer)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		Date insertDate = (Date)attributes.get("insertDate");

		if (insertDate != null) {
			setInsertDate(insertDate);
		}

		Date coniDate = (Date)attributes.get("coniDate");

		if (coniDate != null) {
			setConiDate(coniDate);
		}

		String coniCode = (String)attributes.get("coniCode");

		if (coniCode != null) {
			setConiCode(coniCode);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Boolean isYouthActive = (Boolean)attributes.get("isYouthActive");

		if (isYouthActive != null) {
			setIsYouthActive(isYouthActive);
		}

		Date firstAffiliationDate = (Date)attributes.get("firstAffiliationDate");

		if (firstAffiliationDate != null) {
			setFirstAffiliationDate(firstAffiliationDate);
		}

		Long variations = (Long)attributes.get("variations");

		if (variations != null) {
			setVariations(variations);
		}

		Long regionCode = (Long)attributes.get("regionCode");

		if (regionCode != null) {
			setRegionCode(regionCode);
		}

		Long idFatherAssociation = (Long)attributes.get("idFatherAssociation");

		if (idFatherAssociation != null) {
			setIdFatherAssociation(idFatherAssociation);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getEsfOrganizationId() {
		return _esfOrganizationId;
	}

	@Override
	public void setEsfOrganizationId(long esfOrganizationId) {
		_esfOrganizationId = esfOrganizationId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public String getCode() {
		if (_code == null) {
			return StringPool.BLANK;
		}
		else {
			return _code;
		}
	}

	@Override
	public void setCode(String code) {
		_columnBitmask |= CODE_COLUMN_BITMASK;

		if (_originalCode == null) {
			_originalCode = _code;
		}

		_code = code;
	}

	public String getOriginalCode() {
		return GetterUtil.getString(_originalCode);
	}

	@Override
	public String getVat() {
		if (_vat == null) {
			return StringPool.BLANK;
		}
		else {
			return _vat;
		}
	}

	@Override
	public void setVat(String vat) {
		_columnBitmask |= VAT_COLUMN_BITMASK;

		if (_originalVat == null) {
			_originalVat = _vat;
		}

		_vat = vat;
	}

	public String getOriginalVat() {
		return GetterUtil.getString(_originalVat);
	}

	@Override
	public String getFiscalCode() {
		if (_fiscalCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _fiscalCode;
		}
	}

	@Override
	public void setFiscalCode(String fiscalCode) {
		_columnBitmask |= FISCALCODE_COLUMN_BITMASK;

		if (_originalFiscalCode == null) {
			_originalFiscalCode = _fiscalCode;
		}

		_fiscalCode = fiscalCode;
	}

	public String getOriginalFiscalCode() {
		return GetterUtil.getString(_originalFiscalCode);
	}

	@Override
	public String getIbanCode() {
		if (_ibanCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _ibanCode;
		}
	}

	@Override
	public void setIbanCode(String ibanCode) {
		_ibanCode = ibanCode;
	}

	@Override
	public boolean getIsMultiSport() {
		return _isMultiSport;
	}

	@Override
	public boolean isIsMultiSport() {
		return _isMultiSport;
	}

	@Override
	public void setIsMultiSport(boolean isMultiSport) {
		_columnBitmask |= ISMULTISPORT_COLUMN_BITMASK;

		if (!_setOriginalIsMultiSport) {
			_setOriginalIsMultiSport = true;

			_originalIsMultiSport = _isMultiSport;
		}

		_isMultiSport = isMultiSport;
	}

	public boolean getOriginalIsMultiSport() {
		return _originalIsMultiSport;
	}

	@Override
	public String getLegalForm() {
		if (_legalForm == null) {
			return StringPool.BLANK;
		}
		else {
			return _legalForm;
		}
	}

	@Override
	public void setLegalForm(String legalForm) {
		_columnBitmask |= LEGALFORM_COLUMN_BITMASK;

		if (_originalLegalForm == null) {
			_originalLegalForm = _legalForm;
		}

		_legalForm = legalForm;
	}

	public String getOriginalLegalForm() {
		return GetterUtil.getString(_originalLegalForm);
	}

	@Override
	public String getCategory() {
		if (_category == null) {
			return StringPool.BLANK;
		}
		else {
			return _category;
		}
	}

	@Override
	public void setCategory(String category) {
		_columnBitmask |= CATEGORY_COLUMN_BITMASK;

		if (_originalCategory == null) {
			_originalCategory = _category;
		}

		_category = category;
	}

	public String getOriginalCategory() {
		return GetterUtil.getString(_originalCategory);
	}

	@Override
	public Date getEstablishmentDate() {
		return _establishmentDate;
	}

	@Override
	public void setEstablishmentDate(Date establishmentDate) {
		_establishmentDate = establishmentDate;
	}

	@Override
	public Date getClosureDate() {
		return _closureDate;
	}

	@Override
	public void setClosureDate(Date closureDate) {
		_closureDate = closureDate;
	}

	@Override
	public int getType() {
		return _type;
	}

	@Override
	public void setType(int type) {
		_columnBitmask |= TYPE_COLUMN_BITMASK;

		if (!_setOriginalType) {
			_setOriginalType = true;

			_originalType = _type;
		}

		_type = type;
	}

	public int getOriginalType() {
		return _originalType;
	}

	@Override
	public Date getInsertDate() {
		return _insertDate;
	}

	@Override
	public void setInsertDate(Date insertDate) {
		_insertDate = insertDate;
	}

	@Override
	public Date getConiDate() {
		return _coniDate;
	}

	@Override
	public void setConiDate(Date coniDate) {
		_coniDate = coniDate;
	}

	@Override
	public String getConiCode() {
		if (_coniCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _coniCode;
		}
	}

	@Override
	public void setConiCode(String coniCode) {
		_coniCode = coniCode;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public boolean getIsYouthActive() {
		return _isYouthActive;
	}

	@Override
	public boolean isIsYouthActive() {
		return _isYouthActive;
	}

	@Override
	public void setIsYouthActive(boolean isYouthActive) {
		_isYouthActive = isYouthActive;
	}

	@Override
	public Date getFirstAffiliationDate() {
		return _firstAffiliationDate;
	}

	@Override
	public void setFirstAffiliationDate(Date firstAffiliationDate) {
		_firstAffiliationDate = firstAffiliationDate;
	}

	@Override
	public long getVariations() {
		return _variations;
	}

	@Override
	public void setVariations(long variations) {
		_variations = variations;
	}

	@Override
	public long getRegionCode() {
		return _regionCode;
	}

	@Override
	public void setRegionCode(long regionCode) {
		_regionCode = regionCode;
	}

	@Override
	public long getIdFatherAssociation() {
		return _idFatherAssociation;
	}

	@Override
	public void setIdFatherAssociation(long idFatherAssociation) {
		_idFatherAssociation = idFatherAssociation;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ESFOrganization.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFOrganization toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFOrganization)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFOrganizationImpl esfOrganizationImpl = new ESFOrganizationImpl();

		esfOrganizationImpl.setUuid(getUuid());
		esfOrganizationImpl.setEsfOrganizationId(getEsfOrganizationId());
		esfOrganizationImpl.setGroupId(getGroupId());
		esfOrganizationImpl.setCode(getCode());
		esfOrganizationImpl.setVat(getVat());
		esfOrganizationImpl.setFiscalCode(getFiscalCode());
		esfOrganizationImpl.setIbanCode(getIbanCode());
		esfOrganizationImpl.setIsMultiSport(getIsMultiSport());
		esfOrganizationImpl.setLegalForm(getLegalForm());
		esfOrganizationImpl.setCategory(getCategory());
		esfOrganizationImpl.setEstablishmentDate(getEstablishmentDate());
		esfOrganizationImpl.setClosureDate(getClosureDate());
		esfOrganizationImpl.setType(getType());
		esfOrganizationImpl.setInsertDate(getInsertDate());
		esfOrganizationImpl.setConiDate(getConiDate());
		esfOrganizationImpl.setConiCode(getConiCode());
		esfOrganizationImpl.setDescription(getDescription());
		esfOrganizationImpl.setIsYouthActive(getIsYouthActive());
		esfOrganizationImpl.setFirstAffiliationDate(getFirstAffiliationDate());
		esfOrganizationImpl.setVariations(getVariations());
		esfOrganizationImpl.setRegionCode(getRegionCode());
		esfOrganizationImpl.setIdFatherAssociation(getIdFatherAssociation());

		esfOrganizationImpl.resetOriginalValues();

		return esfOrganizationImpl;
	}

	@Override
	public int compareTo(ESFOrganization esfOrganization) {
		long primaryKey = esfOrganization.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFOrganization)) {
			return false;
		}

		ESFOrganization esfOrganization = (ESFOrganization)obj;

		long primaryKey = esfOrganization.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFOrganizationModelImpl esfOrganizationModelImpl = this;

		esfOrganizationModelImpl._originalUuid = esfOrganizationModelImpl._uuid;

		esfOrganizationModelImpl._originalGroupId = esfOrganizationModelImpl._groupId;

		esfOrganizationModelImpl._setOriginalGroupId = false;

		esfOrganizationModelImpl._originalCode = esfOrganizationModelImpl._code;

		esfOrganizationModelImpl._originalVat = esfOrganizationModelImpl._vat;

		esfOrganizationModelImpl._originalFiscalCode = esfOrganizationModelImpl._fiscalCode;

		esfOrganizationModelImpl._originalIsMultiSport = esfOrganizationModelImpl._isMultiSport;

		esfOrganizationModelImpl._setOriginalIsMultiSport = false;

		esfOrganizationModelImpl._originalLegalForm = esfOrganizationModelImpl._legalForm;

		esfOrganizationModelImpl._originalCategory = esfOrganizationModelImpl._category;

		esfOrganizationModelImpl._originalType = esfOrganizationModelImpl._type;

		esfOrganizationModelImpl._setOriginalType = false;

		esfOrganizationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFOrganization> toCacheModel() {
		ESFOrganizationCacheModel esfOrganizationCacheModel = new ESFOrganizationCacheModel();

		esfOrganizationCacheModel.uuid = getUuid();

		String uuid = esfOrganizationCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			esfOrganizationCacheModel.uuid = null;
		}

		esfOrganizationCacheModel.esfOrganizationId = getEsfOrganizationId();

		esfOrganizationCacheModel.groupId = getGroupId();

		esfOrganizationCacheModel.code = getCode();

		String code = esfOrganizationCacheModel.code;

		if ((code != null) && (code.length() == 0)) {
			esfOrganizationCacheModel.code = null;
		}

		esfOrganizationCacheModel.vat = getVat();

		String vat = esfOrganizationCacheModel.vat;

		if ((vat != null) && (vat.length() == 0)) {
			esfOrganizationCacheModel.vat = null;
		}

		esfOrganizationCacheModel.fiscalCode = getFiscalCode();

		String fiscalCode = esfOrganizationCacheModel.fiscalCode;

		if ((fiscalCode != null) && (fiscalCode.length() == 0)) {
			esfOrganizationCacheModel.fiscalCode = null;
		}

		esfOrganizationCacheModel.ibanCode = getIbanCode();

		String ibanCode = esfOrganizationCacheModel.ibanCode;

		if ((ibanCode != null) && (ibanCode.length() == 0)) {
			esfOrganizationCacheModel.ibanCode = null;
		}

		esfOrganizationCacheModel.isMultiSport = getIsMultiSport();

		esfOrganizationCacheModel.legalForm = getLegalForm();

		String legalForm = esfOrganizationCacheModel.legalForm;

		if ((legalForm != null) && (legalForm.length() == 0)) {
			esfOrganizationCacheModel.legalForm = null;
		}

		esfOrganizationCacheModel.category = getCategory();

		String category = esfOrganizationCacheModel.category;

		if ((category != null) && (category.length() == 0)) {
			esfOrganizationCacheModel.category = null;
		}

		Date establishmentDate = getEstablishmentDate();

		if (establishmentDate != null) {
			esfOrganizationCacheModel.establishmentDate = establishmentDate.getTime();
		}
		else {
			esfOrganizationCacheModel.establishmentDate = Long.MIN_VALUE;
		}

		Date closureDate = getClosureDate();

		if (closureDate != null) {
			esfOrganizationCacheModel.closureDate = closureDate.getTime();
		}
		else {
			esfOrganizationCacheModel.closureDate = Long.MIN_VALUE;
		}

		esfOrganizationCacheModel.type = getType();

		Date insertDate = getInsertDate();

		if (insertDate != null) {
			esfOrganizationCacheModel.insertDate = insertDate.getTime();
		}
		else {
			esfOrganizationCacheModel.insertDate = Long.MIN_VALUE;
		}

		Date coniDate = getConiDate();

		if (coniDate != null) {
			esfOrganizationCacheModel.coniDate = coniDate.getTime();
		}
		else {
			esfOrganizationCacheModel.coniDate = Long.MIN_VALUE;
		}

		esfOrganizationCacheModel.coniCode = getConiCode();

		String coniCode = esfOrganizationCacheModel.coniCode;

		if ((coniCode != null) && (coniCode.length() == 0)) {
			esfOrganizationCacheModel.coniCode = null;
		}

		esfOrganizationCacheModel.description = getDescription();

		String description = esfOrganizationCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			esfOrganizationCacheModel.description = null;
		}

		esfOrganizationCacheModel.isYouthActive = getIsYouthActive();

		Date firstAffiliationDate = getFirstAffiliationDate();

		if (firstAffiliationDate != null) {
			esfOrganizationCacheModel.firstAffiliationDate = firstAffiliationDate.getTime();
		}
		else {
			esfOrganizationCacheModel.firstAffiliationDate = Long.MIN_VALUE;
		}

		esfOrganizationCacheModel.variations = getVariations();

		esfOrganizationCacheModel.regionCode = getRegionCode();

		esfOrganizationCacheModel.idFatherAssociation = getIdFatherAssociation();

		return esfOrganizationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", esfOrganizationId=");
		sb.append(getEsfOrganizationId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", code=");
		sb.append(getCode());
		sb.append(", vat=");
		sb.append(getVat());
		sb.append(", fiscalCode=");
		sb.append(getFiscalCode());
		sb.append(", ibanCode=");
		sb.append(getIbanCode());
		sb.append(", isMultiSport=");
		sb.append(getIsMultiSport());
		sb.append(", legalForm=");
		sb.append(getLegalForm());
		sb.append(", category=");
		sb.append(getCategory());
		sb.append(", establishmentDate=");
		sb.append(getEstablishmentDate());
		sb.append(", closureDate=");
		sb.append(getClosureDate());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", insertDate=");
		sb.append(getInsertDate());
		sb.append(", coniDate=");
		sb.append(getConiDate());
		sb.append(", coniCode=");
		sb.append(getConiCode());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", isYouthActive=");
		sb.append(getIsYouthActive());
		sb.append(", firstAffiliationDate=");
		sb.append(getFirstAffiliationDate());
		sb.append(", variations=");
		sb.append(getVariations());
		sb.append(", regionCode=");
		sb.append(getRegionCode());
		sb.append(", idFatherAssociation=");
		sb.append(getIdFatherAssociation());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFOrganization");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfOrganizationId</column-name><column-value><![CDATA[");
		sb.append(getEsfOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>code</column-name><column-value><![CDATA[");
		sb.append(getCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vat</column-name><column-value><![CDATA[");
		sb.append(getVat());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fiscalCode</column-name><column-value><![CDATA[");
		sb.append(getFiscalCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ibanCode</column-name><column-value><![CDATA[");
		sb.append(getIbanCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isMultiSport</column-name><column-value><![CDATA[");
		sb.append(getIsMultiSport());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>legalForm</column-name><column-value><![CDATA[");
		sb.append(getLegalForm());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>category</column-name><column-value><![CDATA[");
		sb.append(getCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>establishmentDate</column-name><column-value><![CDATA[");
		sb.append(getEstablishmentDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>closureDate</column-name><column-value><![CDATA[");
		sb.append(getClosureDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>insertDate</column-name><column-value><![CDATA[");
		sb.append(getInsertDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>coniDate</column-name><column-value><![CDATA[");
		sb.append(getConiDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>coniCode</column-name><column-value><![CDATA[");
		sb.append(getConiCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isYouthActive</column-name><column-value><![CDATA[");
		sb.append(getIsYouthActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstAffiliationDate</column-name><column-value><![CDATA[");
		sb.append(getFirstAffiliationDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>variations</column-name><column-value><![CDATA[");
		sb.append(getVariations());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>regionCode</column-name><column-value><![CDATA[");
		sb.append(getRegionCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idFatherAssociation</column-name><column-value><![CDATA[");
		sb.append(getIdFatherAssociation());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFOrganization.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFOrganization.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _esfOrganizationId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _code;
	private String _originalCode;
	private String _vat;
	private String _originalVat;
	private String _fiscalCode;
	private String _originalFiscalCode;
	private String _ibanCode;
	private boolean _isMultiSport;
	private boolean _originalIsMultiSport;
	private boolean _setOriginalIsMultiSport;
	private String _legalForm;
	private String _originalLegalForm;
	private String _category;
	private String _originalCategory;
	private Date _establishmentDate;
	private Date _closureDate;
	private int _type;
	private int _originalType;
	private boolean _setOriginalType;
	private Date _insertDate;
	private Date _coniDate;
	private String _coniCode;
	private String _description;
	private boolean _isYouthActive;
	private Date _firstAffiliationDate;
	private long _variations;
	private long _regionCode;
	private long _idFatherAssociation;
	private long _columnBitmask;
	private ESFOrganization _escapedModel;
}