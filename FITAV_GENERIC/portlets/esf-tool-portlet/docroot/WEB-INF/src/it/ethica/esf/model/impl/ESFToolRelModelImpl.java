/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import it.ethica.esf.model.ESFToolRel;
import it.ethica.esf.model.ESFToolRelModel;
import it.ethica.esf.service.persistence.ESFToolRelPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFToolRel service. Represents a row in the &quot;ESF_ESFToolRel&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFToolRelModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFToolRelImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFToolRelImpl
 * @see it.ethica.esf.model.ESFToolRel
 * @see it.ethica.esf.model.ESFToolRelModel
 * @generated
 */
public class ESFToolRelModelImpl extends BaseModelImpl<ESFToolRel>
	implements ESFToolRelModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f tool rel model instance should use the {@link it.ethica.esf.model.ESFToolRel} interface instead.
	 */
	public static final String TABLE_NAME = "ESF_ESFToolRel";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "assignmentDate", Types.TIMESTAMP },
			{ "esfToolId", Types.BIGINT },
			{ "className", Types.VARCHAR },
			{ "classPK", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ESF_ESFToolRel (uuid_ VARCHAR(75) null,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,assignmentDate DATE null,esfToolId LONG not null,className VARCHAR(75) not null,classPK LONG not null,primary key (esfToolId, className, classPK))";
	public static final String TABLE_SQL_DROP = "drop table ESF_ESFToolRel";
	public static final String ORDER_BY_JPQL = " ORDER BY esfToolRel.id.esfToolId ASC, esfToolRel.id.className ASC, esfToolRel.id.classPK ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESF_ESFToolRel.esfToolId ASC, ESF_ESFToolRel.className ASC, ESF_ESFToolRel.classPK ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFToolRel"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFToolRel"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFToolRel"),
			true);
	public static long ASSIGNMENTDATE_COLUMN_BITMASK = 1L;
	public static long CLASSNAME_COLUMN_BITMASK = 2L;
	public static long CLASSPK_COLUMN_BITMASK = 4L;
	public static long COMPANYID_COLUMN_BITMASK = 8L;
	public static long ESFTOOLID_COLUMN_BITMASK = 16L;
	public static long GROUPID_COLUMN_BITMASK = 32L;
	public static long UUID_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFToolRel"));

	public ESFToolRelModelImpl() {
	}

	@Override
	public ESFToolRelPK getPrimaryKey() {
		return new ESFToolRelPK(_esfToolId, _className, _classPK);
	}

	@Override
	public void setPrimaryKey(ESFToolRelPK primaryKey) {
		setEsfToolId(primaryKey.esfToolId);
		setClassName(primaryKey.className);
		setClassPK(primaryKey.classPK);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ESFToolRelPK(_esfToolId, _className, _classPK);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ESFToolRelPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ESFToolRel.class;
	}

	@Override
	public String getModelClassName() {
		return ESFToolRel.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("assignmentDate", getAssignmentDate());
		attributes.put("esfToolId", getEsfToolId());
		attributes.put("className", getClassName());
		attributes.put("classPK", getClassPK());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date assignmentDate = (Date)attributes.get("assignmentDate");

		if (assignmentDate != null) {
			setAssignmentDate(assignmentDate);
		}

		Long esfToolId = (Long)attributes.get("esfToolId");

		if (esfToolId != null) {
			setEsfToolId(esfToolId);
		}

		String className = (String)attributes.get("className");

		if (className != null) {
			setClassName(className);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public Date getAssignmentDate() {
		return _assignmentDate;
	}

	@Override
	public void setAssignmentDate(Date assignmentDate) {
		_columnBitmask |= ASSIGNMENTDATE_COLUMN_BITMASK;

		if (_originalAssignmentDate == null) {
			_originalAssignmentDate = _assignmentDate;
		}

		_assignmentDate = assignmentDate;
	}

	public Date getOriginalAssignmentDate() {
		return _originalAssignmentDate;
	}

	@Override
	public long getEsfToolId() {
		return _esfToolId;
	}

	@Override
	public void setEsfToolId(long esfToolId) {
		_columnBitmask |= ESFTOOLID_COLUMN_BITMASK;

		if (!_setOriginalEsfToolId) {
			_setOriginalEsfToolId = true;

			_originalEsfToolId = _esfToolId;
		}

		_esfToolId = esfToolId;
	}

	public long getOriginalEsfToolId() {
		return _originalEsfToolId;
	}

	@Override
	public String getClassName() {
		if (_className == null) {
			return StringPool.BLANK;
		}
		else {
			return _className;
		}
	}

	@Override
	public void setClassName(String className) {
		_columnBitmask |= CLASSNAME_COLUMN_BITMASK;

		if (_originalClassName == null) {
			_originalClassName = _className;
		}

		_className = className;
	}

	public String getOriginalClassName() {
		return GetterUtil.getString(_originalClassName);
	}

	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				ESFToolRel.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ESFToolRel toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFToolRel)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFToolRelImpl esfToolRelImpl = new ESFToolRelImpl();

		esfToolRelImpl.setUuid(getUuid());
		esfToolRelImpl.setGroupId(getGroupId());
		esfToolRelImpl.setCompanyId(getCompanyId());
		esfToolRelImpl.setUserId(getUserId());
		esfToolRelImpl.setUserName(getUserName());
		esfToolRelImpl.setCreateDate(getCreateDate());
		esfToolRelImpl.setModifiedDate(getModifiedDate());
		esfToolRelImpl.setAssignmentDate(getAssignmentDate());
		esfToolRelImpl.setEsfToolId(getEsfToolId());
		esfToolRelImpl.setClassName(getClassName());
		esfToolRelImpl.setClassPK(getClassPK());

		esfToolRelImpl.resetOriginalValues();

		return esfToolRelImpl;
	}

	@Override
	public int compareTo(ESFToolRel esfToolRel) {
		ESFToolRelPK primaryKey = esfToolRel.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFToolRel)) {
			return false;
		}

		ESFToolRel esfToolRel = (ESFToolRel)obj;

		ESFToolRelPK primaryKey = esfToolRel.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public void resetOriginalValues() {
		ESFToolRelModelImpl esfToolRelModelImpl = this;

		esfToolRelModelImpl._originalUuid = esfToolRelModelImpl._uuid;

		esfToolRelModelImpl._originalGroupId = esfToolRelModelImpl._groupId;

		esfToolRelModelImpl._setOriginalGroupId = false;

		esfToolRelModelImpl._originalCompanyId = esfToolRelModelImpl._companyId;

		esfToolRelModelImpl._setOriginalCompanyId = false;

		esfToolRelModelImpl._originalAssignmentDate = esfToolRelModelImpl._assignmentDate;

		esfToolRelModelImpl._originalEsfToolId = esfToolRelModelImpl._esfToolId;

		esfToolRelModelImpl._setOriginalEsfToolId = false;

		esfToolRelModelImpl._originalClassName = esfToolRelModelImpl._className;

		esfToolRelModelImpl._originalClassPK = esfToolRelModelImpl._classPK;

		esfToolRelModelImpl._setOriginalClassPK = false;

		esfToolRelModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFToolRel> toCacheModel() {
		ESFToolRelCacheModel esfToolRelCacheModel = new ESFToolRelCacheModel();

		esfToolRelCacheModel.uuid = getUuid();

		String uuid = esfToolRelCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			esfToolRelCacheModel.uuid = null;
		}

		esfToolRelCacheModel.groupId = getGroupId();

		esfToolRelCacheModel.companyId = getCompanyId();

		esfToolRelCacheModel.userId = getUserId();

		esfToolRelCacheModel.userName = getUserName();

		String userName = esfToolRelCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			esfToolRelCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			esfToolRelCacheModel.createDate = createDate.getTime();
		}
		else {
			esfToolRelCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			esfToolRelCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			esfToolRelCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date assignmentDate = getAssignmentDate();

		if (assignmentDate != null) {
			esfToolRelCacheModel.assignmentDate = assignmentDate.getTime();
		}
		else {
			esfToolRelCacheModel.assignmentDate = Long.MIN_VALUE;
		}

		esfToolRelCacheModel.esfToolId = getEsfToolId();

		esfToolRelCacheModel.className = getClassName();

		String className = esfToolRelCacheModel.className;

		if ((className != null) && (className.length() == 0)) {
			esfToolRelCacheModel.className = null;
		}

		esfToolRelCacheModel.classPK = getClassPK();

		return esfToolRelCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", assignmentDate=");
		sb.append(getAssignmentDate());
		sb.append(", esfToolId=");
		sb.append(getEsfToolId());
		sb.append(", className=");
		sb.append(getClassName());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFToolRel");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assignmentDate</column-name><column-value><![CDATA[");
		sb.append(getAssignmentDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfToolId</column-name><column-value><![CDATA[");
		sb.append(getEsfToolId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>className</column-name><column-value><![CDATA[");
		sb.append(getClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFToolRel.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFToolRel.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private Date _assignmentDate;
	private Date _originalAssignmentDate;
	private long _esfToolId;
	private long _originalEsfToolId;
	private boolean _setOriginalEsfToolId;
	private String _className;
	private String _originalClassName;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private long _columnBitmask;
	private ESFToolRel _escapedModel;
}