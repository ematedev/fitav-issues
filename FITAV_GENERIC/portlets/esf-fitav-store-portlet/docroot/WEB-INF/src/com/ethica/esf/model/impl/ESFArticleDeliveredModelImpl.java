/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ethica.esf.model.impl;

import com.ethica.esf.model.ESFArticleDelivered;
import com.ethica.esf.model.ESFArticleDeliveredModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFArticleDelivered service. Represents a row in the &quot;ESFArticleDelivered&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ethica.esf.model.ESFArticleDeliveredModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFArticleDeliveredImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFArticleDeliveredImpl
 * @see com.ethica.esf.model.ESFArticleDelivered
 * @see com.ethica.esf.model.ESFArticleDeliveredModel
 * @generated
 */
public class ESFArticleDeliveredModelImpl extends BaseModelImpl<ESFArticleDelivered>
	implements ESFArticleDeliveredModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f article delivered model instance should use the {@link com.ethica.esf.model.ESFArticleDelivered} interface instead.
	 */
	public static final String TABLE_NAME = "ESFArticleDelivered";
	public static final Object[][] TABLE_COLUMNS = {
			{ "esfArticleDeliveredId", Types.BIGINT },
			{ "data_", Types.TIMESTAMP },
			{ "description", Types.VARCHAR },
			{ "esfArticleId", Types.BIGINT },
			{ "esfShooterId", Types.BIGINT },
			{ "xxxlQty", Types.BIGINT },
			{ "xxlQty", Types.BIGINT },
			{ "xlQty", Types.BIGINT },
			{ "lQty", Types.BIGINT },
			{ "mQty", Types.BIGINT },
			{ "sQty", Types.BIGINT },
			{ "xsQty", Types.BIGINT },
			{ "xxsQty", Types.BIGINT },
			{ "otherQty", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFArticleDelivered (esfArticleDeliveredId LONG not null primary key,data_ DATE null,description VARCHAR(2000) null,esfArticleId LONG,esfShooterId LONG,xxxlQty LONG,xxlQty LONG,xlQty LONG,lQty LONG,mQty LONG,sQty LONG,xsQty LONG,xxsQty LONG,otherQty LONG)";
	public static final String TABLE_SQL_DROP = "drop table ESFArticleDelivered";
	public static final String ORDER_BY_JPQL = " ORDER BY esfArticleDelivered.esfArticleDeliveredId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFArticleDelivered.esfArticleDeliveredId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ethica.esf.model.ESFArticleDelivered"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ethica.esf.model.ESFArticleDelivered"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ethica.esf.model.ESFArticleDelivered"),
			true);
	public static long ESFARTICLEID_COLUMN_BITMASK = 1L;
	public static long ESFSHOOTERID_COLUMN_BITMASK = 2L;
	public static long ESFARTICLEDELIVEREDID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ethica.esf.model.ESFArticleDelivered"));

	public ESFArticleDeliveredModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfArticleDeliveredId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfArticleDeliveredId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfArticleDeliveredId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFArticleDelivered.class;
	}

	@Override
	public String getModelClassName() {
		return ESFArticleDelivered.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("esfArticleDeliveredId", getEsfArticleDeliveredId());
		attributes.put("data", getData());
		attributes.put("description", getDescription());
		attributes.put("esfArticleId", getEsfArticleId());
		attributes.put("esfShooterId", getEsfShooterId());
		attributes.put("xxxlQty", getXxxlQty());
		attributes.put("xxlQty", getXxlQty());
		attributes.put("xlQty", getXlQty());
		attributes.put("lQty", getLQty());
		attributes.put("mQty", getMQty());
		attributes.put("sQty", getSQty());
		attributes.put("xsQty", getXsQty());
		attributes.put("xxsQty", getXxsQty());
		attributes.put("otherQty", getOtherQty());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long esfArticleDeliveredId = (Long)attributes.get(
				"esfArticleDeliveredId");

		if (esfArticleDeliveredId != null) {
			setEsfArticleDeliveredId(esfArticleDeliveredId);
		}

		Date data = (Date)attributes.get("data");

		if (data != null) {
			setData(data);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Long esfArticleId = (Long)attributes.get("esfArticleId");

		if (esfArticleId != null) {
			setEsfArticleId(esfArticleId);
		}

		Long esfShooterId = (Long)attributes.get("esfShooterId");

		if (esfShooterId != null) {
			setEsfShooterId(esfShooterId);
		}

		Long xxxlQty = (Long)attributes.get("xxxlQty");

		if (xxxlQty != null) {
			setXxxlQty(xxxlQty);
		}

		Long xxlQty = (Long)attributes.get("xxlQty");

		if (xxlQty != null) {
			setXxlQty(xxlQty);
		}

		Long xlQty = (Long)attributes.get("xlQty");

		if (xlQty != null) {
			setXlQty(xlQty);
		}

		Long lQty = (Long)attributes.get("lQty");

		if (lQty != null) {
			setLQty(lQty);
		}

		Long mQty = (Long)attributes.get("mQty");

		if (mQty != null) {
			setMQty(mQty);
		}

		Long sQty = (Long)attributes.get("sQty");

		if (sQty != null) {
			setSQty(sQty);
		}

		Long xsQty = (Long)attributes.get("xsQty");

		if (xsQty != null) {
			setXsQty(xsQty);
		}

		Long xxsQty = (Long)attributes.get("xxsQty");

		if (xxsQty != null) {
			setXxsQty(xxsQty);
		}

		Long otherQty = (Long)attributes.get("otherQty");

		if (otherQty != null) {
			setOtherQty(otherQty);
		}
	}

	@Override
	public long getEsfArticleDeliveredId() {
		return _esfArticleDeliveredId;
	}

	@Override
	public void setEsfArticleDeliveredId(long esfArticleDeliveredId) {
		_esfArticleDeliveredId = esfArticleDeliveredId;
	}

	@Override
	public Date getData() {
		return _data;
	}

	@Override
	public void setData(Date data) {
		_data = data;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public long getEsfArticleId() {
		return _esfArticleId;
	}

	@Override
	public void setEsfArticleId(long esfArticleId) {
		_columnBitmask |= ESFARTICLEID_COLUMN_BITMASK;

		if (!_setOriginalEsfArticleId) {
			_setOriginalEsfArticleId = true;

			_originalEsfArticleId = _esfArticleId;
		}

		_esfArticleId = esfArticleId;
	}

	public long getOriginalEsfArticleId() {
		return _originalEsfArticleId;
	}

	@Override
	public long getEsfShooterId() {
		return _esfShooterId;
	}

	@Override
	public void setEsfShooterId(long esfShooterId) {
		_columnBitmask |= ESFSHOOTERID_COLUMN_BITMASK;

		if (!_setOriginalEsfShooterId) {
			_setOriginalEsfShooterId = true;

			_originalEsfShooterId = _esfShooterId;
		}

		_esfShooterId = esfShooterId;
	}

	public long getOriginalEsfShooterId() {
		return _originalEsfShooterId;
	}

	@Override
	public long getXxxlQty() {
		return _xxxlQty;
	}

	@Override
	public void setXxxlQty(long xxxlQty) {
		_xxxlQty = xxxlQty;
	}

	@Override
	public long getXxlQty() {
		return _xxlQty;
	}

	@Override
	public void setXxlQty(long xxlQty) {
		_xxlQty = xxlQty;
	}

	@Override
	public long getXlQty() {
		return _xlQty;
	}

	@Override
	public void setXlQty(long xlQty) {
		_xlQty = xlQty;
	}

	@Override
	public long getLQty() {
		return _lQty;
	}

	@Override
	public void setLQty(long lQty) {
		_lQty = lQty;
	}

	@Override
	public long getMQty() {
		return _mQty;
	}

	@Override
	public void setMQty(long mQty) {
		_mQty = mQty;
	}

	@Override
	public long getSQty() {
		return _sQty;
	}

	@Override
	public void setSQty(long sQty) {
		_sQty = sQty;
	}

	@Override
	public long getXsQty() {
		return _xsQty;
	}

	@Override
	public void setXsQty(long xsQty) {
		_xsQty = xsQty;
	}

	@Override
	public long getXxsQty() {
		return _xxsQty;
	}

	@Override
	public void setXxsQty(long xxsQty) {
		_xxsQty = xxsQty;
	}

	@Override
	public long getOtherQty() {
		return _otherQty;
	}

	@Override
	public void setOtherQty(long otherQty) {
		_otherQty = otherQty;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ESFArticleDelivered.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFArticleDelivered toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFArticleDelivered)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFArticleDeliveredImpl esfArticleDeliveredImpl = new ESFArticleDeliveredImpl();

		esfArticleDeliveredImpl.setEsfArticleDeliveredId(getEsfArticleDeliveredId());
		esfArticleDeliveredImpl.setData(getData());
		esfArticleDeliveredImpl.setDescription(getDescription());
		esfArticleDeliveredImpl.setEsfArticleId(getEsfArticleId());
		esfArticleDeliveredImpl.setEsfShooterId(getEsfShooterId());
		esfArticleDeliveredImpl.setXxxlQty(getXxxlQty());
		esfArticleDeliveredImpl.setXxlQty(getXxlQty());
		esfArticleDeliveredImpl.setXlQty(getXlQty());
		esfArticleDeliveredImpl.setLQty(getLQty());
		esfArticleDeliveredImpl.setMQty(getMQty());
		esfArticleDeliveredImpl.setSQty(getSQty());
		esfArticleDeliveredImpl.setXsQty(getXsQty());
		esfArticleDeliveredImpl.setXxsQty(getXxsQty());
		esfArticleDeliveredImpl.setOtherQty(getOtherQty());

		esfArticleDeliveredImpl.resetOriginalValues();

		return esfArticleDeliveredImpl;
	}

	@Override
	public int compareTo(ESFArticleDelivered esfArticleDelivered) {
		long primaryKey = esfArticleDelivered.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFArticleDelivered)) {
			return false;
		}

		ESFArticleDelivered esfArticleDelivered = (ESFArticleDelivered)obj;

		long primaryKey = esfArticleDelivered.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFArticleDeliveredModelImpl esfArticleDeliveredModelImpl = this;

		esfArticleDeliveredModelImpl._originalEsfArticleId = esfArticleDeliveredModelImpl._esfArticleId;

		esfArticleDeliveredModelImpl._setOriginalEsfArticleId = false;

		esfArticleDeliveredModelImpl._originalEsfShooterId = esfArticleDeliveredModelImpl._esfShooterId;

		esfArticleDeliveredModelImpl._setOriginalEsfShooterId = false;

		esfArticleDeliveredModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFArticleDelivered> toCacheModel() {
		ESFArticleDeliveredCacheModel esfArticleDeliveredCacheModel = new ESFArticleDeliveredCacheModel();

		esfArticleDeliveredCacheModel.esfArticleDeliveredId = getEsfArticleDeliveredId();

		Date data = getData();

		if (data != null) {
			esfArticleDeliveredCacheModel.data = data.getTime();
		}
		else {
			esfArticleDeliveredCacheModel.data = Long.MIN_VALUE;
		}

		esfArticleDeliveredCacheModel.description = getDescription();

		String description = esfArticleDeliveredCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			esfArticleDeliveredCacheModel.description = null;
		}

		esfArticleDeliveredCacheModel.esfArticleId = getEsfArticleId();

		esfArticleDeliveredCacheModel.esfShooterId = getEsfShooterId();

		esfArticleDeliveredCacheModel.xxxlQty = getXxxlQty();

		esfArticleDeliveredCacheModel.xxlQty = getXxlQty();

		esfArticleDeliveredCacheModel.xlQty = getXlQty();

		esfArticleDeliveredCacheModel.lQty = getLQty();

		esfArticleDeliveredCacheModel.mQty = getMQty();

		esfArticleDeliveredCacheModel.sQty = getSQty();

		esfArticleDeliveredCacheModel.xsQty = getXsQty();

		esfArticleDeliveredCacheModel.xxsQty = getXxsQty();

		esfArticleDeliveredCacheModel.otherQty = getOtherQty();

		return esfArticleDeliveredCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{esfArticleDeliveredId=");
		sb.append(getEsfArticleDeliveredId());
		sb.append(", data=");
		sb.append(getData());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", esfArticleId=");
		sb.append(getEsfArticleId());
		sb.append(", esfShooterId=");
		sb.append(getEsfShooterId());
		sb.append(", xxxlQty=");
		sb.append(getXxxlQty());
		sb.append(", xxlQty=");
		sb.append(getXxlQty());
		sb.append(", xlQty=");
		sb.append(getXlQty());
		sb.append(", lQty=");
		sb.append(getLQty());
		sb.append(", mQty=");
		sb.append(getMQty());
		sb.append(", sQty=");
		sb.append(getSQty());
		sb.append(", xsQty=");
		sb.append(getXsQty());
		sb.append(", xxsQty=");
		sb.append(getXxsQty());
		sb.append(", otherQty=");
		sb.append(getOtherQty());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.ethica.esf.model.ESFArticleDelivered");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>esfArticleDeliveredId</column-name><column-value><![CDATA[");
		sb.append(getEsfArticleDeliveredId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>data</column-name><column-value><![CDATA[");
		sb.append(getData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfArticleId</column-name><column-value><![CDATA[");
		sb.append(getEsfArticleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfShooterId</column-name><column-value><![CDATA[");
		sb.append(getEsfShooterId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xxxlQty</column-name><column-value><![CDATA[");
		sb.append(getXxxlQty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xxlQty</column-name><column-value><![CDATA[");
		sb.append(getXxlQty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xlQty</column-name><column-value><![CDATA[");
		sb.append(getXlQty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lQty</column-name><column-value><![CDATA[");
		sb.append(getLQty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mQty</column-name><column-value><![CDATA[");
		sb.append(getMQty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sQty</column-name><column-value><![CDATA[");
		sb.append(getSQty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xsQty</column-name><column-value><![CDATA[");
		sb.append(getXsQty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xxsQty</column-name><column-value><![CDATA[");
		sb.append(getXxsQty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>otherQty</column-name><column-value><![CDATA[");
		sb.append(getOtherQty());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFArticleDelivered.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFArticleDelivered.class
		};
	private long _esfArticleDeliveredId;
	private Date _data;
	private String _description;
	private long _esfArticleId;
	private long _originalEsfArticleId;
	private boolean _setOriginalEsfArticleId;
	private long _esfShooterId;
	private long _originalEsfShooterId;
	private boolean _setOriginalEsfShooterId;
	private long _xxxlQty;
	private long _xxlQty;
	private long _xlQty;
	private long _lQty;
	private long _mQty;
	private long _sQty;
	private long _xsQty;
	private long _xxsQty;
	private long _otherQty;
	private long _columnBitmask;
	private ESFArticleDelivered _escapedModel;
}