/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ethica.esf.model.impl;

import com.ethica.esf.model.ESFStockist;
import com.ethica.esf.model.ESFStockistModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFStockist service. Represents a row in the &quot;ESFStockist&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ethica.esf.model.ESFStockistModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFStockistImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFStockistImpl
 * @see com.ethica.esf.model.ESFStockist
 * @see com.ethica.esf.model.ESFStockistModel
 * @generated
 */
public class ESFStockistModelImpl extends BaseModelImpl<ESFStockist>
	implements ESFStockistModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f stockist model instance should use the {@link com.ethica.esf.model.ESFStockist} interface instead.
	 */
	public static final String TABLE_NAME = "ESFStockist";
	public static final Object[][] TABLE_COLUMNS = {
			{ "esfStockistId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "phone", Types.VARCHAR },
			{ "address", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "other", Types.VARCHAR },
			{ "nameReference", Types.VARCHAR },
			{ "lastNameReference", Types.VARCHAR },
			{ "emailReference", Types.VARCHAR },
			{ "phoneReference", Types.VARCHAR },
			{ "vatNumber", Types.VARCHAR },
			{ "iban", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFStockist (esfStockistId LONG not null primary key,name VARCHAR(75) null,email VARCHAR(75) null,phone VARCHAR(75) null,address VARCHAR(75) null,description VARCHAR(75) null,other VARCHAR(75) null,nameReference VARCHAR(75) null,lastNameReference VARCHAR(75) null,emailReference VARCHAR(75) null,phoneReference VARCHAR(75) null,vatNumber VARCHAR(75) null,iban VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ESFStockist";
	public static final String ORDER_BY_JPQL = " ORDER BY esfStockist.esfStockistId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFStockist.esfStockistId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ethica.esf.model.ESFStockist"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ethica.esf.model.ESFStockist"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ethica.esf.model.ESFStockist"),
			true);
	public static long DESCRIPTION_COLUMN_BITMASK = 1L;
	public static long EMAIL_COLUMN_BITMASK = 2L;
	public static long NAME_COLUMN_BITMASK = 4L;
	public static long ESFSTOCKISTID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ethica.esf.model.ESFStockist"));

	public ESFStockistModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfStockistId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfStockistId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfStockistId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFStockist.class;
	}

	@Override
	public String getModelClassName() {
		return ESFStockist.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("esfStockistId", getEsfStockistId());
		attributes.put("name", getName());
		attributes.put("email", getEmail());
		attributes.put("phone", getPhone());
		attributes.put("address", getAddress());
		attributes.put("description", getDescription());
		attributes.put("other", getOther());
		attributes.put("nameReference", getNameReference());
		attributes.put("lastNameReference", getLastNameReference());
		attributes.put("emailReference", getEmailReference());
		attributes.put("phoneReference", getPhoneReference());
		attributes.put("vatNumber", getVatNumber());
		attributes.put("iban", getIban());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long esfStockistId = (Long)attributes.get("esfStockistId");

		if (esfStockistId != null) {
			setEsfStockistId(esfStockistId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String phone = (String)attributes.get("phone");

		if (phone != null) {
			setPhone(phone);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String other = (String)attributes.get("other");

		if (other != null) {
			setOther(other);
		}

		String nameReference = (String)attributes.get("nameReference");

		if (nameReference != null) {
			setNameReference(nameReference);
		}

		String lastNameReference = (String)attributes.get("lastNameReference");

		if (lastNameReference != null) {
			setLastNameReference(lastNameReference);
		}

		String emailReference = (String)attributes.get("emailReference");

		if (emailReference != null) {
			setEmailReference(emailReference);
		}

		String phoneReference = (String)attributes.get("phoneReference");

		if (phoneReference != null) {
			setPhoneReference(phoneReference);
		}

		String vatNumber = (String)attributes.get("vatNumber");

		if (vatNumber != null) {
			setVatNumber(vatNumber);
		}

		String iban = (String)attributes.get("iban");

		if (iban != null) {
			setIban(iban);
		}
	}

	@Override
	public long getEsfStockistId() {
		return _esfStockistId;
	}

	@Override
	public void setEsfStockistId(long esfStockistId) {
		_esfStockistId = esfStockistId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_columnBitmask |= EMAIL_COLUMN_BITMASK;

		if (_originalEmail == null) {
			_originalEmail = _email;
		}

		_email = email;
	}

	public String getOriginalEmail() {
		return GetterUtil.getString(_originalEmail);
	}

	@Override
	public String getPhone() {
		if (_phone == null) {
			return StringPool.BLANK;
		}
		else {
			return _phone;
		}
	}

	@Override
	public void setPhone(String phone) {
		_phone = phone;
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_columnBitmask |= DESCRIPTION_COLUMN_BITMASK;

		if (_originalDescription == null) {
			_originalDescription = _description;
		}

		_description = description;
	}

	public String getOriginalDescription() {
		return GetterUtil.getString(_originalDescription);
	}

	@Override
	public String getOther() {
		if (_other == null) {
			return StringPool.BLANK;
		}
		else {
			return _other;
		}
	}

	@Override
	public void setOther(String other) {
		_other = other;
	}

	@Override
	public String getNameReference() {
		if (_nameReference == null) {
			return StringPool.BLANK;
		}
		else {
			return _nameReference;
		}
	}

	@Override
	public void setNameReference(String nameReference) {
		_nameReference = nameReference;
	}

	@Override
	public String getLastNameReference() {
		if (_lastNameReference == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastNameReference;
		}
	}

	@Override
	public void setLastNameReference(String lastNameReference) {
		_lastNameReference = lastNameReference;
	}

	@Override
	public String getEmailReference() {
		if (_emailReference == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailReference;
		}
	}

	@Override
	public void setEmailReference(String emailReference) {
		_emailReference = emailReference;
	}

	@Override
	public String getPhoneReference() {
		if (_phoneReference == null) {
			return StringPool.BLANK;
		}
		else {
			return _phoneReference;
		}
	}

	@Override
	public void setPhoneReference(String phoneReference) {
		_phoneReference = phoneReference;
	}

	@Override
	public String getVatNumber() {
		if (_vatNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _vatNumber;
		}
	}

	@Override
	public void setVatNumber(String vatNumber) {
		_vatNumber = vatNumber;
	}

	@Override
	public String getIban() {
		if (_iban == null) {
			return StringPool.BLANK;
		}
		else {
			return _iban;
		}
	}

	@Override
	public void setIban(String iban) {
		_iban = iban;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ESFStockist.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFStockist toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFStockist)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFStockistImpl esfStockistImpl = new ESFStockistImpl();

		esfStockistImpl.setEsfStockistId(getEsfStockistId());
		esfStockistImpl.setName(getName());
		esfStockistImpl.setEmail(getEmail());
		esfStockistImpl.setPhone(getPhone());
		esfStockistImpl.setAddress(getAddress());
		esfStockistImpl.setDescription(getDescription());
		esfStockistImpl.setOther(getOther());
		esfStockistImpl.setNameReference(getNameReference());
		esfStockistImpl.setLastNameReference(getLastNameReference());
		esfStockistImpl.setEmailReference(getEmailReference());
		esfStockistImpl.setPhoneReference(getPhoneReference());
		esfStockistImpl.setVatNumber(getVatNumber());
		esfStockistImpl.setIban(getIban());

		esfStockistImpl.resetOriginalValues();

		return esfStockistImpl;
	}

	@Override
	public int compareTo(ESFStockist esfStockist) {
		long primaryKey = esfStockist.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFStockist)) {
			return false;
		}

		ESFStockist esfStockist = (ESFStockist)obj;

		long primaryKey = esfStockist.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFStockistModelImpl esfStockistModelImpl = this;

		esfStockistModelImpl._originalName = esfStockistModelImpl._name;

		esfStockistModelImpl._originalEmail = esfStockistModelImpl._email;

		esfStockistModelImpl._originalDescription = esfStockistModelImpl._description;

		esfStockistModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFStockist> toCacheModel() {
		ESFStockistCacheModel esfStockistCacheModel = new ESFStockistCacheModel();

		esfStockistCacheModel.esfStockistId = getEsfStockistId();

		esfStockistCacheModel.name = getName();

		String name = esfStockistCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			esfStockistCacheModel.name = null;
		}

		esfStockistCacheModel.email = getEmail();

		String email = esfStockistCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			esfStockistCacheModel.email = null;
		}

		esfStockistCacheModel.phone = getPhone();

		String phone = esfStockistCacheModel.phone;

		if ((phone != null) && (phone.length() == 0)) {
			esfStockistCacheModel.phone = null;
		}

		esfStockistCacheModel.address = getAddress();

		String address = esfStockistCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			esfStockistCacheModel.address = null;
		}

		esfStockistCacheModel.description = getDescription();

		String description = esfStockistCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			esfStockistCacheModel.description = null;
		}

		esfStockistCacheModel.other = getOther();

		String other = esfStockistCacheModel.other;

		if ((other != null) && (other.length() == 0)) {
			esfStockistCacheModel.other = null;
		}

		esfStockistCacheModel.nameReference = getNameReference();

		String nameReference = esfStockistCacheModel.nameReference;

		if ((nameReference != null) && (nameReference.length() == 0)) {
			esfStockistCacheModel.nameReference = null;
		}

		esfStockistCacheModel.lastNameReference = getLastNameReference();

		String lastNameReference = esfStockistCacheModel.lastNameReference;

		if ((lastNameReference != null) && (lastNameReference.length() == 0)) {
			esfStockistCacheModel.lastNameReference = null;
		}

		esfStockistCacheModel.emailReference = getEmailReference();

		String emailReference = esfStockistCacheModel.emailReference;

		if ((emailReference != null) && (emailReference.length() == 0)) {
			esfStockistCacheModel.emailReference = null;
		}

		esfStockistCacheModel.phoneReference = getPhoneReference();

		String phoneReference = esfStockistCacheModel.phoneReference;

		if ((phoneReference != null) && (phoneReference.length() == 0)) {
			esfStockistCacheModel.phoneReference = null;
		}

		esfStockistCacheModel.vatNumber = getVatNumber();

		String vatNumber = esfStockistCacheModel.vatNumber;

		if ((vatNumber != null) && (vatNumber.length() == 0)) {
			esfStockistCacheModel.vatNumber = null;
		}

		esfStockistCacheModel.iban = getIban();

		String iban = esfStockistCacheModel.iban;

		if ((iban != null) && (iban.length() == 0)) {
			esfStockistCacheModel.iban = null;
		}

		return esfStockistCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{esfStockistId=");
		sb.append(getEsfStockistId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", phone=");
		sb.append(getPhone());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", other=");
		sb.append(getOther());
		sb.append(", nameReference=");
		sb.append(getNameReference());
		sb.append(", lastNameReference=");
		sb.append(getLastNameReference());
		sb.append(", emailReference=");
		sb.append(getEmailReference());
		sb.append(", phoneReference=");
		sb.append(getPhoneReference());
		sb.append(", vatNumber=");
		sb.append(getVatNumber());
		sb.append(", iban=");
		sb.append(getIban());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.ethica.esf.model.ESFStockist");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>esfStockistId</column-name><column-value><![CDATA[");
		sb.append(getEsfStockistId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phone</column-name><column-value><![CDATA[");
		sb.append(getPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>other</column-name><column-value><![CDATA[");
		sb.append(getOther());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nameReference</column-name><column-value><![CDATA[");
		sb.append(getNameReference());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastNameReference</column-name><column-value><![CDATA[");
		sb.append(getLastNameReference());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailReference</column-name><column-value><![CDATA[");
		sb.append(getEmailReference());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phoneReference</column-name><column-value><![CDATA[");
		sb.append(getPhoneReference());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vatNumber</column-name><column-value><![CDATA[");
		sb.append(getVatNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>iban</column-name><column-value><![CDATA[");
		sb.append(getIban());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFStockist.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFStockist.class
		};
	private long _esfStockistId;
	private String _name;
	private String _originalName;
	private String _email;
	private String _originalEmail;
	private String _phone;
	private String _address;
	private String _description;
	private String _originalDescription;
	private String _other;
	private String _nameReference;
	private String _lastNameReference;
	private String _emailReference;
	private String _phoneReference;
	private String _vatNumber;
	private String _iban;
	private long _columnBitmask;
	private ESFStockist _escapedModel;
}