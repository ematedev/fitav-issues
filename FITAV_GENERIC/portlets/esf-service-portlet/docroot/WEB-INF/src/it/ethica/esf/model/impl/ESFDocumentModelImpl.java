/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFDocument;
import it.ethica.esf.model.ESFDocumentModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFDocument service. Represents a row in the &quot;ESFDocument&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFDocumentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFDocumentImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFDocumentImpl
 * @see it.ethica.esf.model.ESFDocument
 * @see it.ethica.esf.model.ESFDocumentModel
 * @generated
 */
public class ESFDocumentModelImpl extends BaseModelImpl<ESFDocument>
	implements ESFDocumentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f document model instance should use the {@link it.ethica.esf.model.ESFDocument} interface instead.
	 */
	public static final String TABLE_NAME = "ESFDocument";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "esfDocumentId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "ownerId", Types.BIGINT },
			{ "ownerType", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "number_", Types.BIGINT },
			{ "releaseDate", Types.TIMESTAMP },
			{ "expireDate", Types.TIMESTAMP },
			{ "issuer", Types.VARCHAR },
			{ "contents", Types.VARCHAR },
			{ "locationReference", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFDocument (uuid_ VARCHAR(75) null,esfDocumentId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,ownerId LONG,ownerType VARCHAR(75) null,name VARCHAR(75) null,number_ LONG,releaseDate DATE null,expireDate DATE null,issuer VARCHAR(75) null,contents VARCHAR(75) null,locationReference VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ESFDocument";
	public static final String ORDER_BY_JPQL = " ORDER BY esfDocument.releaseDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFDocument.releaseDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFDocument"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFDocument"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFDocument"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long ISSUER_COLUMN_BITMASK = 4L;
	public static long LOCATIONREFERENCE_COLUMN_BITMASK = 8L;
	public static long NAME_COLUMN_BITMASK = 16L;
	public static long NUMBER_COLUMN_BITMASK = 32L;
	public static long OWNERID_COLUMN_BITMASK = 64L;
	public static long OWNERTYPE_COLUMN_BITMASK = 128L;
	public static long UUID_COLUMN_BITMASK = 256L;
	public static long RELEASEDATE_COLUMN_BITMASK = 512L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFDocument"));

	public ESFDocumentModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfDocumentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfDocumentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfDocumentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFDocument.class;
	}

	@Override
	public String getModelClassName() {
		return ESFDocument.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("esfDocumentId", getEsfDocumentId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ownerId", getOwnerId());
		attributes.put("ownerType", getOwnerType());
		attributes.put("name", getName());
		attributes.put("number", getNumber());
		attributes.put("releaseDate", getReleaseDate());
		attributes.put("expireDate", getExpireDate());
		attributes.put("issuer", getIssuer());
		attributes.put("contents", getContents());
		attributes.put("locationReference", getLocationReference());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long esfDocumentId = (Long)attributes.get("esfDocumentId");

		if (esfDocumentId != null) {
			setEsfDocumentId(esfDocumentId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long ownerId = (Long)attributes.get("ownerId");

		if (ownerId != null) {
			setOwnerId(ownerId);
		}

		String ownerType = (String)attributes.get("ownerType");

		if (ownerType != null) {
			setOwnerType(ownerType);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Long number = (Long)attributes.get("number");

		if (number != null) {
			setNumber(number);
		}

		Date releaseDate = (Date)attributes.get("releaseDate");

		if (releaseDate != null) {
			setReleaseDate(releaseDate);
		}

		Date expireDate = (Date)attributes.get("expireDate");

		if (expireDate != null) {
			setExpireDate(expireDate);
		}

		String issuer = (String)attributes.get("issuer");

		if (issuer != null) {
			setIssuer(issuer);
		}

		String contents = (String)attributes.get("contents");

		if (contents != null) {
			setContents(contents);
		}

		String locationReference = (String)attributes.get("locationReference");

		if (locationReference != null) {
			setLocationReference(locationReference);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getEsfDocumentId() {
		return _esfDocumentId;
	}

	@Override
	public void setEsfDocumentId(long esfDocumentId) {
		_esfDocumentId = esfDocumentId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getOwnerId() {
		return _ownerId;
	}

	@Override
	public void setOwnerId(long ownerId) {
		_columnBitmask |= OWNERID_COLUMN_BITMASK;

		if (!_setOriginalOwnerId) {
			_setOriginalOwnerId = true;

			_originalOwnerId = _ownerId;
		}

		_ownerId = ownerId;
	}

	public long getOriginalOwnerId() {
		return _originalOwnerId;
	}

	@Override
	public String getOwnerType() {
		if (_ownerType == null) {
			return StringPool.BLANK;
		}
		else {
			return _ownerType;
		}
	}

	@Override
	public void setOwnerType(String ownerType) {
		_columnBitmask |= OWNERTYPE_COLUMN_BITMASK;

		if (_originalOwnerType == null) {
			_originalOwnerType = _ownerType;
		}

		_ownerType = ownerType;
	}

	public String getOriginalOwnerType() {
		return GetterUtil.getString(_originalOwnerType);
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@Override
	public long getNumber() {
		return _number;
	}

	@Override
	public void setNumber(long number) {
		_columnBitmask |= NUMBER_COLUMN_BITMASK;

		if (!_setOriginalNumber) {
			_setOriginalNumber = true;

			_originalNumber = _number;
		}

		_number = number;
	}

	public long getOriginalNumber() {
		return _originalNumber;
	}

	@Override
	public Date getReleaseDate() {
		return _releaseDate;
	}

	@Override
	public void setReleaseDate(Date releaseDate) {
		_columnBitmask = -1L;

		_releaseDate = releaseDate;
	}

	@Override
	public Date getExpireDate() {
		return _expireDate;
	}

	@Override
	public void setExpireDate(Date expireDate) {
		_expireDate = expireDate;
	}

	@Override
	public String getIssuer() {
		if (_issuer == null) {
			return StringPool.BLANK;
		}
		else {
			return _issuer;
		}
	}

	@Override
	public void setIssuer(String issuer) {
		_columnBitmask |= ISSUER_COLUMN_BITMASK;

		if (_originalIssuer == null) {
			_originalIssuer = _issuer;
		}

		_issuer = issuer;
	}

	public String getOriginalIssuer() {
		return GetterUtil.getString(_originalIssuer);
	}

	@Override
	public String getContents() {
		if (_contents == null) {
			return StringPool.BLANK;
		}
		else {
			return _contents;
		}
	}

	@Override
	public void setContents(String contents) {
		_contents = contents;
	}

	@Override
	public String getLocationReference() {
		if (_locationReference == null) {
			return StringPool.BLANK;
		}
		else {
			return _locationReference;
		}
	}

	@Override
	public void setLocationReference(String locationReference) {
		_columnBitmask |= LOCATIONREFERENCE_COLUMN_BITMASK;

		if (_originalLocationReference == null) {
			_originalLocationReference = _locationReference;
		}

		_locationReference = locationReference;
	}

	public String getOriginalLocationReference() {
		return GetterUtil.getString(_originalLocationReference);
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				ESFDocument.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ESFDocument.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFDocument toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFDocument)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFDocumentImpl esfDocumentImpl = new ESFDocumentImpl();

		esfDocumentImpl.setUuid(getUuid());
		esfDocumentImpl.setEsfDocumentId(getEsfDocumentId());
		esfDocumentImpl.setGroupId(getGroupId());
		esfDocumentImpl.setCompanyId(getCompanyId());
		esfDocumentImpl.setUserId(getUserId());
		esfDocumentImpl.setUserName(getUserName());
		esfDocumentImpl.setCreateDate(getCreateDate());
		esfDocumentImpl.setModifiedDate(getModifiedDate());
		esfDocumentImpl.setOwnerId(getOwnerId());
		esfDocumentImpl.setOwnerType(getOwnerType());
		esfDocumentImpl.setName(getName());
		esfDocumentImpl.setNumber(getNumber());
		esfDocumentImpl.setReleaseDate(getReleaseDate());
		esfDocumentImpl.setExpireDate(getExpireDate());
		esfDocumentImpl.setIssuer(getIssuer());
		esfDocumentImpl.setContents(getContents());
		esfDocumentImpl.setLocationReference(getLocationReference());

		esfDocumentImpl.resetOriginalValues();

		return esfDocumentImpl;
	}

	@Override
	public int compareTo(ESFDocument esfDocument) {
		int value = 0;

		value = DateUtil.compareTo(getReleaseDate(),
				esfDocument.getReleaseDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFDocument)) {
			return false;
		}

		ESFDocument esfDocument = (ESFDocument)obj;

		long primaryKey = esfDocument.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFDocumentModelImpl esfDocumentModelImpl = this;

		esfDocumentModelImpl._originalUuid = esfDocumentModelImpl._uuid;

		esfDocumentModelImpl._originalGroupId = esfDocumentModelImpl._groupId;

		esfDocumentModelImpl._setOriginalGroupId = false;

		esfDocumentModelImpl._originalCompanyId = esfDocumentModelImpl._companyId;

		esfDocumentModelImpl._setOriginalCompanyId = false;

		esfDocumentModelImpl._originalOwnerId = esfDocumentModelImpl._ownerId;

		esfDocumentModelImpl._setOriginalOwnerId = false;

		esfDocumentModelImpl._originalOwnerType = esfDocumentModelImpl._ownerType;

		esfDocumentModelImpl._originalName = esfDocumentModelImpl._name;

		esfDocumentModelImpl._originalNumber = esfDocumentModelImpl._number;

		esfDocumentModelImpl._setOriginalNumber = false;

		esfDocumentModelImpl._originalIssuer = esfDocumentModelImpl._issuer;

		esfDocumentModelImpl._originalLocationReference = esfDocumentModelImpl._locationReference;

		esfDocumentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFDocument> toCacheModel() {
		ESFDocumentCacheModel esfDocumentCacheModel = new ESFDocumentCacheModel();

		esfDocumentCacheModel.uuid = getUuid();

		String uuid = esfDocumentCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			esfDocumentCacheModel.uuid = null;
		}

		esfDocumentCacheModel.esfDocumentId = getEsfDocumentId();

		esfDocumentCacheModel.groupId = getGroupId();

		esfDocumentCacheModel.companyId = getCompanyId();

		esfDocumentCacheModel.userId = getUserId();

		esfDocumentCacheModel.userName = getUserName();

		String userName = esfDocumentCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			esfDocumentCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			esfDocumentCacheModel.createDate = createDate.getTime();
		}
		else {
			esfDocumentCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			esfDocumentCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			esfDocumentCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		esfDocumentCacheModel.ownerId = getOwnerId();

		esfDocumentCacheModel.ownerType = getOwnerType();

		String ownerType = esfDocumentCacheModel.ownerType;

		if ((ownerType != null) && (ownerType.length() == 0)) {
			esfDocumentCacheModel.ownerType = null;
		}

		esfDocumentCacheModel.name = getName();

		String name = esfDocumentCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			esfDocumentCacheModel.name = null;
		}

		esfDocumentCacheModel.number = getNumber();

		Date releaseDate = getReleaseDate();

		if (releaseDate != null) {
			esfDocumentCacheModel.releaseDate = releaseDate.getTime();
		}
		else {
			esfDocumentCacheModel.releaseDate = Long.MIN_VALUE;
		}

		Date expireDate = getExpireDate();

		if (expireDate != null) {
			esfDocumentCacheModel.expireDate = expireDate.getTime();
		}
		else {
			esfDocumentCacheModel.expireDate = Long.MIN_VALUE;
		}

		esfDocumentCacheModel.issuer = getIssuer();

		String issuer = esfDocumentCacheModel.issuer;

		if ((issuer != null) && (issuer.length() == 0)) {
			esfDocumentCacheModel.issuer = null;
		}

		esfDocumentCacheModel.contents = getContents();

		String contents = esfDocumentCacheModel.contents;

		if ((contents != null) && (contents.length() == 0)) {
			esfDocumentCacheModel.contents = null;
		}

		esfDocumentCacheModel.locationReference = getLocationReference();

		String locationReference = esfDocumentCacheModel.locationReference;

		if ((locationReference != null) && (locationReference.length() == 0)) {
			esfDocumentCacheModel.locationReference = null;
		}

		return esfDocumentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", esfDocumentId=");
		sb.append(getEsfDocumentId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ownerId=");
		sb.append(getOwnerId());
		sb.append(", ownerType=");
		sb.append(getOwnerType());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", number=");
		sb.append(getNumber());
		sb.append(", releaseDate=");
		sb.append(getReleaseDate());
		sb.append(", expireDate=");
		sb.append(getExpireDate());
		sb.append(", issuer=");
		sb.append(getIssuer());
		sb.append(", contents=");
		sb.append(getContents());
		sb.append(", locationReference=");
		sb.append(getLocationReference());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFDocument");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esfDocumentId</column-name><column-value><![CDATA[");
		sb.append(getEsfDocumentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ownerId</column-name><column-value><![CDATA[");
		sb.append(getOwnerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ownerType</column-name><column-value><![CDATA[");
		sb.append(getOwnerType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>number</column-name><column-value><![CDATA[");
		sb.append(getNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>releaseDate</column-name><column-value><![CDATA[");
		sb.append(getReleaseDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expireDate</column-name><column-value><![CDATA[");
		sb.append(getExpireDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>issuer</column-name><column-value><![CDATA[");
		sb.append(getIssuer());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contents</column-name><column-value><![CDATA[");
		sb.append(getContents());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>locationReference</column-name><column-value><![CDATA[");
		sb.append(getLocationReference());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFDocument.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFDocument.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _esfDocumentId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _ownerId;
	private long _originalOwnerId;
	private boolean _setOriginalOwnerId;
	private String _ownerType;
	private String _originalOwnerType;
	private String _name;
	private String _originalName;
	private long _number;
	private long _originalNumber;
	private boolean _setOriginalNumber;
	private Date _releaseDate;
	private Date _expireDate;
	private String _issuer;
	private String _originalIssuer;
	private String _contents;
	private String _locationReference;
	private String _originalLocationReference;
	private long _columnBitmask;
	private ESFDocument _escapedModel;
}