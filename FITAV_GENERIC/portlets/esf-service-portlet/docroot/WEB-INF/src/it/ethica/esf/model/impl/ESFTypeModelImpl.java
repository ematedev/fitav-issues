/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.ethica.esf.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import it.ethica.esf.model.ESFType;
import it.ethica.esf.model.ESFTypeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFType service. Represents a row in the &quot;ESFType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link it.ethica.esf.model.ESFTypeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFTypeImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFTypeImpl
 * @see it.ethica.esf.model.ESFType
 * @see it.ethica.esf.model.ESFTypeModel
 * @generated
 */
public class ESFTypeModelImpl extends BaseModelImpl<ESFType>
	implements ESFTypeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f type model instance should use the {@link it.ethica.esf.model.ESFType} interface instead.
	 */
	public static final String TABLE_NAME = "ESFType";
	public static final Object[][] TABLE_COLUMNS = {
			{ "esfTypeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "code_", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "className", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "typeParentId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFType (esfTypeId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,code_ VARCHAR(75) null,name VARCHAR(75) null,description VARCHAR(75) null,className VARCHAR(75) null,status VARCHAR(75) null,typeParentId LONG)";
	public static final String TABLE_SQL_DROP = "drop table ESFType";
	public static final String ORDER_BY_JPQL = " ORDER BY esfType.esfTypeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFType.esfTypeId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.it.ethica.esf.model.ESFType"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.it.ethica.esf.model.ESFType"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.it.ethica.esf.model.ESFType"),
			true);
	public static long CLASSNAME_COLUMN_BITMASK = 1L;
	public static long CODE_COLUMN_BITMASK = 2L;
	public static long NAME_COLUMN_BITMASK = 4L;
	public static long STATUS_COLUMN_BITMASK = 8L;
	public static long TYPEPARENTID_COLUMN_BITMASK = 16L;
	public static long ESFTYPEID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.it.ethica.esf.model.ESFType"));

	public ESFTypeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfTypeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfTypeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfTypeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFType.class;
	}

	@Override
	public String getModelClassName() {
		return ESFType.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("esfTypeId", getEsfTypeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("code", getCode());
		attributes.put("name", getName());
		attributes.put("description", getDescription());
		attributes.put("className", getClassName());
		attributes.put("status", getStatus());
		attributes.put("typeParentId", getTypeParentId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long esfTypeId = (Long)attributes.get("esfTypeId");

		if (esfTypeId != null) {
			setEsfTypeId(esfTypeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String code = (String)attributes.get("code");

		if (code != null) {
			setCode(code);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String className = (String)attributes.get("className");

		if (className != null) {
			setClassName(className);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long typeParentId = (Long)attributes.get("typeParentId");

		if (typeParentId != null) {
			setTypeParentId(typeParentId);
		}
	}

	@Override
	public long getEsfTypeId() {
		return _esfTypeId;
	}

	@Override
	public void setEsfTypeId(long esfTypeId) {
		_esfTypeId = esfTypeId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getCode() {
		if (_code == null) {
			return StringPool.BLANK;
		}
		else {
			return _code;
		}
	}

	@Override
	public void setCode(String code) {
		_columnBitmask |= CODE_COLUMN_BITMASK;

		if (_originalCode == null) {
			_originalCode = _code;
		}

		_code = code;
	}

	public String getOriginalCode() {
		return GetterUtil.getString(_originalCode);
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getClassName() {
		if (_className == null) {
			return StringPool.BLANK;
		}
		else {
			return _className;
		}
	}

	@Override
	public void setClassName(String className) {
		_columnBitmask |= CLASSNAME_COLUMN_BITMASK;

		if (_originalClassName == null) {
			_originalClassName = _className;
		}

		_className = className;
	}

	public String getOriginalClassName() {
		return GetterUtil.getString(_originalClassName);
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (_originalStatus == null) {
			_originalStatus = _status;
		}

		_status = status;
	}

	public String getOriginalStatus() {
		return GetterUtil.getString(_originalStatus);
	}

	@Override
	public long getTypeParentId() {
		return _typeParentId;
	}

	@Override
	public void setTypeParentId(long typeParentId) {
		_columnBitmask |= TYPEPARENTID_COLUMN_BITMASK;

		if (!_setOriginalTypeParentId) {
			_setOriginalTypeParentId = true;

			_originalTypeParentId = _typeParentId;
		}

		_typeParentId = typeParentId;
	}

	public long getOriginalTypeParentId() {
		return _originalTypeParentId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ESFType.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFType toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFType)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFTypeImpl esfTypeImpl = new ESFTypeImpl();

		esfTypeImpl.setEsfTypeId(getEsfTypeId());
		esfTypeImpl.setGroupId(getGroupId());
		esfTypeImpl.setCompanyId(getCompanyId());
		esfTypeImpl.setUserId(getUserId());
		esfTypeImpl.setUserName(getUserName());
		esfTypeImpl.setCreateDate(getCreateDate());
		esfTypeImpl.setModifiedDate(getModifiedDate());
		esfTypeImpl.setCode(getCode());
		esfTypeImpl.setName(getName());
		esfTypeImpl.setDescription(getDescription());
		esfTypeImpl.setClassName(getClassName());
		esfTypeImpl.setStatus(getStatus());
		esfTypeImpl.setTypeParentId(getTypeParentId());

		esfTypeImpl.resetOriginalValues();

		return esfTypeImpl;
	}

	@Override
	public int compareTo(ESFType esfType) {
		long primaryKey = esfType.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFType)) {
			return false;
		}

		ESFType esfType = (ESFType)obj;

		long primaryKey = esfType.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFTypeModelImpl esfTypeModelImpl = this;

		esfTypeModelImpl._originalCode = esfTypeModelImpl._code;

		esfTypeModelImpl._originalName = esfTypeModelImpl._name;

		esfTypeModelImpl._originalClassName = esfTypeModelImpl._className;

		esfTypeModelImpl._originalStatus = esfTypeModelImpl._status;

		esfTypeModelImpl._originalTypeParentId = esfTypeModelImpl._typeParentId;

		esfTypeModelImpl._setOriginalTypeParentId = false;

		esfTypeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFType> toCacheModel() {
		ESFTypeCacheModel esfTypeCacheModel = new ESFTypeCacheModel();

		esfTypeCacheModel.esfTypeId = getEsfTypeId();

		esfTypeCacheModel.groupId = getGroupId();

		esfTypeCacheModel.companyId = getCompanyId();

		esfTypeCacheModel.userId = getUserId();

		esfTypeCacheModel.userName = getUserName();

		String userName = esfTypeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			esfTypeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			esfTypeCacheModel.createDate = createDate.getTime();
		}
		else {
			esfTypeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			esfTypeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			esfTypeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		esfTypeCacheModel.code = getCode();

		String code = esfTypeCacheModel.code;

		if ((code != null) && (code.length() == 0)) {
			esfTypeCacheModel.code = null;
		}

		esfTypeCacheModel.name = getName();

		String name = esfTypeCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			esfTypeCacheModel.name = null;
		}

		esfTypeCacheModel.description = getDescription();

		String description = esfTypeCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			esfTypeCacheModel.description = null;
		}

		esfTypeCacheModel.className = getClassName();

		String className = esfTypeCacheModel.className;

		if ((className != null) && (className.length() == 0)) {
			esfTypeCacheModel.className = null;
		}

		esfTypeCacheModel.status = getStatus();

		String status = esfTypeCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			esfTypeCacheModel.status = null;
		}

		esfTypeCacheModel.typeParentId = getTypeParentId();

		return esfTypeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{esfTypeId=");
		sb.append(getEsfTypeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", code=");
		sb.append(getCode());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", className=");
		sb.append(getClassName());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", typeParentId=");
		sb.append(getTypeParentId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("it.ethica.esf.model.ESFType");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>esfTypeId</column-name><column-value><![CDATA[");
		sb.append(getEsfTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>code</column-name><column-value><![CDATA[");
		sb.append(getCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>className</column-name><column-value><![CDATA[");
		sb.append(getClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>typeParentId</column-name><column-value><![CDATA[");
		sb.append(getTypeParentId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFType.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFType.class
		};
	private long _esfTypeId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _code;
	private String _originalCode;
	private String _name;
	private String _originalName;
	private String _description;
	private String _className;
	private String _originalClassName;
	private String _status;
	private String _originalStatus;
	private long _typeParentId;
	private long _originalTypeParentId;
	private boolean _setOriginalTypeParentId;
	private long _columnBitmask;
	private ESFType _escapedModel;
}