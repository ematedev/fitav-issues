/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ethica.esf.model.impl;

import com.ethica.esf.model.ESFArticleType;
import com.ethica.esf.model.ESFArticleTypeModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ESFArticleType service. Represents a row in the &quot;ESFArticleType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ethica.esf.model.ESFArticleTypeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ESFArticleTypeImpl}.
 * </p>
 *
 * @author Ethica
 * @see ESFArticleTypeImpl
 * @see com.ethica.esf.model.ESFArticleType
 * @see com.ethica.esf.model.ESFArticleTypeModel
 * @generated
 */
public class ESFArticleTypeModelImpl extends BaseModelImpl<ESFArticleType>
	implements ESFArticleTypeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e s f article type model instance should use the {@link com.ethica.esf.model.ESFArticleType} interface instead.
	 */
	public static final String TABLE_NAME = "ESFArticleType";
	public static final Object[][] TABLE_COLUMNS = {
			{ "esfArticleTypeId", Types.BIGINT },
			{ "description", Types.VARCHAR },
			{ "department", Types.VARCHAR },
			{ "area", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table ESFArticleType (esfArticleTypeId LONG not null primary key,description VARCHAR(75) null,department VARCHAR(75) null,area VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table ESFArticleType";
	public static final String ORDER_BY_JPQL = " ORDER BY esfArticleType.esfArticleTypeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ESFArticleType.esfArticleTypeId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ethica.esf.model.ESFArticleType"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ethica.esf.model.ESFArticleType"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ethica.esf.model.ESFArticleType"),
			true);
	public static long DESCRIPTION_COLUMN_BITMASK = 1L;
	public static long ESFARTICLETYPEID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ethica.esf.model.ESFArticleType"));

	public ESFArticleTypeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _esfArticleTypeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEsfArticleTypeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _esfArticleTypeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ESFArticleType.class;
	}

	@Override
	public String getModelClassName() {
		return ESFArticleType.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("esfArticleTypeId", getEsfArticleTypeId());
		attributes.put("description", getDescription());
		attributes.put("department", getDepartment());
		attributes.put("area", getArea());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long esfArticleTypeId = (Long)attributes.get("esfArticleTypeId");

		if (esfArticleTypeId != null) {
			setEsfArticleTypeId(esfArticleTypeId);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String department = (String)attributes.get("department");

		if (department != null) {
			setDepartment(department);
		}

		String area = (String)attributes.get("area");

		if (area != null) {
			setArea(area);
		}
	}

	@Override
	public long getEsfArticleTypeId() {
		return _esfArticleTypeId;
	}

	@Override
	public void setEsfArticleTypeId(long esfArticleTypeId) {
		_esfArticleTypeId = esfArticleTypeId;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_columnBitmask |= DESCRIPTION_COLUMN_BITMASK;

		if (_originalDescription == null) {
			_originalDescription = _description;
		}

		_description = description;
	}

	public String getOriginalDescription() {
		return GetterUtil.getString(_originalDescription);
	}

	@Override
	public String getDepartment() {
		if (_department == null) {
			return StringPool.BLANK;
		}
		else {
			return _department;
		}
	}

	@Override
	public void setDepartment(String department) {
		_department = department;
	}

	@Override
	public String getArea() {
		if (_area == null) {
			return StringPool.BLANK;
		}
		else {
			return _area;
		}
	}

	@Override
	public void setArea(String area) {
		_area = area;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ESFArticleType.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ESFArticleType toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ESFArticleType)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ESFArticleTypeImpl esfArticleTypeImpl = new ESFArticleTypeImpl();

		esfArticleTypeImpl.setEsfArticleTypeId(getEsfArticleTypeId());
		esfArticleTypeImpl.setDescription(getDescription());
		esfArticleTypeImpl.setDepartment(getDepartment());
		esfArticleTypeImpl.setArea(getArea());

		esfArticleTypeImpl.resetOriginalValues();

		return esfArticleTypeImpl;
	}

	@Override
	public int compareTo(ESFArticleType esfArticleType) {
		long primaryKey = esfArticleType.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ESFArticleType)) {
			return false;
		}

		ESFArticleType esfArticleType = (ESFArticleType)obj;

		long primaryKey = esfArticleType.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ESFArticleTypeModelImpl esfArticleTypeModelImpl = this;

		esfArticleTypeModelImpl._originalDescription = esfArticleTypeModelImpl._description;

		esfArticleTypeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ESFArticleType> toCacheModel() {
		ESFArticleTypeCacheModel esfArticleTypeCacheModel = new ESFArticleTypeCacheModel();

		esfArticleTypeCacheModel.esfArticleTypeId = getEsfArticleTypeId();

		esfArticleTypeCacheModel.description = getDescription();

		String description = esfArticleTypeCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			esfArticleTypeCacheModel.description = null;
		}

		esfArticleTypeCacheModel.department = getDepartment();

		String department = esfArticleTypeCacheModel.department;

		if ((department != null) && (department.length() == 0)) {
			esfArticleTypeCacheModel.department = null;
		}

		esfArticleTypeCacheModel.area = getArea();

		String area = esfArticleTypeCacheModel.area;

		if ((area != null) && (area.length() == 0)) {
			esfArticleTypeCacheModel.area = null;
		}

		return esfArticleTypeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{esfArticleTypeId=");
		sb.append(getEsfArticleTypeId());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", department=");
		sb.append(getDepartment());
		sb.append(", area=");
		sb.append(getArea());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.ethica.esf.model.ESFArticleType");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>esfArticleTypeId</column-name><column-value><![CDATA[");
		sb.append(getEsfArticleTypeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>department</column-name><column-value><![CDATA[");
		sb.append(getDepartment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>area</column-name><column-value><![CDATA[");
		sb.append(getArea());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ESFArticleType.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ESFArticleType.class
		};
	private long _esfArticleTypeId;
	private String _description;
	private String _originalDescription;
	private String _department;
	private String _area;
	private long _columnBitmask;
	private ESFArticleType _escapedModel;
}